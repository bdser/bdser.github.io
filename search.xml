<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[elk-redis]]></title>
    <url>%2F2016%2F09%2F06%2Felk-redis%2F</url>
    <content type="text"><![CDATA[前期规划 10.128.28.196 (nginx + apahe logstash收集日志(shipper)) 10.128.28.197 (redis + logstash 获取日志(indexer)) 10.128.28.198 (elasticsearch + kibana ) 系统版本 12cat /etc/redhat-release CentOS Linux release 7.2.1511 (Core) logstash安装logstash 采用配置yum源的方式安装logstash 12345678[root@office-docker-registry]# cat /etc/yum.repos.d/logstash.repo [logstash-2.3]name=Logstash repository for 2.3.x packagesbaseurl=https://packages.elastic.co/logstash/2.3/centosgpgcheck=1gpgkey=https://packages.elastic.co/GPG-KEY-elasticsearchenabled=1[root@office-docker-registry ~]# yum install -y logstash 配置logstash 默认配置文件路径,默认是没有任何配置的 1234567891011121314151617[root@office-docker-registryr ~]# rpm -ql logstash | grep /etc/logstash /etc/logstash/conf.d[root@office-docker-registry ~]# cd /etc/logstash/conf.d/[root@office-docker-registry conf.d]# vim simple.conf [root@office-docker-registry conf.d]# cat simple.conf input &#123; stdin&#123;&#125; &#125;output &#123; stdout &#123; codec =&gt; rubydebug &#125;&#125; 测试配置文件格式是否正确12[root@office-docker-registry conf.d]# logstash -f simple.conf --configtestConfiguration OK 写个hello world 玩玩 依赖java 启动加载比较慢可以看下输出的格式 12345678910111213[root@office-docker-registry conf.d]# logstash -f simple.conf Settings: Default pipeline workers: 1Pipeline main startedhello world #手动输入hello world 按回车返回以下信息&#123; &quot;message&quot; =&gt; &quot;hello world&quot;, #输入的信息 &quot;@version&quot; =&gt; &quot;1&quot;, #版本 &quot;@timestamp&quot; =&gt; &quot;2016-09-06T14:33:18.647Z&quot;, &quot;host&quot; =&gt; &quot;mesos-master&quot; #主机名&#125;安ctrl + d 退出 安装httpd12[root@office-docker-registry ~]# yum install -y httpd[root@office-docker-registry ~]# systemctl start httpd apache 日志格式1LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%&#123;Referer&#125;i\&quot; \&quot;%&#123;User-Agent&#125;i\&quot;&quot; combined apache 输出日志110.128.0.12 - - [06/Sep/2016:21:17:01 +0800] &quot;GET /noindex/css/open-sans.css HTTP/1.1&quot; 304 - &quot;http://10.128.28.196/&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0&quot; logstash收集apache日志 如下可以看到grok-patterns,该文件提供了apache的grok匹配,只需要引用相关变量即可 12[root@office-docker-registry conf.d]# rpm -ql logstash | grep grok-patterns/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-2.0.2/patterns/grok-patterns 收集apapche日志配置如下(输出到终端测试) 12345678910111213141516171819202122232425262728293031323334353637383940[root@office-docker-registry conf.d]# cat apachesimple2.conf input &#123; file &#123; path =&gt; &quot;/var/log/httpd/access_log&quot; start_position =&gt; &quot;beginning&quot; type =&gt; &quot;apache-access&quot; &#125; &#125;filter &#123; if [type] == &apos;apache-access&apos; &#123; grok &#123; match =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;COMBINEDAPACHELOG&#125;&quot; &#125; overwrite =&gt; [ &quot;message&quot; ] remove_field =&gt; [&quot;message&quot; ] &#125; date &#123; match =&gt; [&quot;timestamp&quot; , &quot;dd/MMM/YYYY:HH:mm:ss Z&quot;] &#125; urldecode &#123; all_fields =&gt; true &#125; mutate &#123; convert =&gt; &#123;&quot;response&quot; =&gt; &quot;integer&quot;&#125; convert =&gt; &#123;&quot;bytes&quot; =&gt; &quot;integer&quot;&#125; gsub =&gt; [ &quot;referrer&quot;,&apos;\&quot;&apos;, &quot;&quot;, &quot;agent&quot;,&apos;\&quot;&apos;,&quot;&quot; ] &#125; &#125;&#125; output &#123; stdout &#123; codec =&gt; rubydebug &#125; &#125; 先加上 —configtest进行测试,没问题后在执行 123456789101112131415161718192021[root@office-docker-registry conf.d]# /opt/logstash/bin/logstash -f apachesimple2.conf Settings: Default pipeline workers: 1Logstash startup completed&#123; &quot;@version&quot; =&gt; &quot;1&quot;, &quot;@timestamp&quot; =&gt; &quot;2016-09-06T14:01:45.000Z&quot;, &quot;path&quot; =&gt; &quot;/var/log/httpd/access_log&quot;, &quot;host&quot; =&gt; &quot;0.0.0.0&quot;, &quot;type&quot; =&gt; &quot;apache-access&quot;, &quot;clientip&quot; =&gt; &quot;172.16.96.36&quot;, &quot;ident&quot; =&gt; &quot;-&quot;, &quot;auth&quot; =&gt; &quot;-&quot;, &quot;timestamp&quot; =&gt; &quot;06/Sep/2016:22:01:45 +0800&quot;, &quot;verb&quot; =&gt; &quot;GET&quot;, &quot;request&quot; =&gt; &quot;/&quot;, &quot;httpversion&quot; =&gt; &quot;1.1&quot;, &quot;response&quot; =&gt; 403, &quot;bytes&quot; =&gt; 4897, &quot;referrer&quot; =&gt; &quot;-&quot;, &quot;agent&quot; =&gt; &quot;curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.21 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2&quot;&#125; 安装nginx yum安装比较方便,为了测试 12yum install nginx -ysystemctl start nginx #启动nginx(这里要注意nginx和httpd记得修改监听端口,避免重复) nginx 日志格式(这里根据需要,我修改了默认格式,自定义日志格式) nginx监听在81端口 12345log_format main &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos; &apos;$status $body_bytes_sent &quot;$http_referer&quot; &quot;$http_cookie&quot; &apos; &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot; &apos; &apos;$upstream_addr $upstream_status $upstream_cache_status &apos; &apos;$request_time&apos;; nginx 输出格式110.128.0.12 - - [06/Sep/2016:21:49:54 +0800] &quot;GET /poweredby.png HTTP/1.1&quot; 304 0 &quot;http://10.128.28.196:81/&quot; &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0&quot; &quot;-&quot; - - - 0.000 logstash 收集nginx日志 需要自定义模式,grok-patterns自带的正则不满足nginx日志需求新建目录,存放自定义匹配nginx日志的模式文件nginxlog 12345[root@office-docker-registry conf.d]# mkdir /opt/logstash/patterns/[root@office-docker-registry conf.d]# cd /opt/logstash/patterns/[root@office-docker-registry patterns]# cat nginxlogNGINXACCESS %&#123;IP:remote_ip&#125; (%&#123;USER:ident&#125;|-&#125;) (%&#123;USER:auth&#125;|-) \[%&#123;HTTPDATE:timestamp&#125;\] &quot;%&#123;WORD:method&#125; %&#123;NOTSPACE:request&#125; (?:HTTP/%&#123;NUMBER:httpversion&#125;)&quot; %&#123;NUMBER:status&#125; (?:%&#123;NUMBER:bytes&#125;|-) %&#123;QS:referer&#125; %&#123;QS:http_cookie&#125; %&#123;QS:ua&#125; %&#123;QS:xff&#125; (%&#123;URIHOST:upstream_host&#125;|-) (%&#123;NUMBER:upstream_response&#125;|-) (%&#123;WORD:upstream_cache_status&#125;|-) (%&#123;BASE16FLOAT:request_time&#125;|-) 收集nginx配置如下(输出到终端测试) 1234567891011121314151617181920212223242526272829303132333435363738[root@office-docker-registry conf.d]# cat nginx2.conf input &#123; file &#123; path =&gt; &quot;/var/log/nginx/access.log&quot; start_position =&gt; &quot;beginning&quot; &#125; &#125;filter &#123; grok &#123; patterns_dir =&gt; &quot;/opt/logstash/patterns/nginxlog&quot; #指定寻找nginxlog匹配模式的路径 match =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;NGINXACCESS&#125;&quot; &#125; #引用名称(相当于这个模式匹配的名称) remove_field =&gt; [&quot;message&quot; ] #移除message,避免重复输出俩次 &#125; date &#123; match =&gt; [&quot;timestamp&quot; , &quot;dd/MMM/YYYY:HH:mm:ss Z&quot;] &#125; urldecode &#123; all_fields =&gt; true &#125; mutate &#123; convert =&gt; &#123;&quot;response&quot; =&gt; &quot;integer&quot;&#125; #repsonse字段 变成整数 convert =&gt; &#123;&quot;bytes&quot; =&gt; &quot;integer&quot;&#125; #bytes字段 变成整数 gsub =&gt; [ &quot;referer&quot;,&apos;\&quot;&apos;, &quot;&quot;, #替换referer字段的\&quot; 为 空 &quot;ua&quot;,&apos;\&quot;&apos;,&quot;&quot;, &quot;xff&quot;,&apos;\&quot;&apos;,&quot;&quot; ] &#125;&#125; output &#123; stdout &#123; codec =&gt; rubydebug #输出到终端 &#125; &#125; 加上 —configtest测试没问题后在执行 1234567891011121314151617181920212223[root@office-docker-registry ~]# /opt/logstash/bin/logstash -f /etc/logstash/conf.d/nginx3.conf Settings: Default pipeline workers: 1Logstash startup completed&#123; &quot;@version&quot; =&gt; &quot;1&quot;, &quot;@timestamp&quot; =&gt; &quot;2016-09-07T00:21:46.000Z&quot;, &quot;path&quot; =&gt; &quot;/var/log/nginx/access.log&quot;, &quot;host&quot; =&gt; &quot;0.0.0.0&quot;, &quot;remote_ip&quot; =&gt; &quot;10.128.0.12&quot;, &quot;ident&quot; =&gt; &quot;-&quot;, &quot;auth&quot; =&gt; &quot;-&quot;, &quot;timestamp&quot; =&gt; &quot;07/Sep/2016:08:21:46 +0800&quot;, &quot;method&quot; =&gt; &quot;GET&quot;, &quot;request&quot; =&gt; &quot;/&quot;, &quot;httpversion&quot; =&gt; &quot;1.1&quot;, &quot;status&quot; =&gt; &quot;200&quot;, &quot;bytes&quot; =&gt; 3700, &quot;referer&quot; =&gt; &quot;-&quot;, &quot;http_cookie&quot; =&gt; &quot;\&quot;-\&quot;&quot;, &quot;ua&quot; =&gt; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Maxthon/4.4.6.1000 Chrome/30.0.1599.101 Safari/537.36&quot;, &quot;xff&quot; =&gt; &quot;-&quot;, &quot;request_time&quot; =&gt; &quot;0.000&quot;&#125; 额外提供nginx 原始日志匹配 提供nginx原始标准日志格式匹配. 123456789#yum装完,不做改变,原始标准日志格式log_format main &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos; &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos; &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;#nginx 输出格式10.128.0.12 - - [07/Sep/2016:08:27:59 +0800] &quot;GET / HTTP/1.1&quot; 200 3700 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Maxthon/4.4.6.1000 Chrome/30.0.1599.101 Safari/537.36&quot; &quot;-&quot;#nginx匹配NGINXACCESS %&#123;IP:remote_ip&#125; (%&#123;USER:ident&#125;|-) (%&#123;USER:auth&#125;|-) \[%&#123;HTTPDATE:timestamp&#125;\] &quot;%&#123;WORD:method&#125; %&#123;NOTSPACE:request&#125; (?:HTTP/%&#123;NUMBER:httpversion&#125;)&quot; %&#123;NUMBER:status&#125; (?:%&#123;NUMBER:bytes&#125;|-) %&#123;QS:referer&#125; %&#123;QS:http_cookie&#125; %&#123;QS:ua&#125; %&#123;QS:xff 安装supervisord (报错有点问题,待解决)1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950[root@office-docker-registry conf.d]# yum install supervisor -y[root@office-docker-registry conf.d]# vim /etc/supervisord.d/logstash.ini [root@office-docker-registry supervisord.d]# cat logstash.ini [program:logstash-nginx]command=/opt/logstash/bin/logstash -f /etc/logstash/conf.d/nginx3-to-redis.confautostart=trueautorestart=truestartsecs=20stdout_logfile=/opt/logstash/logs/logstash_nginx_stdout.logstdout_logfile_maxbytes=1MBstdout_logfile_backups=10stdout_capture_maxbytes=1MBstdout_events_enabled=falsestderr_logfile=/opt/logstash/logs/logstash_nginx_stderr.logstderr_logfile_maxbytes=1MBstderr_logfile_backups=10stderr_capture_maxbytes=1MBstderr_events_enabled=false[program:logstash-apache]command=/opt/logstash/bin/logstash -f /etc/logstash/conf.d/apachesimple2.confautostart=trueautorestart=truestartsecs=20stdout_logfile=/opt/logstash/logs/logstash_apache_stdout.logstdout_logfile_maxbytes=1MBstdout_logfile_backups=10stdout_capture_maxbytes=1MBstdout_events_enabled=falsestderr_logfile=/opt/logstash/logs/logstash_apache_stderr.logstderr_logfile_maxbytes=1MBstderr_logfile_backups=10stderr_capture_maxbytes=1MBstderr_events_enabled=false[root@office-docker-registry conf.d]# mkdir /opt/logstash/logs -pv [root@office-docker-registry supervisord.d]# systemctl start supervisord [root@office-docker-registry supervisord.d]# systemctl status supervisord ● supervisord.service - Process Monitoring and Control Daemon Loaded: loaded (/usr/lib/systemd/system/supervisord.service; disabled; vendor preset: disabled) Active: active (running) since Tue 2016-09-06 23:46:42 CST; 6s ago Process: 7108 ExecStart=/usr/bin/supervisord -c /etc/supervisord.conf (code=exited, status=0/SUCCESS) Main PID: 7111 (supervisord) Memory: 202.0M CGroup: /system.slice/supervisord.service ├─7111 /usr/bin/python /usr/bin/supervisord -c /etc/supervisord.conf ├─7112 /usr/bin/java -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -Djava.awt.headless=true -XX:CMSInitiatingOccupancyFraction=75 -X... └─7113 /usr/bin/java -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -Djava.awt.headless=true -XX:CMSInitiatingOccupancyFraction=75 -X...Sep 06 23:46:42 office-docker-registry systemd[1]: Starting Process Monitoring and Control Daemon...Sep 06 23:46:42 office-docker-registry systemd[1]: Started Process Monitoring and Control Daemon. 采用开俩个终端分别启动logstash收集nginx和apache nginx 1234567891011121314151617181920212223242526272829303132333435363738394041input &#123; file &#123; path =&gt; &quot;/var/log/nginx/access.log&quot; start_position =&gt; &quot;beginning&quot; type =&gt; &quot;nginx-access&quot;&#125;&#125;filter &#123; grok &#123; patterns_dir =&gt; &quot;/opt/logstash/patterns/nginxlog3&quot; match =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;NGINXACCESS&#125;&quot; &#125; overwrite =&gt; [ &quot;message&quot; ] remove_field =&gt; [&quot;message&quot; ] &#125; date &#123; match =&gt; [&quot;timestamp&quot; , &quot;dd/MMM/YYYY:HH:mm:ss Z&quot;] &#125; urldecode &#123; all_fields =&gt; true &#125; mutate &#123; convert =&gt; &#123;&quot;response&quot; =&gt; &quot;integer&quot;&#125; convert =&gt; &#123;&quot;bytes&quot; =&gt; &quot;integer&quot;&#125; gsub =&gt; [ &quot;referer&quot;,&apos;\&quot;&apos;, &quot;&quot;, &quot;ua&quot;,&apos;\&quot;&apos;,&quot;&quot;, &quot;xff&quot;,&apos;\&quot;&apos;,&quot;&quot; ] &#125;&#125; output &#123; redis &#123; data_type =&gt; &quot;list&quot; key =&gt; &quot;nginx-access&quot; host =&gt; &quot;10.128.28.197&quot; port =&gt; 6379 workers =&gt; 5 &#125;&#125;#启动/opt/logstash/bin/logstash -f /etc/logstash/conf.d/nginx-to-redis.conf apache 123456789101112131415161718192021222324252627282930313233343536373839404142input &#123; file &#123; path =&gt; &quot;/var/log/httpd/access_log&quot; start_position =&gt; &quot;beginning&quot; type =&gt; &quot;apache-access&quot; &#125; &#125;filter &#123; if [type] == &quot;apache-access&quot; &#123; grok &#123; match =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;COMBINEDAPACHELOG&#125;&quot; &#125; overwrite =&gt; [ &quot;message&quot; ] remove_field =&gt; [&quot;message&quot; ] &#125; date &#123; match =&gt; [&quot;timestamp&quot; , &quot;dd/MMM/YYYY:HH:mm:ss Z&quot;] &#125; urldecode &#123; all_fields =&gt; true &#125; mutate &#123; convert =&gt; &#123;&quot;response&quot; =&gt; &quot;integer&quot;&#125; convert =&gt; &#123;&quot;bytes&quot; =&gt; &quot;integer&quot;&#125; gsub =&gt; [ &quot;referrer&quot;,&apos;\&quot;&apos;, &quot;&quot;, &quot;agent&quot;,&apos;\&quot;&apos;,&quot;&quot; ] &#125; &#125; &#125; output &#123; redis &#123; data_type =&gt; &quot;list&quot; key =&gt; &quot;apache-access&quot; host =&gt; &quot;10.128.28.197&quot; port =&gt; 6379 workers =&gt; 5 &#125;&#125;#启动/opt/logstash/bin/logstash -f /etc/logstash/conf.d/apache-to-redis.conf 安装redis123456789101112131415161718192021wget wget http://download.redis.io/releases/redis-3.2.1.tar.gz tar xf redis-3.2.1.tar.gz -C /usr/local/cd /usr/local/mv redis-3.2.1 rediscd redismake &amp;&amp; make install cd /usr/local/redis/src cp redis-cli redis-server /usr/bin/vim /usr/local/redis/redis.conf #编辑配置文件 daemonize yes #是否以后台daemon方式运行，默认不是后台运行 pidfile /var/run/redis/redis.pid #redis的PID文件路径 bind 10.128.28.197 #绑定主机IP，默认值为127.0.0.1，我们是跨机器运行，所以需要 logfile /data/logs/redis/redis.log #定义log文件位置，模式log信息定向到stdout，输出到/dev/null save 60 1000 #重新定义快照的频率 dir /data/redis/ #定义data目录mkdir /var/run/redismkdir /data/logs/redis/ -pvmkdir /data/redisredis-server /usr/local/redis/redis.conf 安装logtash-indexer同上面一样 配置logstash获取nginx+apache的日志 12345678910111213141516171819202122232425262728293031323334cat /etc/logstash/conf.d/server.conf input &#123; redis &#123; data_type =&gt; &quot;list&quot; key =&gt; &quot;nginx-access&quot; host =&gt; &quot;10.128.28.197&quot; port =&gt; 6379 threads =&gt; 5 &#125; redis &#123; data_type =&gt; &quot;list&quot; key =&gt; &quot;apache-access&quot; host =&gt; &quot;10.128.28.197&quot; port =&gt; 6379 threads =&gt; 5 &#125;&#125;output &#123; elasticsearch &#123; hosts =&gt; [&quot;10.128.28.198:9200&quot;] index =&gt; &quot;logstash-%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;&quot; document_type =&gt; &quot;%&#123;type&#125;&quot; workers =&gt; 5 flush_size =&gt; 3000 template_overwrite =&gt; true&#125;&#125;#启动/opt/logstash/bin/logstash -f /etc/logstash/conf.d/server.conf 查看redis 开始访问nginx和apache页面 12345678910111213(integer) 1127.0.0.1:6379&gt; LLEN nginx-access(integer) 1127.0.0.1:6379&gt; LLEN nginx-access(integer) 187127.0.0.1:6379&gt; LLEN apache-access(integer) 364127.0.0.1:6379&gt; LLEN nginx-access(integer) 279127.0.0.1:6379&gt; LINDEX nginx-access 0 &quot;&#123;\&quot;@version\&quot;:\&quot;1\&quot;,\&quot;@timestamp\&quot;:\&quot;2016-09-06T15:32:06.000Z\&quot;,\&quot;path\&quot;:\&quot;/var/log/nginx/access.log\&quot;,\&quot;host\&quot;:\&quot;0.0.0.0\&quot;,\&quot;type\&quot;:\&quot;nginx-access\&quot;,\&quot;remote_ip\&quot;:\&quot;10.128.28.196\&quot;,\&quot;ident\&quot;:\&quot;-\&quot;,\&quot;auth\&quot;:\&quot;-\&quot;,\&quot;timestamp\&quot;:\&quot;06/Sep/2016:23:32:06 +0800\&quot;,\&quot;method\&quot;:\&quot;HEAD\&quot;,\&quot;request\&quot;:\&quot;/\&quot;,\&quot;httpversion\&quot;:\&quot;1.1\&quot;,\&quot;status\&quot;:\&quot;200\&quot;,\&quot;bytes\&quot;:0,\&quot;referer\&quot;:\&quot;-\&quot;,\&quot;http_cookie\&quot;:\&quot;\\\&quot;-\\\&quot;\&quot;,\&quot;ua\&quot;:\&quot;curl/7.29.0\&quot;,\&quot;xff\&quot;:\&quot;-\&quot;,\&quot;request_time\&quot;:\&quot;0.000\&quot;&#125;&quot;127.0.0.1:6379&gt; LINDEX nginx-access 0 &quot;&#123;\&quot;@version\&quot;:\&quot;1\&quot;,\&quot;@timestamp\&quot;:\&quot;2016-09-06T15:32:06.000Z\&quot;,\&quot;path\&quot;:\&quot;/var/log/nginx/access.log\&quot;,\&quot;host\&quot;:\&quot;0.0.0.0\&quot;,\&quot;type\&quot;:\&quot;nginx-access\&quot;,\&quot;remote_ip\&quot;:\&quot;10.128.28.196\&quot;,\&quot;ident\&quot;:\&quot;-\&quot;,\&quot;auth\&quot;:\&quot;-\&quot;,\&quot;timestamp\&quot;:\&quot;06/Sep/2016:23:32:06 +0800\&quot;,\&quot;method\&quot;:\&quot;HEAD\&quot;,\&quot;request\&quot;:\&quot;/\&quot;,\&quot;httpversion\&quot;:\&quot;1.1\&quot;,\&quot;status\&quot;:\&quot;200\&quot;,\&quot;bytes\&quot;:0,\&quot;referer\&quot;:\&quot;-\&quot;,\&quot;http_cookie\&quot;:\&quot;\\\&quot;-\\\&quot;\&quot;,\&quot;ua\&quot;:\&quot;curl/7.29.0\&quot;,\&quot;xff\&quot;:\&quot;-\&quot;,\&quot;request_time\&quot;:\&quot;0.000\&quot;&#125; 安装elasticsearch123456789[root@localhost ~]# cat /etc/yum.repos.d/elasticsearch.repo [elasticsearch-2.x]name=Elasticsearch repository for 2.x packagesbaseurl=https://packages.elastic.co/elasticsearch/2.x/centosgpgcheck=1gpgkey=https://packages.elastic.co/GPG-KEY-elasticsearchenabled=1yum install -y elasticsearch elasticsearch修改配置文件 这里先不使用集群,单机做测试 123456789101112131415161718192021222324252627[root@office-28-198 ~]# grep -v &quot;^#&quot; /etc/elasticsearch/elasticsearch.yml | grep -v &quot;^$&quot;path.data: /data/elk/datapath.logs: /data/elk/logsbootstrap。mlockall: truehttp.port: 9200network.host: 10.128.28.198[root@office-28-198 ~]# mkdir -pv /data/elk/&#123;data,logs&#125; #安装插件[root@office-28-198 ~]# /usr/share/elasticsearch/bin/plugin install mobz/elasticsearc-head [root@office-28-198 ~]# /usr/share/elasticsearch/bin/plugin install lmenezes/elasticsearch-kopf#启动[root@office-28-198 ~]# systemctl start elasticsearch [root@office-28-198 ~]# systemctl status elasticsearch #测试一下[root@office-28-198 ~]# curl http://10.128.28.198:9200&#123; &quot;name&quot; : &quot;Black Talon&quot;, &quot;cluster_name&quot; : &quot;elasticsearch&quot;, &quot;version&quot; : &#123; &quot;number&quot; : &quot;2.3.5&quot;, &quot;build_hash&quot; : &quot;90f439ff60a3c0f497f91663701e64ccd01edbb4&quot;, &quot;build_timestamp&quot; : &quot;2016-07-27T10:36:52Z&quot;, &quot;build_snapshot&quot; : false, &quot;lucene_version&quot; : &quot;5.5.0&quot; &#125;, &quot;tagline&quot; : &quot;You Know, for Search&quot;&#125; 安装kinana123456789[root@localhost]# cat /etc/yum.repos.d/kibana.repo [kibana-4.5]name=Kibana repository for 4.5.x packagesbaseurl=http://packages.elastic.co/kibana/4.5/centosgpgcheck=1gpgkey=http://packages.elastic.co/GPG-KEY-elasticsearchenabled=1yum install -y kibana 修改配置,连接elasticsearch 1234[root@office-28-198 ~]# vim /opt/kibana/config/kibana.yml elasticsearch.url: &quot;http://10.128.28.198:9200&quot;[root@office-28-198 ~]# systemctl start kibana[root@office-28-198 ~]# systemctl status kibana 访问 1http://10.128.28.198:5601 如图]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>elk</tag>
      </tags>
  </entry>
</search>
