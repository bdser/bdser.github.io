<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凡步</title>
  
  <subtitle>一个专注技术的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://budongshu.gitee.io/"/>
  <updated>2020-03-27T07:58:35.573Z</updated>
  <id>http://budongshu.gitee.io/</id>
  
  <author>
    <name>凡步</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>go_helloword.md</title>
    <link href="http://budongshu.gitee.io/2020/03/27/go-helloword-md/"/>
    <id>http://budongshu.gitee.io/2020/03/27/go-helloword-md/</id>
    <published>2020-03-27T07:57:38.000Z</published>
    <updated>2020-03-27T07:58:35.573Z</updated>
    
    <content type="html"><![CDATA[<p>go 语言第一个程序</p><h3 id="go语言规范"><a href="#go语言规范" class="headerlink" title="go语言规范"></a>go语言规范</h3><h4 id="go程序规范"><a href="#go程序规范" class="headerlink" title="go程序规范"></a>go程序规范</h4><p>go语言以包作为管理单位</p><p>每个文件必须声明包</p><p>程序必须有一个main包(重要)</p><a id="more"></a><h4 id="go工程规范"><a href="#go工程规范" class="headerlink" title="go工程规范"></a>go工程规范</h4><p>go入口，go有且只有一个入口函数main</p><pre><code>一个文件里面只能有一个main函数</code></pre><p>干活 执行函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"><span class="comment">//入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">//打印</span></span><br><span class="line"><span class="function">//"<span class="title">hello</span> <span class="title">go</span>"打印到屏幕，<span class="title">PrintLn</span><span class="params">()</span>会自动换行</span></span><br><span class="line"><span class="function">//调用函数，大部分都需要导入包</span></span><br><span class="line"><span class="function">/*</span></span><br><span class="line"><span class="function">这也是注释，这是块注释</span></span><br><span class="line"><span class="function">*/</span></span><br><span class="line">fmt.PrintLn("hello go") //go语言语句结尾是没有分号的</span><br><span class="line">fmt.PirintLn(<span class="string">"hello bds"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> build xxx.<span class="keyword">go</span>  <span class="comment">//通过编译xxx.go文件 然后生成一个以xx为名字的程序 直接执行xxx程序 输出程序结果</span></span><br><span class="line"><span class="keyword">go</span> run   xxx.<span class="keyword">go</span>  <span class="comment">//通过run 不生成程序 执行运行 一次性输出程序结果</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">###示例</span><br><span class="line">➜  main <span class="keyword">go</span> build hello.<span class="keyword">go</span></span><br><span class="line">➜  main ./hello</span><br><span class="line">hello.中国</span><br><span class="line">➜  main ls</span><br><span class="line">hello     hello.<span class="keyword">go</span>  value1    value1.<span class="keyword">go</span></span><br><span class="line">➜  main rm -fr hello</span><br><span class="line">➜  main ll</span><br><span class="line">total <span class="number">3744</span></span><br><span class="line">-rw-r--r--  <span class="number">1</span> budongshu  staff    <span class="number">74</span>B <span class="number">10</span> <span class="number">16</span> <span class="number">14</span>:<span class="number">04</span> hello.<span class="keyword">go</span></span><br><span class="line">-rwxr-xr-x  <span class="number">1</span> budongshu  staff   <span class="number">1.8</span>M <span class="number">10</span> <span class="number">16</span> <span class="number">16</span>:<span class="number">47</span> value1</span><br><span class="line">-rw-r--r--  <span class="number">1</span> budongshu  staff   <span class="number">124</span>B <span class="number">10</span> <span class="number">16</span> <span class="number">16</span>:<span class="number">46</span> value1.<span class="keyword">go</span></span><br><span class="line">➜  main <span class="keyword">go</span> run hello.<span class="keyword">go</span></span><br><span class="line">hello.中国</span><br><span class="line">➜  main ls</span><br><span class="line">hello.<span class="keyword">go</span>  value1    value1.<span class="keyword">go</span></span><br></pre></td></tr></table></figure><h4 id="go数据类型"><a href="#go数据类型" class="headerlink" title="go数据类型"></a>go数据类型</h4><p>计算机用来计算，计算前需要存数，如何存一个数呢</p><p> 数据类型作用: 告诉编译器这个数(变量) 应该以多大的内存存储</p><h5 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h5><p>go 语言中函数名 变量名 常量名 类型名 语句标号和包名等所有的命名，都遵循一个简单的</p><p>命名规则: 一个名字必须以一个字母或者下划线开头，后面可以跟任意数量的字母，数字</p><p>或者下划线。大写字母和小写字母是不同的，heapSort Heapsort 是俩个不同的变量名字</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span>  <span class="comment">//导入包的时候必须要使用</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//变量，程序运行期间，可以改变的量</span></span><br><span class="line"><span class="comment">//声明格式: var 变量名 类型; 变量声明了，必须要使用</span></span><br><span class="line"><span class="comment">//声明变量没有初始化的变量，默认值为0</span></span><br><span class="line"><span class="comment">//同一个函数的&#123;&#125;里，声明的变量名是唯一的，不允许同名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span></span><br><span class="line">fmt.Println(<span class="string">"a = "</span>,a)</span><br><span class="line"><span class="comment">//可以同时声明多个变量</span></span><br><span class="line"><span class="comment">//var b,c int</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>     <span class="comment">//变量的赋值</span></span><br><span class="line">fmt.Println(<span class="string">"a = "</span>,a)</span><br><span class="line"><span class="comment">//变量的初始化： 声明变量时候，同时赋值</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">int</span> = <span class="number">10</span> <span class="comment">//初始化: 声明变量时，同时赋值(一步到位)</span></span><br><span class="line">b = <span class="number">20</span>         <span class="comment">//赋值: 先声明，后赋值</span></span><br><span class="line">fmt.Println(<span class="string">"b = "</span>,b)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动推导类型，必须初始化，因为它是通过初始化的值来确定类型</span></span><br><span class="line">c := <span class="number">30</span></span><br><span class="line"><span class="comment">//%T 打印变量的所属类型</span></span><br><span class="line">fmt.Printf(<span class="string">"c type is %T\n"</span>,c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;go 语言第一个程序&lt;/p&gt;&lt;h3 id=&quot;go语言规范&quot;&gt;&lt;a href=&quot;#go语言规范&quot; class=&quot;headerlink&quot; title=&quot;go语言规范&quot;&gt;&lt;/a&gt;go语言规范&lt;/h3&gt;&lt;h4 id=&quot;go程序规范&quot;&gt;&lt;a href=&quot;#go程序规范&quot; class=&quot;headerlink&quot; title=&quot;go程序规范&quot;&gt;&lt;/a&gt;go程序规范&lt;/h4&gt;&lt;p&gt;go语言以包作为管理单位&lt;/p&gt;&lt;p&gt;每个文件必须声明包&lt;/p&gt;&lt;p&gt;程序必须有一个main包(重要)&lt;/p&gt;
    
    </summary>
    
    
      <category term="go" scheme="http://budongshu.gitee.io/categories/go/"/>
    
    
      <category term="go" scheme="http://budongshu.gitee.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>cachecloud_redis4.0</title>
    <link href="http://budongshu.gitee.io/2020/03/27/cachecloud-redis4-0/"/>
    <id>http://budongshu.gitee.io/2020/03/27/cachecloud-redis4-0/</id>
    <published>2020-03-27T07:55:52.000Z</published>
    <updated>2020-03-27T07:56:58.060Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cachecloud tag1.2</span><br><span class="line">mysql5.7</span><br><span class="line">maven3.6</span><br><span class="line">jdk1.7+</span><br><span class="line">redis4.0</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="cachecloud"><a href="#cachecloud" class="headerlink" title="cachecloud"></a>cachecloud</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root/</span><br><span class="line">git clone https://github.com/sohutv/cachecloud.git</span><br></pre></td></tr></table></figure><h3 id="mysql5-7-21"><a href="#mysql5-7-21" class="headerlink" title="mysql5.7.21"></a>mysql5.7.21</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> wget http://dev.mysql.com/get/mysql57-community-release-el6-8.noarch.rpm</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum install mysql-community-server mysql-community-client</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/init.d/mysqld start</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> grep <span class="string">'temporary password'</span> /var/<span class="built_in">log</span>/mysqld.log</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql&gt; ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'tester'</span>;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql&gt; create database cachecloud default character <span class="built_in">set</span> utf8 collate utf8_bin;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql&gt; use cachecloud;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql&gt; <span class="built_in">source</span> /root/cachecloud/script/cachecloud.sql;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql&gt; show tables;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> grant all privileges on *.* to <span class="string">'admin'</span>@<span class="string">'localhost'</span> identified by <span class="string">'admin'</span>;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> grant all privileges on *.* to <span class="string">'admin'</span>@<span class="string">'127.0.0.1'</span> identified by <span class="string">'admin'</span>;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> flush privileges;</span></span><br></pre></td></tr></table></figure><h3 id="maven3-6"><a href="#maven3-6" class="headerlink" title="maven3.6"></a>maven3.6</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.shu.edu.cn/apache/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz</span><br><span class="line">tar xf apache-maven-3.6.0-bin.tar.gz</span><br><span class="line">mv apache-maven-3.6.0 /Data/apps/maven</span><br><span class="line">ln -sv /Data/apps/maven/bin/mvn /sbin/mvn</span><br></pre></td></tr></table></figure><h3 id="jdk1-8"><a href="#jdk1-8" class="headerlink" title="jdk1.8"></a>jdk1.8</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/ &amp;&amp; wget https://download.oracle.com/otn-pub/java/jdk/8u201-b09/42970487e3af4f5aa5bca3f542482c60/jdk-8u201-linux-x64.tar.gz</span><br><span class="line">tar xf jdk-8u201-linux-x64.tar.gz</span><br><span class="line">#vim /etc/profile</span><br><span class="line">export JAVA_HOME=/opt/jdk1.8.0_111</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><h3 id="cachecloud配置"><a href="#cachecloud配置" class="headerlink" title="cachecloud配置"></a>cachecloud配置</h3><h4 id="cachecloud配置文件properties修改"><a href="#cachecloud配置文件properties修改" class="headerlink" title="cachecloud配置文件properties修改"></a>cachecloud配置文件properties修改</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#用户生产使用</span><br><span class="line">/root/cachecloud/cachecloud-open-web/src/main/swap/online.properties</span><br><span class="line">#用户本地测试使用</span><br><span class="line">/root/cachecloud/cachecloud-open-web/src/main/swap/local.properties</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim /root/cachecloud/cachecloud-open-web/src/main/swap/online.properties</span><br><span class="line"></span><br><span class="line">cachecloud.db.url = jdbc:mysql://127.0.0.1:3306/cachecloud   #修改数据库的名字，注意空格</span><br><span class="line">cachecloud.db.user = admin     #数据库访问的用户</span><br><span class="line">cachecloud.db.password = admin #数据库访问的密码</span><br><span class="line">cachecloud.maxPoolSize = 20</span><br><span class="line"></span><br><span class="line">isClustered = true</span><br><span class="line">isDebug = false</span><br><span class="line">spring-file=classpath:spring/spring-online.xml</span><br><span class="line">log_base=/opt/cachecloud-web/logs</span><br><span class="line">web.port=8585</span><br><span class="line">log.level=WARN</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vim /root/cachecloud/cachecloud-open-web/src/main/swap/local.properties</span><br><span class="line">cachecloud.db.url = jdbc:mysql://127.0.0.1:3306/cachecloud</span><br><span class="line">cachecloud.db.user = admin</span><br><span class="line">cachecloud.db.password = admin</span><br><span class="line">cachecloud.maxPoolSize = 20</span><br><span class="line"></span><br><span class="line">isClustered = true</span><br><span class="line">isDebug = true</span><br><span class="line">spring-file = classpath:spring/spring-local.xml</span><br><span class="line">log_base = /opt/cachecloud-web/logs</span><br><span class="line">web.port = 9999</span><br><span class="line">log.level = INFO</span><br></pre></td></tr></table></figure><h4 id="cachecloud源码安装启动"><a href="#cachecloud源码安装启动" class="headerlink" title="cachecloud源码安装启动"></a>cachecloud源码安装启动</h4><h4 id="本地测试配置"><a href="#本地测试配置" class="headerlink" title="本地测试配置"></a>本地测试配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在/root/cachecloud/根目录下运行</span><br><span class="line">cd /root/cachecloud/</span><br><span class="line">mvn clean compile install -Plocal</span><br><span class="line">在cachecloud-open-web模块下运行</span><br><span class="line">cd /root/cachecloud/cachecloud-open-web</span><br><span class="line">mvn spring-boot:run</span><br></pre></td></tr></table></figure><h4 id="生产环境配置"><a href="#生产环境配置" class="headerlink" title="生产环境配置"></a>生产环境配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在cachecloud根目录下运行</span><br><span class="line">cd /root/cachecloud/</span><br><span class="line">mvn clean compile install -Ponline</span><br><span class="line"># 新建cachecloud 安装服务目录</span><br><span class="line">mkdir -p /opt/cachecloud-web</span><br><span class="line"># 拷贝cachecloud 配置文件和cachecloud war包</span><br><span class="line">cp /root/cachecloud/cachecloud-open-web/src/main/resources/cachecloud-web.conf /opt/cachecloud-web/</span><br><span class="line">cp /root/cachecloud/cachecloud-open-web/target/cachecloud-open-web-1.0-SNAPSHOT.war /opt/cachecloud-web/</span><br></pre></td></tr></table></figure><h4 id="启动使用系统服务启动"><a href="#启动使用系统服务启动" class="headerlink" title="启动使用系统服务启动"></a>启动使用系统服务启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /opt/cachecloud-web/cachecloud-open-web-1.0-SNAPSHOT.war /etc/init.d/cachecloud-web</span><br><span class="line">/etc/init.d/cachecloud-web start</span><br></pre></td></tr></table></figure><h4 id="启动脚本服务启动"><a href="#启动脚本服务启动" class="headerlink" title="启动脚本服务启动"></a>启动脚本服务启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">启动方法2(使用脚本启动，大部分操作系统都正常)</span><br><span class="line">cp /root/cachecloud/script/start.sh /opt/cachecloud-web/</span><br><span class="line">cp /root/cachecloud/script/stop.sh  /opt/cachecloud-web/</span><br><span class="line">sh start.sh #如果机器内存不足，修改start.sh脚本，可以适当调小:-Xmx和-Xms(默认是4g)</span><br><span class="line">sh stop.sh</span><br></pre></td></tr></table></figure><h3 id="访问cachecloud-界面"><a href="#访问cachecloud-界面" class="headerlink" title="访问cachecloud 界面"></a>访问cachecloud 界面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://10.1.21.169/8585</span><br><span class="line">用户名和密码都是 admin</span><br></pre></td></tr></table></figure><h3 id="新建redis集群"><a href="#新建redis集群" class="headerlink" title="新建redis集群"></a>新建redis集群</h3><p>cachecloud 是使用ssh方式来管理主机机器的，所以我们这里通过用户名和密码的方式来管理机器</p><p>下面的脚本会自动安装redis服务，并且建立用户和给用户创建密码(根据提示需要自己手动输入密码)</p><p><img src="/Users/budongshu/Library/Application Support/typora-user-images/image-20190313182537227.png" alt="image-20190313182537227"></p><h4 id="redis4-0"><a href="#redis4-0" class="headerlink" title="redis4.0"></a>redis4.0</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">cat /opt/cachecloud-init.sh  <span class="comment">### 这个脚本在cd /root/cachecloud/scripts/ 中</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">############################################################################</span></span><br><span class="line"><span class="comment"># @desc:</span></span><br><span class="line"><span class="comment">#- 1. create user;</span></span><br><span class="line"><span class="comment">#- 2. create default directories and authorize;</span></span><br><span class="line"><span class="comment">#- 3. @usage: sh cachecloud-init.sh [username]</span></span><br><span class="line"><span class="comment"># @author: leifu</span></span><br><span class="line"><span class="comment"># @time:</span></span><br><span class="line"><span class="comment">###########################################################################</span></span><br><span class="line"></span><br><span class="line">set -o nounset</span><br><span class="line">set -o errexit</span><br><span class="line"></span><br><span class="line">readonly redisDir=<span class="string">"/opt/cachecloud/redis"</span></span><br><span class="line"><span class="comment">#readonly redisTarGz="redis-3.0.7.tar.gz"</span></span><br><span class="line">readonly redisTarGz=<span class="string">"redis-4.0.12.tar.gz"</span>    <span class="comment">###redis4.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check if the user exists</span></span><br><span class="line">checkExist() &#123;</span><br><span class="line">local num=`cat /etc/passwd | grep -w $<span class="number">1</span> | wc -l`</span><br><span class="line"></span><br><span class="line"><span class="comment">#cat /etc/passwd | grep -q "$1"</span></span><br><span class="line"><span class="keyword">if</span> [[ $num == <span class="number">1</span> ]]; then</span><br><span class="line">echo <span class="string">"user $1 exists, overwrite user and *init all data*: [y/n]?"</span></span><br><span class="line">read replace</span><br><span class="line"><span class="keyword">if</span> [[ $&#123;replace&#125; == <span class="string">"y"</span> ]]; then</span><br><span class="line">echo <span class="string">"delete existed user: $1."</span></span><br><span class="line">userdel -r <span class="string">"$1"</span></span><br><span class="line">createUser <span class="string">"$1"</span></span><br><span class="line">init <span class="string">"$1"</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">createUser <span class="string">"$1"</span></span><br><span class="line">init <span class="string">"$1"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># create the user</span></span><br><span class="line">createUser() &#123;</span><br><span class="line"><span class="comment"># create a user</span></span><br><span class="line">useradd -m -d /home/$<span class="number">1</span> -s /bin/bash $<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># give the user a password</span></span><br><span class="line">passwd $<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># add the user to sudoers</span></span><br><span class="line"><span class="comment">#echo "$1ALL=(ALL)   ALL" &gt;&gt; /etc/sudoers</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  Maximum number of days between password change</span></span><br><span class="line">chage -M <span class="number">9999</span> $<span class="number">1</span></span><br><span class="line">echo <span class="string">"OK: create user: $1 done"</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># create defautl dirs and authorize</span></span><br><span class="line">init() &#123;</span><br><span class="line"><span class="comment"># create working dirs and a tmp dir</span></span><br><span class="line">mkdir -p /opt/cachecloud/data</span><br><span class="line">mkdir -p /opt/cachecloud/conf</span><br><span class="line">mkdir -p /opt/cachecloud/logs</span><br><span class="line">mkdir -p /opt/cachecloud/redis</span><br><span class="line">mkdir -p /tmp/cachecloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># change owner</span></span><br><span class="line">chown -R $<span class="number">1</span>:$<span class="number">1</span> /opt/cachecloud</span><br><span class="line">chown -R $<span class="number">1</span>:$<span class="number">1</span> /tmp/cachecloud</span><br><span class="line">echo <span class="string">"OK: init: $1 done"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># install redis</span></span><br><span class="line">installRedis() &#123;</span><br><span class="line"><span class="comment">#which redis-server</span></span><br><span class="line"><span class="comment">#if [[ $? == 0 ]]; then</span></span><br><span class="line"><span class="comment">#echo "WARN: redis is already installed, exit."</span></span><br><span class="line"><span class="comment">#return</span></span><br><span class="line"><span class="comment">#fi</span></span><br><span class="line"></span><br><span class="line">yum install -y gcc</span><br><span class="line">mkdir -p $&#123;redisDir&#125; &amp;&amp; cd $&#123;redisDir&#125;</span><br><span class="line">wget http://download.redis.io/releases/$&#123;redisTarGz&#125; &amp;&amp; mv $&#123;redisTarGz&#125; redis.tar.gz &amp;&amp; tar zxvf redis.tar.gz --strip-component=<span class="number">1</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">if [[ $? == 0 ]]; then</span><br><span class="line">echo <span class="string">"OK: redis is installed, exit."</span></span><br><span class="line">chown -R $<span class="number">1</span>:$<span class="number">1</span> $&#123;redisDir&#125;</span><br><span class="line">export PATH=$PATH:$&#123;redisDir&#125;/src</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">fi</span><br><span class="line">echo <span class="string">"ERROR: redis is NOT installed, exit."</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">username=$<span class="number">1</span></span><br><span class="line">checkExist <span class="string">"$&#123;username&#125;"</span></span><br><span class="line">installRedis <span class="string">"$&#123;username&#125;"</span></span><br></pre></td></tr></table></figure><p>执行安装redis初始化脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /opt/cachecloud-init.sh redis #权限为redis 新建redis用户</span><br></pre></td></tr></table></figure><h4 id="添加需要被管理的机器"><a href="#添加需要被管理的机器" class="headerlink" title="添加需要被管理的机器"></a>添加需要被管理的机器</h4><p><img src="/Users/budongshu/Library/Application Support/typora-user-images/image-20190313182959085.png" alt="image-20190313182959085"></p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cachecloud tag1.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql5.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;maven3.6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jdk1.7+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;redis4.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="redis" scheme="http://budongshu.gitee.io/categories/redis/"/>
    
    
      <category term="redis" scheme="http://budongshu.gitee.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Centos6.6_install_kong</title>
    <link href="http://budongshu.gitee.io/2020/03/27/Centos6-6-install-kong/"/>
    <id>http://budongshu.gitee.io/2020/03/27/Centos6-6-install-kong/</id>
    <published>2020-03-27T07:40:13.000Z</published>
    <updated>2020-03-27T08:26:03.868Z</updated>
    
    <content type="html"><![CDATA[<h3 id="版本需求"><a href="#版本需求" class="headerlink" title="版本需求"></a>版本需求</h3><ul><li>pgsql   10.x</li><li>kong    2.0.1</li><li>konga  master代码</li><li>cnpm@6.1.1 (/usr/lib/node_modules/cnpm/lib/parse_argv.js)</li><li>npm@6.13.7 (/usr/lib/node_modules/cnpm/node_modules/npm/lib/npm.js)</li><li>node@10.19.0 (/usr/bin/node)</li></ul><a id="more"></a><h4 id="pgsql-安装"><a href="#pgsql-安装" class="headerlink" title="pgsql 安装"></a>pgsql 安装</h4><h5 id="yum-源下载，rpm方式安装"><a href="#yum-源下载，rpm方式安装" class="headerlink" title="yum 源下载，rpm方式安装"></a>yum 源下载，rpm方式安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-6-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span><br><span class="line">yum install postgresql10 &amp;&amp; yum install postgresql10-server</span><br></pre></td></tr></table></figure><h5 id="建立数据库目录，初始化pgsql"><a href="#建立数据库目录，初始化pgsql" class="headerlink" title="建立数据库目录，初始化pgsql"></a>建立数据库目录，初始化pgsql</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /Data/apps/pgsql/10/data  -pv</span><br><span class="line">/etc/init.d/postgresql-10 initdb -D /Data/apps/pgsql/10/data</span><br></pre></td></tr></table></figure><h5 id="更改pgsql配置文件"><a href="#更改pgsql配置文件" class="headerlink" title="更改pgsql配置文件"></a>更改pgsql配置文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pg_hba.conf      访问授权权限文件</span><br><span class="line">#postgresql.conf 参数配置文件</span><br><span class="line">sed -i  &quot;/^#listen_addresses/a\listen_addresses=&apos;*&apos;&quot; /Data/apps/pgsql/10/data/postgresql.conf</span><br><span class="line">sed -i  &apos;/all.*127.0.0.1/ s/ident/trust/&apos; /Data/apps/pgsql/10/data/pg_hba.conf</span><br></pre></td></tr></table></figure><h5 id="支持远程主机连接"><a href="#支持远程主机连接" class="headerlink" title="支持远程主机连接"></a>支持远程主机连接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;host    kong            kong            10.0.0.0/8              md5&quot; &gt;&gt; /Data/apps/pgsql/10/data/pg_hba.conf</span><br></pre></td></tr></table></figure><h5 id="启动pgsql"><a href="#启动pgsql" class="headerlink" title="启动pgsql"></a>启动pgsql</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/postgresql-10 restart</span><br></pre></td></tr></table></figure><h5 id="数据库授权"><a href="#数据库授权" class="headerlink" title="数据库授权"></a>数据库授权</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql</span><br><span class="line">pgsql 授权kong</span><br><span class="line">postgres=# CREATE USER kong; CREATE DATABASE kong OWNER kong;</span><br><span class="line">postgres=# ALTER USER kong  WITH PASSWORD &apos;haodfxx&apos;;</span><br><span class="line">postgres=# grant all privileges on database kong to kong;</span><br><span class="line">pgsql 授权konga</span><br><span class="line">postgres=# CREATE DATABASE konga; CREATE DATABASE konga OWNER konga;</span><br><span class="line">postgres=# CREATE USER konga CREATEDB LOGIN PASSWORD &apos;haodfxx&apos;;</span><br><span class="line">postgres=# grant all privileges on database konga to konga;</span><br></pre></td></tr></table></figure><h5 id="最后重启pgsql"><a href="#最后重启pgsql" class="headerlink" title="最后重启pgsql"></a>最后重启pgsql</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/postgresql-10 restart</span><br></pre></td></tr></table></figure><h4 id="kong-安装"><a href="#kong-安装" class="headerlink" title="kong 安装"></a>kong 安装</h4><h5 id="yum-源下载，rpm方式安装-1"><a href="#yum-源下载，rpm方式安装-1" class="headerlink" title="yum 源下载，rpm方式安装"></a>yum 源下载，rpm方式安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum update -y </span><br><span class="line">$ sudo yum install -y wget</span><br><span class="line">$ wget https://bintray.com/kong/kong-rpm/rpm -O bintray-kong-kong-rpm.repo  </span><br><span class="line">$ export major_version=`grep -oE &apos;[0-9]+\.[0-9]+&apos; /etc/redhat-release | cut -d &quot;.&quot; -f1` </span><br><span class="line">$ sed -i -e &apos;s/baseurl.*/&amp;\/centos\/&apos;$major_version&apos;&apos;/ bintray-kong-kong-rpm.repo  </span><br><span class="line">$ sudo mv bintray-kong-kong-rpm.repo /etc/yum.repos.d/ </span><br><span class="line">$ sudo yum install -y kong</span><br></pre></td></tr></table></figure><h5 id="修改kong配置文件"><a href="#修改kong配置文件" class="headerlink" title="修改kong配置文件"></a>修改kong配置文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/kong/kong.conf |egrep &quot;^[a-z]+&quot;  |grep -v &quot;^$&quot;</span><br><span class="line">prefix=/Data/apps/kong          #更改生成nginx配置文件目录</span><br><span class="line">proxy_listen = 0.0.0.0:8100  reuseport backlog=16384, 0.0.0.0:8443 http2 ssl reuseport backlog=16384</span><br><span class="line">admin_listen = 0.0.0.0:8101 reuseport backlog=16384, 0.0.0.0:8444 http2 ssl reuseport backlog=16384</span><br><span class="line">nginx_user = avatar avatar     # Defines user and group credentials used by</span><br><span class="line">pg_host = 10.3.19.129            # Host of the Postgres server.</span><br><span class="line">pg_port = 5432                        # Port of the Postgres server.</span><br><span class="line">pg_timeout = 5000                  # Defines the timeout (in ms), for connecting,</span><br><span class="line">pg_user = kong                       # Postgres user.</span><br><span class="line">pg_password = xxx                 # Postgres user&apos;s password.</span><br><span class="line">pg_database = kong               # The database name to connect to.</span><br></pre></td></tr></table></figure><h5 id="初始化导入数据库结构"><a href="#初始化导入数据库结构" class="headerlink" title="初始化导入数据库结构"></a>初始化导入数据库结构</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin/kong migrations bootstrap -c /etc/kong/kong.conf</span><br></pre></td></tr></table></figure><h5 id="启动kong服务"><a href="#启动kong服务" class="headerlink" title="启动kong服务"></a>启动kong服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin/kong start -c /etc/kong/kong.conf</span><br></pre></td></tr></table></figure><h5 id="curl方式验证访问"><a href="#curl方式验证访问" class="headerlink" title="curl方式验证访问"></a>curl方式验证访问</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s http://127.0.0.1:8001/status ｜ python -m json.tool</span><br></pre></td></tr></table></figure><h5 id="konga-安装"><a href="#konga-安装" class="headerlink" title="konga 安装"></a>konga 安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">通过git 拉取最新稳定源码 安装konga</span><br><span class="line">cd /Data/apps/                        #根据线上规则指定目录</span><br><span class="line">git clone https://github.com/pantsel/konga.git</span><br></pre></td></tr></table></figure><h5 id="安装node-npm"><a href="#安装node-npm" class="headerlink" title="安装node npm"></a>安装node npm</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --silent --location https://rpm.nodesource.com/setup_10.x | bash -</span><br><span class="line">cd /Data/apps/konga/</span><br></pre></td></tr></table></figure><h5 id="更改npm-下载源为淘宝源-并且命令为-npm-gt-cnpm"><a href="#更改npm-下载源为淘宝源-并且命令为-npm-gt-cnpm" class="headerlink" title="更改npm 下载源为淘宝源,并且命令为 npm -&gt; cnpm"></a>更改npm 下载源为淘宝源,并且命令为 npm -&gt; cnpm</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h5 id="安装pm2管理服务程序"><a href="#安装pm2管理服务程序" class="headerlink" title="安装pm2管理服务程序"></a>安装pm2管理服务程序</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cnpm i pm2 -g</span><br><span class="line">进入konga目录 ,安装依赖包</span><br><span class="line">cd /Data/apps/konga</span><br><span class="line">cnpm i</span><br></pre></td></tr></table></figure><h5 id="修改konga的env-文件"><a href="#修改konga的env-文件" class="headerlink" title="修改konga的env 文件"></a>修改konga的env 文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd /Data/apps/konga</span><br><span class="line">cp .env_example .env</span><br><span class="line">配置如下</span><br><span class="line">PORT=1337</span><br><span class="line">NODE_ENV=production</span><br><span class="line">KONGA_HOOK_TIMEOUT=120000</span><br><span class="line">DB_ADAPTER=postgres</span><br><span class="line">DB_URI=postgresql://konga:33af103aef686c7fcba09b810b2424c7@localhost:5432/konga</span><br><span class="line">KONGA_LOG_LEVEL=warn</span><br><span class="line">TOKEN_SECRET=some_secret_token</span><br></pre></td></tr></table></figure><h5 id="初始化konga数据"><a href="#初始化konga数据" class="headerlink" title="初始化konga数据"></a>初始化konga数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node ./bin/konga.js  prepare --adapter postgres --uri postgresql://konga:33af103aef686c7fcba09b810b2424c7@127.0.0.1:5432/konga</span><br></pre></td></tr></table></figure><h5 id="启动konga程序"><a href="#启动konga程序" class="headerlink" title="启动konga程序"></a>启动konga程序</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start app.js --name konga</span><br></pre></td></tr></table></figure><h5 id="konga服务-web访问验证"><a href="#konga服务-web访问验证" class="headerlink" title="konga服务 web访问验证"></a>konga服务 web访问验证</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web 访问http://IPxxx:1337/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;版本需求&quot;&gt;&lt;a href=&quot;#版本需求&quot; class=&quot;headerlink&quot; title=&quot;版本需求&quot;&gt;&lt;/a&gt;版本需求&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;pgsql   10.x&lt;/li&gt;
&lt;li&gt;kong    2.0.1&lt;/li&gt;
&lt;li&gt;konga  master代码&lt;/li&gt;
&lt;li&gt;cnpm@6.1.1 (/usr/lib/node_modules/cnpm/lib/parse_argv.js)&lt;/li&gt;
&lt;li&gt;npm@6.13.7 (/usr/lib/node_modules/cnpm/node_modules/npm/lib/npm.js)&lt;/li&gt;
&lt;li&gt;node@10.19.0 (/usr/bin/node)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="kong" scheme="http://budongshu.gitee.io/categories/kong/"/>
    
    
      <category term="kong" scheme="http://budongshu.gitee.io/tags/kong/"/>
    
  </entry>
  
  <entry>
    <title>k8s_glusterfs几种方式</title>
    <link href="http://budongshu.gitee.io/2020/03/27/k8s_glusterfs%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://budongshu.gitee.io/2020/03/27/k8s_glusterfs几种方式/</id>
    <published>2020-03-27T06:30:00.000Z</published>
    <updated>2020-03-27T06:30:02.052Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h2 id="本文介绍前俩种方式"><a href="#本文介绍前俩种方式" class="headerlink" title="本文介绍前俩种方式"></a>本文介绍前俩种方式</h2><h3 id="k8s和glusterfs-使用的几种方式"><a href="#k8s和glusterfs-使用的几种方式" class="headerlink" title="k8s和glusterfs 使用的几种方式"></a>k8s和glusterfs 使用的几种方式</h3><ol><li>现有外部glusterfs物理集群,k8s通过endpoints,service方式使用,需要手动创建pv,pvc(静态分配存储方式)</li><li>现有外部glusterfs物理集群,并且有空余磁盘分区(同意支持初始化的磁盘),使用heketi来管理glusterfs集群<br>通过StorageClass,pvc动态创建pv(heketi安装方式通过物理二进制方式安装,或者docker compose安装)</li><li>无外部glusterfs集群,glusterfs和heketi全部使用容器pod 方式来进行管理生命周期(支持动态创建pv,与2一样)</li></ol><a id="more"></a><h3 id="k8s直接使用外部glusterfs集群"><a href="#k8s直接使用外部glusterfs集群" class="headerlink" title="k8s直接使用外部glusterfs集群"></a>k8s直接使用外部glusterfs集群</h3><h4 id="外部搭建glusterfs-略"><a href="#外部搭建glusterfs-略" class="headerlink" title="外部搭建glusterfs 略"></a>外部搭建glusterfs 略</h4><h4 id="k8s创建endpoints和service"><a href="#k8s创建endpoints和service" class="headerlink" title="k8s创建endpoints和service"></a>k8s创建endpoints和service</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  name: gfs-cluster</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 10.1.0.27</span><br><span class="line">  - ip: 10.1.0.251</span><br><span class="line">  ports:</span><br><span class="line">  - port: 49152</span><br><span class="line">    protocol: TCP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: gfs-cluster</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 49152</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 49152</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  type: ClusterIP</span><br></pre></td></tr></table></figure><h4 id="创建pv-pvc"><a href="#创建pv-pvc" class="headerlink" title="创建pv,pvc"></a>创建pv,pvc</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: gfs-cluster-pv1</span><br><span class="line">  labels:</span><br><span class="line">    type: glusterfs</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: gfs-pvc1</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 1Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  glusterfs:</span><br><span class="line">    endpoints: &quot;gluster-cluster&quot;</span><br><span class="line">    path: &quot;k8svol1&quot;</span><br><span class="line">    readOnly: false</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: gfs-cluster-pvc1</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: gfs-pvc1</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 1Gi</span><br></pre></td></tr></table></figure><h4 id="创建一个pod-测试"><a href="#创建一个pod-测试" class="headerlink" title="创建一个pod 测试"></a>创建一个pod 测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: pv1-default-t1</span><br><span class="line">  labels:</span><br><span class="line">    app.name: pv1-default-t1</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app.name: pv1-default-t1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app.name: pv1-default-t1</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx-test</span><br><span class="line">        image: nginx</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: glusterfsvol</span><br><span class="line">          mountPath: &quot;/mnt/gfs1&quot;</span><br><span class="line">        #  subPath: glusterfsvol</span><br><span class="line">        #- name: glusterfsvol</span><br><span class="line">        #  mountPath: &quot;/usr/share/nginx/html/&quot;</span><br><span class="line">        #  subPath: &quot;glusterfsvol1&quot;</span><br><span class="line"></span><br><span class="line">      volumes:</span><br><span class="line">      - name: glusterfsvol</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: gfs-cluster-pvc1</span><br></pre></td></tr></table></figure><h4 id="遇到报错"><a href="#遇到报错" class="headerlink" title="遇到报错"></a>遇到报错</h4><blockquote><p>暂时没有解决</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@k8s-master01 gfs]# kubectl describe pod pv1-default-t1-67548d998d-9vdwg</span><br><span class="line">Name:           pv1-default-t1-67548d998d-9vdwg</span><br><span class="line">Namespace:      default</span><br><span class="line">Priority:       0</span><br><span class="line">Node:           k8s-node01/10.1.1.32</span><br><span class="line">Start Time:     Thu, 05 Mar 2020 02:43:49 -0500</span><br><span class="line">Labels:         app.name=pv1-default-t1</span><br><span class="line">                pod-template-hash=67548d998d</span><br><span class="line">Annotations:    &lt;none&gt;</span><br><span class="line">Status:         Pending</span><br><span class="line">IP:</span><br><span class="line">Controlled By:  ReplicaSet/pv1-default-t1-67548d998d</span><br><span class="line">Containers:</span><br><span class="line">  nginx-test:</span><br><span class="line">    Container ID:</span><br><span class="line">    Image:          nginx</span><br><span class="line">    Image ID:</span><br><span class="line">    Port:           80/TCP</span><br><span class="line">    Host Port:      0/TCP</span><br><span class="line">    State:          Waiting</span><br><span class="line">      Reason:       ContainerCreating</span><br><span class="line">    Ready:          False</span><br><span class="line">    Restart Count:  0</span><br><span class="line">    Environment:    &lt;none&gt;</span><br><span class="line">    Mounts:</span><br><span class="line">      /mnt/gfs1 from glusterfsvol (rw)</span><br><span class="line">      /var/run/secrets/kubernetes.io/serviceaccount from default-token-5hm8w (ro)</span><br><span class="line">Conditions:</span><br><span class="line">  Type              Status</span><br><span class="line">  Initialized       True</span><br><span class="line">  Ready             False</span><br><span class="line">  ContainersReady   False</span><br><span class="line">  PodScheduled      True</span><br><span class="line">Volumes:</span><br><span class="line">  glusterfsvol:</span><br><span class="line">    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)</span><br><span class="line">    ClaimName:  gfs-cluster-pvc1</span><br><span class="line">    ReadOnly:   false</span><br><span class="line">  default-token-5hm8w:</span><br><span class="line">    Type:        Secret (a volume populated by a Secret)</span><br><span class="line">    SecretName:  default-token-5hm8w</span><br><span class="line">    Optional:    false</span><br><span class="line">QoS Class:       BestEffort</span><br><span class="line">Node-Selectors:  &lt;none&gt;</span><br><span class="line">Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s</span><br><span class="line">                 node.kubernetes.io/unreachable:NoExecute for 300s</span><br><span class="line">Events:</span><br><span class="line">  Type     Reason       Age                   From                 Message</span><br><span class="line">  ----     ------       ----                  ----                 -------</span><br><span class="line">  Warning  FailedMount  17m (x223 over 21h)   kubelet, k8s-node01  Unable to mount volumes for pod &quot;pv1-default-t1-67548d998d-9vdwg_default(598bfcf6-96dc-4509-a6b6-0bdf881fb07e)&quot;: timeout expired waiting for volumes to attach or mount for pod &quot;default&quot;/&quot;pv1-default-t1-67548d998d-9vdwg&quot;. list of unmounted volumes=[glusterfsvol]. list of unattached volumes=[glusterfsvol default-token-5hm8w]</span><br><span class="line">  Warning  FailedMount  100s (x367 over 21h)  kubelet, k8s-node01  (combined from similar events): MountVolume.SetUp failed for volume &quot;gfs-cluster-pv1&quot; : mount failed: mount failed: exit status 1</span><br><span class="line">Mounting command: systemd-run</span><br><span class="line">Mounting arguments: --description=Kubernetes transient mount for /var/lib/kubelet/pods/598bfcf6-96dc-4509-a6b6-0bdf881fb07e/volumes/kubernetes.io~glusterfs/gfs-cluster-pv1 --scope -- mount -t glusterfs -o auto_unmount,backup-volfile-servers=10.1.1.41:10.1.1.42,log-file=/var/lib/kubelet/plugins/kubernetes.io/glusterfs/gfs-cluster-pv1/pv1-default-t1-67548d998d-9vdwg-glusterfs.log,log-level=ERROR 10.1.1.42:k8svol1 /var/lib/kubelet/pods/598bfcf6-96dc-4509-a6b6-0bdf881fb07e/volumes/kubernetes.io~glusterfs/gfs-cluster-pv1</span><br><span class="line">Output: Running scope as unit run-28009.scope.</span><br><span class="line">[2020-03-06 05:18:36.190120] E [glusterfsd.c:834:gf_remember_backup_volfile_server] 0-glusterfs: failed to set volfile server: File exists</span><br><span class="line">Mounting glusterfs on /var/lib/kubelet/pods/598bfcf6-96dc-4509-a6b6-0bdf881fb07e/volumes/kubernetes.io~glusterfs/gfs-cluster-pv1 failed.</span><br><span class="line"></span><br><span class="line">, the following error information was pulled from the glusterfs log to help diagnose this issue:</span><br><span class="line">[2020-03-06 05:18:36.209244] E [glusterfsd-mgmt.c:2217:mgmt_getspec_cbk] 0-glusterfs: failed to get the &apos;volume file&apos; from server</span><br><span class="line">[2020-03-06 05:18:36.209295] E [glusterfsd-mgmt.c:2416:mgmt_getspec_cbk] 0-mgmt: failed to fetch volume file (key:k8svol1)</span><br></pre></td></tr></table></figure><h3 id="k8s使用外部glusterfs集群和heketi"><a href="#k8s使用外部glusterfs集群和heketi" class="headerlink" title="k8s使用外部glusterfs集群和heketi"></a>k8s使用外部glusterfs集群和heketi</h3><ul><li>glusterfs7 版本 </li><li>centos7 系统</li></ul><div class="table-container"><table><thead><tr><th>机器</th><th>安装环境</th><th>磁盘</th></tr></thead><tbody><tr><td>10.1.0.51</td><td>glusterfs-server heketi heketi-client</td><td>/dev/vdb 600G</td></tr><tr><td>10.1.0.52</td><td>glusterfs-server heketi-client</td><td>/dev/vdb 600G</td></tr><tr><td>10.1.0.53</td><td>glusterfs-server heketi-client</td><td>/dev/vdb 600G</td></tr><tr><td>其他节点</td><td>glusterfs-fuse  heketi-client </td></tr></tbody></table></div><h4 id="gfs7-下载仓库"><a href="#gfs7-下载仓库" class="headerlink" title="gfs7 下载仓库"></a>gfs7 下载仓库</h4><p>glusterfs7.repo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[centos-gluster7]</span><br><span class="line">name=CentOS-$releasever - Gluster7</span><br><span class="line">baseurl=https://buildlogs.centos.org/centos/7/storage/x86_64/gluster-7/</span><br><span class="line">#baseurl=http://mirror.centos.org/centos/$releasever/storage/$basearch/gluster-3.12/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Storage</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[centos-gluster7-test]</span><br><span class="line">name=CentOS-$releasever - Gluster7 Testing</span><br><span class="line">baseurl=https://buildlogs.centos.org/centos/7/storage/x86_64/gluster-7/gluster-7/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Storage</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install centos-release-gluster7</span><br></pre></td></tr></table></figure></p><h4 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h4><ul><li>heketi物理节点安装heketi heketi-client</li><li>gfs集群所有节点安装heketi-client glusterfs-server</li><li>k8s集群所有节点安装heketi-client glusterfs-fuse</li></ul><p>也可以所有机器一律安装,命令如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install glusterfs-server heketi heketi-client</span><br></pre></td></tr></table></figure></p><h4 id="heketi-topology-初始化集群"><a href="#heketi-topology-初始化集群" class="headerlink" title="heketi topology 初始化集群"></a>heketi topology 初始化集群</h4><p>保证gfs集群有空余磁盘分区,并且磁盘分区一定不要挂载,heketi内部会使用pvcreate来针对这个空余磁盘分区创建volume.</p><h5 id="配置启动heketi服务"><a href="#配置启动heketi服务" class="headerlink" title="配置启动heketi服务"></a>配置启动heketi服务</h5><p>heketi连接glusterfs有三中模式,因为使用的是外部glusterfs集群,所有这里使用第二种模式ssh方式,第一种适用于开发环境,不适用生产,第三种是glusterfs集群容器方式,连接kuberneters使用.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;_port_comment&quot;: &quot;Heketi Server Port Number&quot;,</span><br><span class="line">  &quot;port&quot;: &quot;18080&quot;,</span><br><span class="line"></span><br><span class="line">  &quot;_use_auth&quot;: &quot;Enable JWT authorization. Please enable for deployment&quot;,</span><br><span class="line">  &quot;use_auth&quot;: true,</span><br><span class="line"></span><br><span class="line">  &quot;_jwt&quot;: &quot;Private keys for access&quot;,</span><br><span class="line">  &quot;jwt&quot;: &#123;</span><br><span class="line">    &quot;_admin&quot;: &quot;Admin has access to all APIs&quot;,</span><br><span class="line">    &quot;admin&quot;: &#123;</span><br><span class="line">      &quot;key&quot;: &quot;haodf&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;_user&quot;: &quot;User only has access to /volumes endpoint&quot;,</span><br><span class="line">    &quot;user&quot;: &#123;</span><br><span class="line">      &quot;key&quot;: &quot;haodf&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &quot;_glusterfs_comment&quot;: &quot;GlusterFS Configuration&quot;,</span><br><span class="line">  &quot;glusterfs&quot;: &#123;</span><br><span class="line"></span><br><span class="line">    &quot;_sshexec_comment&quot;: &quot;SSH username and private key file information&quot;,</span><br><span class="line">    &quot;sshexec&quot;: &#123;</span><br><span class="line">      &quot;keyfile&quot;: &quot;/etc/heketi/heketi_key&quot;,</span><br><span class="line">      &quot;user&quot;: &quot;root&quot;,</span><br><span class="line">      &quot;port&quot;: &quot;22&quot;,</span><br><span class="line">      &quot;fstab&quot;: &quot;/etc/fstab&quot;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &quot;_db_comment&quot;: &quot;Database file name&quot;,</span><br><span class="line">    &quot;db&quot;: &quot;/var/lib/heketi/heketi.db&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;_loglevel_comment&quot;: [</span><br><span class="line">      &quot;Set log level. Choices are:&quot;,</span><br><span class="line">      &quot;  none, critical, error, warning, info, debug&quot;,</span><br><span class="line">      &quot;Default is warning&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;loglevel&quot; : &quot;debug&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="建立共享密钥-确保heketi节点可以ssh免密钥形式访问glusterfs集群"><a href="#建立共享密钥-确保heketi节点可以ssh免密钥形式访问glusterfs集群" class="headerlink" title="建立共享密钥,确保heketi节点可以ssh免密钥形式访问glusterfs集群"></a>建立共享密钥,确保heketi节点可以ssh免密钥形式访问glusterfs集群</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -f /etc/heketi/heketi_key -t rsa -N &apos;&apos;</span><br><span class="line">cat heketi_key.pub &gt;&gt; /root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h5 id="拷贝密钥"><a href="#拷贝密钥" class="headerlink" title="拷贝密钥"></a>拷贝密钥</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i /etc/heketi/heketi_key.pub 10.1.0.51</span><br><span class="line">ssh-copy-id -i /etc/heketi/heketi_key.pub 10.1.0.52</span><br><span class="line">ssh-copy-id -i /etc/heketi/heketi_key.pub 10.1.0.53</span><br></pre></td></tr></table></figure><h5 id="启动heketi服务-监听18080端口"><a href="#启动heketi服务-监听18080端口" class="headerlink" title="启动heketi服务 监听18080端口"></a>启动heketi服务 监听18080端口</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nohup /usr/bin/heketi --config=/etc/heketi/heketi.json &amp; </span><br><span class="line">curl http://127.0.0.1:18080/hello   #测试地址,能够访问,说明服务正常</span><br></pre></td></tr></table></figure><h5 id="加载-topology-json配置-建立集群"><a href="#加载-topology-json配置-建立集群" class="headerlink" title="加载 topology.json配置,建立集群"></a>加载 topology.json配置,建立集群</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/heketi/topology.json</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;clusters&quot;:[</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;nodes&quot;:[</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;node&quot;: &#123;</span><br><span class="line">                        &quot;hostnames&quot;:&#123;</span><br><span class="line">                            &quot;manage&quot;:[</span><br><span class="line">                              &quot;10.1.0.51&quot;</span><br><span class="line">                            ],</span><br><span class="line">                            &quot;storage&quot;:[</span><br><span class="line">                                &quot;10.1.0.51&quot;</span><br><span class="line">                            ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &quot;zone&quot;:1</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &quot;devices&quot;:[</span><br><span class="line">                        &quot;/dev/vdb&quot;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;node&quot;: &#123;</span><br><span class="line">                        &quot;hostnames&quot;:&#123;</span><br><span class="line">                            &quot;manage&quot;:[</span><br><span class="line">                              &quot;10.1.0.52&quot;</span><br><span class="line">                            ],</span><br><span class="line">                            &quot;storage&quot;:[</span><br><span class="line">                                &quot;10.1.0.52&quot;</span><br><span class="line">                            ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &quot;zone&quot;:1</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &quot;devices&quot;:[</span><br><span class="line">                        &quot;/dev/vdb&quot;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;node&quot;: &#123;</span><br><span class="line">                        &quot;hostnames&quot;:&#123;</span><br><span class="line">                            &quot;manage&quot;:[</span><br><span class="line">                              &quot;10.1.0.53&quot;</span><br><span class="line">                            ],</span><br><span class="line">                            &quot;storage&quot;:[</span><br><span class="line">                                &quot;10.1.0.53&quot;</span><br><span class="line">                            ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &quot;zone&quot;:1</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &quot;devices&quot;:[</span><br><span class="line">                        &quot;/dev/vdb&quot;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heketi-cli -s http://127.0.0.1:18080 --user admin --secret haodf topology  load --json=/etc/heketi/topology.json</span><br></pre></td></tr></table></figure><p>上面操作遇到下面问题,请确保是否有挂载新硬盘,且未分区初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">initialized or contains data?):   WARNING: Device /dev/centos/root not initialized in udev database</span><br></pre></td></tr></table></figure><p>解决问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df -h |grep /dev/vdb #如果有分区挂载,请卸载</span><br><span class="line">/Data/gfs1  xxG  /dev/vdb</span><br><span class="line">umount /Data/gfs1 </span><br><span class="line"></span><br><span class="line">执行下面命令</span><br><span class="line">wipefs -a /dev/vdb</span><br></pre></td></tr></table></figure></p><h5 id="查看集群-node-volume信息"><a href="#查看集群-node-volume信息" class="headerlink" title="查看集群,node,volume信息"></a>查看集群,node,volume信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">export HEKETI_CLI_SERVER=http://10.10.249.63:8080</span><br><span class="line"></span><br><span class="line">#cluster集群信息</span><br><span class="line">[root@master01 ~]# heketi-cli -s http://127.0.0.1:18080 --user admin --secret haodf cluster list</span><br><span class="line">Clusters:</span><br><span class="line">Id:c5a894a3dac347affdaecdd637dbdd8b [file][block]</span><br><span class="line"></span><br><span class="line">#node节点信息</span><br><span class="line">[root@master01 ~]# heketi-cli -s http://127.0.0.1:18080 --user admin --secret haodf node list</span><br><span class="line">Id:3cdda17f46696f3e9f482d2dc850b5a4Cluster:c5a894a3dac347affdaecdd637dbdd8b</span><br><span class="line">Id:882b507ffaef33af34edd4effbbda770Cluster:c5a894a3dac347affdaecdd637dbdd8b</span><br><span class="line">Id:df0788cba87985c3ea95bcf5e77f1ba0Cluster:c5a894a3dac347affdaecdd637dbdd8b</span><br><span class="line">#volume 信息</span><br><span class="line">[root@master01 ~]# heketi-cli -s http://127.0.0.1:18080 --user admin --secret haodf volume list</span><br><span class="line">Id:22a171e8e15bf07d5f0f388297873a2a    Cluster:c5a894a3dac347affdaecdd637dbdd8b    Name:vol_22a171e8e15bf07d5f0f388297873a2a</span><br></pre></td></tr></table></figure><h5 id="查看某个node节点的device信息"><a href="#查看某个node节点的device信息" class="headerlink" title="查看某个node节点的device信息"></a>查看某个node节点的device信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#node节点</span><br><span class="line">[root@master01 ~]# heketi-cli -s http://127.0.0.1:18080 --user admin --secret haodf node list</span><br><span class="line">Id:3cdda17f46696f3e9f482d2dc850b5a4Cluster:c5a894a3dac347affdaecdd637dbdd8b</span><br><span class="line">Id:882b507ffaef33af34edd4effbbda770Cluster:c5a894a3dac347affdaecdd637dbdd8b</span><br><span class="line">Id:df0788cba87985c3ea95bcf5e77f1ba0Cluster:c5a894a3dac347affdaecdd637dbdd8b</span><br><span class="line"></span><br><span class="line">#某个node节点信息</span><br><span class="line">[root@master01 ~]# heketi-cli -s http://127.0.0.1:18080 --user admin --secret haodf node info 3cdda17f46696f3e9f482d2dc850b5a4</span><br><span class="line">Node Id: 3cdda17f46696f3e9f482d2dc850b5a4</span><br><span class="line">State: online</span><br><span class="line">Cluster Id: c5a894a3dac347affdaecdd637dbdd8b</span><br><span class="line">Zone: 1</span><br><span class="line">Management Hostname: 10.1.0.53</span><br><span class="line">Storage Hostname: 10.1.0.53</span><br><span class="line">Devices:</span><br><span class="line">Id:22889a4d302bc9403878317060f46d35   Name:/dev/vdb            State:online    Size (GiB):599     Used (GiB):1       Free (GiB):598     Bricks:1</span><br><span class="line"></span><br><span class="line">#某个node节点的device信息</span><br><span class="line">[root@master01 ~]# heketi-cli -s http://127.0.0.1:18080 --user admin --secret haodf device info 22889a4d302bc9403878317060f46d35</span><br><span class="line">Device Id: 22889a4d302bc9403878317060f46d35</span><br><span class="line">Name: /dev/vdb</span><br><span class="line">State: online</span><br><span class="line">Size (GiB): 599</span><br><span class="line">Used (GiB): 1</span><br><span class="line">Free (GiB): 598</span><br><span class="line">Bricks:</span><br><span class="line">Id:f9bf5d4e5c2ae8efd79d29c208000505   Size (GiB):1       Path: /var/lib/heketi/mounts/vg_22889a4d302bc9403878317060f46d35/brick_f9bf5d4e5c2ae8efd79d29c208000505/brick</span><br></pre></td></tr></table></figure><h4 id="建立StorageClass"><a href="#建立StorageClass" class="headerlink" title="建立StorageClass"></a>建立StorageClass</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: storage.k8s.io/v1</span><br><span class="line">kind: StorageClass</span><br><span class="line">metadata:</span><br><span class="line">  name: gluster-heketi-storageclass</span><br><span class="line">  namespace: storage</span><br><span class="line">provisioner: kubernetes.io/glusterfs</span><br><span class="line">reclaimPolicy: Retain</span><br><span class="line">parameters:</span><br><span class="line">  resturl: &quot;http://10.1.0.51:18080&quot;</span><br><span class="line">  restauthenabled: &quot;true&quot;</span><br><span class="line">  restuser: &quot;admin&quot;</span><br><span class="line">  restuserkey: &quot;haodf&quot;</span><br><span class="line">  volumetype: &quot;replicate:3&quot;</span><br></pre></td></tr></table></figure><h4 id="建立pvc"><a href="#建立pvc" class="headerlink" title="建立pvc"></a>建立pvc</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: pvc-gluster-heketi</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: gluster-heketi-storageclass</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 1Gi</span><br></pre></td></tr></table></figure><h4 id="建立nginx-pod测试"><a href="#建立nginx-pod测试" class="headerlink" title="建立nginx pod测试"></a>建立nginx pod测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-pod</span><br><span class="line">  labels:</span><br><span class="line">    name: nginx-pod</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-pod</span><br><span class="line">    image: nginx:1.16.0-alpine</span><br><span class="line">    ports:</span><br><span class="line">    - name: web</span><br><span class="line">      containerPort: 90</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: gluster-test</span><br><span class="line">      mountPath: /usr/share/nginx/html/</span><br><span class="line">  volumes:</span><br><span class="line">  - name: gluster-test</span><br><span class="line">    persistentVolumeClaim:</span><br><span class="line">      claimName: pvc-gluster-heketi</span><br></pre></td></tr></table></figure><h4 id="模拟heketi故障"><a href="#模拟heketi故障" class="headerlink" title="模拟heketi故障"></a>模拟heketi故障</h4><p>kill杀掉进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux |grep heketi|grep -v grep |grep heketi.json  |awk &apos;&#123;print $2&#125;&apos; |xargs kill -9</span><br></pre></td></tr></table></figure><p>pod 正常写入,删除,查看,已经挂载集群的不受影响<br>因为可以看到pod内部已经mount挂载glusterfs集群.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 gluster-kubernetes]# kubectl exec -it nginx-pod -- /bin/sh</span><br><span class="line">/ # cd /usr/share/nginx/html/</span><br><span class="line">/usr/share/nginx/html # ls</span><br><span class="line">a      test   test1</span><br><span class="line">/usr/share/nginx/html # echo bds &gt; test3</span><br><span class="line">/usr/share/nginx/html # cat test1</span><br><span class="line">b</span><br><span class="line">/usr/share/nginx/html # rm -f test1</span><br><span class="line">/usr/share/nginx/html # ls</span><br><span class="line">a      test   test2  test3</span><br><span class="line">#查看mount 挂载</span><br><span class="line">/usr/share/nginx/html # mount  |grep glu</span><br><span class="line">10.1.0.53:vol_22a171e8e15bf07d5f0f388297873a2a on /usr/share/nginx/html type fuse.glusterfs (rw,relatime,user_id=0,group_id=0,default_permissions,allow_other,max_read=131072)</span><br></pre></td></tr></table></figure></p><h5 id="试试新建pvc"><a href="#试试新建pvc" class="headerlink" title="试试新建pvc"></a>试试新建pvc</h5><p>可以看到一直处于,pending状态,对于新建pvc有影响<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 gluster-kubernetes]# kubectl get pvc</span><br><span class="line">NAME                  STATUS    VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS                  AGE</span><br><span class="line">pvc-gluster-heketi    Bound     pvc-9d4133cb-0057-4bf0-9113-5c5bff1b193d   1Gi        RWO            gluster-heketi-storageclass   13h</span><br><span class="line">pvc1-gluster-heketi   Pending                                                                        gluster-heketi-storageclass   60s</span><br></pre></td></tr></table></figure></p><p>这时候启动heketi,再次看下pvc状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#删除pending pvc</span><br><span class="line">[root@master01 gluster-kubernetes]# kubectl delete -f gfs-heketi/pvc1-gluser-heketi.yaml</span><br><span class="line">persistentvolumeclaim &quot;pvc1-gluster-heketi&quot; deleted</span><br><span class="line"></span><br><span class="line">#再次创建</span><br><span class="line">[root@master01 gluster-kubernetes]# kubectl apply  -f gfs-heketi/pvc1-gluser-heketi.yaml</span><br><span class="line">persistentvolumeclaim/pvc1-gluster-heketi created</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">经过删除,再次重建,发现pvc可以自动创建pv</span><br><span class="line">[root@master01 gluster-kubernetes]# kubectl get pvc -w</span><br><span class="line">NAME                  STATUS    VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS                  AGE</span><br><span class="line">pvc-gluster-heketi    Bound     pvc-9d4133cb-0057-4bf0-9113-5c5bff1b193d   1Gi        RWO            gluster-heketi-storageclass   13h</span><br><span class="line">pvc1-gluster-heketi   Pending                                                                    gluster-heketi-storageclass   16s</span><br><span class="line">pvc1-gluster-heketi   Pending   pvc-49192bd4-933f-46a5-9f7c-72777f8801f4   0                         gluster-heketi-storageclass   26s</span><br><span class="line">pvc1-gluster-heketi   Bound     pvc-49192bd4-933f-46a5-9f7c-72777f8801f4   1Gi        RWO            gluster-heketi-storageclass   26s</span><br></pre></td></tr></table></figure><h5 id="测试证明-heketi服务故障"><a href="#测试证明-heketi服务故障" class="headerlink" title="测试证明(heketi服务故障)"></a>测试证明(heketi服务故障)</h5><ul><li>不影响已经创建的pvc,并且挂载pv的容器使用</li><li>影响新建pvc的使用</li></ul><p><a href="## 本文介绍前俩种方式">回到标题1</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[toc]&lt;/p&gt;&lt;h2 id=&quot;本文介绍前俩种方式&quot;&gt;&lt;a href=&quot;#本文介绍前俩种方式&quot; class=&quot;headerlink&quot; title=&quot;本文介绍前俩种方式&quot;&gt;&lt;/a&gt;本文介绍前俩种方式&lt;/h2&gt;&lt;h3 id=&quot;k8s和glusterfs-使用的几种方式&quot;&gt;&lt;a href=&quot;#k8s和glusterfs-使用的几种方式&quot; class=&quot;headerlink&quot; title=&quot;k8s和glusterfs 使用的几种方式&quot;&gt;&lt;/a&gt;k8s和glusterfs 使用的几种方式&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;现有外部glusterfs物理集群,k8s通过endpoints,service方式使用,需要手动创建pv,pvc(静态分配存储方式)&lt;/li&gt;
&lt;li&gt;现有外部glusterfs物理集群,并且有空余磁盘分区(同意支持初始化的磁盘),使用heketi来管理glusterfs集群&lt;br&gt;通过StorageClass,pvc动态创建pv(heketi安装方式通过物理二进制方式安装,或者docker compose安装)&lt;/li&gt;
&lt;li&gt;无外部glusterfs集群,glusterfs和heketi全部使用容器pod 方式来进行管理生命周期(支持动态创建pv,与2一样)&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="k8s" scheme="http://budongshu.gitee.io/categories/k8s/"/>
    
    
      <category term="k8s" scheme="http://budongshu.gitee.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>docker 安装</title>
    <link href="http://budongshu.gitee.io/2018/04/25/docker_install%E5%AE%89%E8%A3%85/"/>
    <id>http://budongshu.gitee.io/2018/04/25/docker_install安装/</id>
    <published>2018-04-25T12:26:00.000Z</published>
    <updated>2020-03-27T06:18:01.886Z</updated>
    
    <content type="html"><![CDATA[<h3 id="机器环境"><a href="#机器环境" class="headerlink" title="机器环境"></a>机器环境</h3><ul><li>容器管理工具 <ul><li>Docker Engine</li></ul></li><li>runtime - runc    <ul><li>Docker默认的runtime</li></ul></li><li>操作系统<ul><li>CentOS 7.2.1511 (3.10.0-327.el7.x86_64)</li></ul></li></ul><a id="more"></a><h3 id="docker-安装"><a href="#docker-安装" class="headerlink" title="docker 安装"></a>docker 安装</h3><blockquote><p>由于docker社区版本迭代很快，最近也发生很多变化，所以在安装之前想说明一下现在的版本情况 </p></blockquote><h4 id="docker-版本说明"><a href="#docker-版本说明" class="headerlink" title="docker 版本说明"></a>docker 版本说明</h4><p>docker自1.13版本以后发行版本有了很大不同分为: </p><ul><li>CE(community edition)社区版 </li><li>EE(enterprise edition)企业版</li></ul><h4 id="docker-版本号说明"><a href="#docker-版本号说明" class="headerlink" title="docker 版本号说明"></a>docker 版本号说明</h4><ul><li>现在Docker改为基于YY.MM的版本（像Ubuntu）</li><li>用户可以选择Stable（发布较慢）或者Edge（发布较快）版本。</li><li>ce由社区维护和提供技术支持，为免费版本</li><li>ee版本为收费版本，由售后团队和技术团队支持技术支持</li><li>更多的收费标准看docker官网</li></ul><h4 id="docker-安装包说明"><a href="#docker-安装包说明" class="headerlink" title="docker 安装包说明"></a>docker 安装包说明</h4><ul><li>docker.io is used to be very old version in default ubuntu repo (can skip here)</li><li>docker-engine: is used before release 1.13.x</li><li>docker-ce: since 17.03</li></ul><h3 id="docker-engine安装-旧版本安装）"><a href="#docker-engine安装-旧版本安装）" class="headerlink" title="docker engine安装(旧版本安装）"></a>docker engine安装(旧版本安装）</h3><p>yum 安装 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/docker.repo &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line">[dockerrepo]</span><br><span class="line">name=Docker Repository</span><br><span class="line">baseurl=https://mirrors.aliyun.com/docker-engine/yum/repo/main/centos/7/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">gpgkey=https://yum.dockerproject.org/gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker-engine</span><br></pre></td></tr></table></figure><p>启动管理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><h3 id="docker-ce-安装-正式进入新版本安装方式"><a href="#docker-ce-安装-正式进入新版本安装方式" class="headerlink" title="docker-ce 安装(正式进入新版本安装方式)"></a>docker-ce 安装(正式进入新版本安装方式)</h3><h4 id="阿里云安装脚本"><a href="#阿里云安装脚本" class="headerlink" title="阿里云安装脚本"></a>阿里云安装脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com -o get-docker.sh #下载get-docker.sh文件</span><br><span class="line">sudo sh get-docker.sh --mirror Aliyun      #以阿里云镜像安装get-docker.sh脚本内容</span><br></pre></td></tr></table></figure><h4 id="yum-安装"><a href="#yum-安装" class="headerlink" title="yum 安装"></a>yum 安装</h4><blockquote><p>安装所需的软件包 yum-utils提供了yum-config-manager 作用<br>并device-mapper-persistent-data和lvm2由需要devicemapper存储驱动程序。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p>添加镜像源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>将软件包添加至本地缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum makecache fast</span><br></pre></td></tr></table></figure><p>安装docker-ce</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce</span><br></pre></td></tr></table></figure><p>启动docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="rpm-安装"><a href="#rpm-安装" class="headerlink" title="rpm 安装"></a>rpm 安装</h4><p>下载地址: <a href="https://download.docker.com/linux/centos/7/x86_64/stable/Packages/" target="_blank" rel="noopener">docker rpm包</a> (阿西巴,需要翻墙了) </p><h4 id="daocloud-安装"><a href="#daocloud-安装" class="headerlink" title="daocloud 安装"></a>daocloud 安装</h4><p>下载地址: <a href="https://get.daocloud.io/#install-docker" target="_blank" rel="noopener">https://get.daocloud.io/#install-docker</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><h4 id="安装后查看详细信息"><a href="#安装后查看详细信息" class="headerlink" title="安装后查看详细信息"></a>安装后查看详细信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@bds-aliyun ~]# docker info</span><br><span class="line">Containers: 1</span><br><span class="line"> Running: 0</span><br><span class="line"> Paused: 0</span><br><span class="line"> Stopped: 1</span><br><span class="line">Images: 3</span><br><span class="line">Server Version: 17.12.0-ce</span><br><span class="line">Storage Driver: overlay2</span><br><span class="line"> Backing Filesystem: extfs</span><br><span class="line"> Supports d_type: true</span><br><span class="line"> Native Overlay Diff: true</span><br><span class="line">Logging Driver: json-file</span><br><span class="line">Cgroup Driver: cgroupfs</span><br><span class="line">Plugins:</span><br><span class="line"> Volume: local</span><br><span class="line"> Network: bridge host macvlan null overlay</span><br><span class="line"> Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog</span><br><span class="line">Swarm: inactive</span><br><span class="line">Runtimes: runc</span><br><span class="line">Default Runtime: runc</span><br><span class="line">Init Binary: docker-init</span><br><span class="line">containerd version: 89623f28b87a6004d4b785663257362d1658a729</span><br><span class="line">runc version: b2567b37d7b75eb4cf325b77297b140ea686ce8f</span><br><span class="line">init version: 949e6fa</span><br><span class="line">Security Options:</span><br><span class="line"> seccomp</span><br><span class="line">  Profile: default</span><br><span class="line">Kernel Version: 3.10.0-693.2.2.el7.x86_64</span><br><span class="line">Operating System: CentOS Linux 7 (Core)</span><br><span class="line">OSType: linux</span><br><span class="line">Architecture: x86_64</span><br><span class="line">CPUs: 1</span><br><span class="line">Total Memory: 992.3MiB</span><br><span class="line">Name: bds-aliyun</span><br><span class="line">ID: 3SA2:4HKN:CQU3:QG7O:ZJ73:77JU:PHBG:QBUY:VRWX:D6O7:BAG4:3IF5</span><br><span class="line">Docker Root Dir: /var/lib/docker</span><br><span class="line">Debug Mode (client): false</span><br><span class="line">Debug Mode (server): false</span><br><span class="line">Registry: https://index.docker.io/v1/</span><br><span class="line">Labels:</span><br><span class="line">Experimental: false</span><br><span class="line">Insecure Registries:</span><br><span class="line"> 127.0.0.0/8</span><br><span class="line">Registry Mirrors:</span><br><span class="line"> http://08b61f14.m.daocloud.io/</span><br><span class="line">Live Restore Enabled: false</span><br><span class="line"></span><br><span class="line">WARNING: bridge-nf-call-iptables is disabled</span><br><span class="line">WARNING: bridge-nf-call-ip6tables is disable</span><br></pre></td></tr></table></figure><h4 id="Registy-加速"><a href="#Registy-加速" class="headerlink" title="Registy 加速"></a>Registy 加速</h4><p>需要注册daocloud官网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://xxxx.m.daocloud.io</span><br></pre></td></tr></table></figure><p>Docker hub国内加速</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">官方地址: https://docs.docker.com/registry/recipes/mirror/#configure-the-docker-daemon</span><br></pre></td></tr></table></figure><p>阿里云加速</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">官方地址: https://cr.console.aliyun.com/#/accelerator</span><br></pre></td></tr></table></figure><h4 id="docker-拉取镜像"><a href="#docker-拉取镜像" class="headerlink" title="docker 拉取镜像"></a>docker 拉取镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@bds-aliyun ~]# docker pull nginx</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/nginx</span><br><span class="line">2a72cbf407d6: Pull complete</span><br><span class="line">04b2d3302d48: Pull complete</span><br><span class="line">e7f619103861: Pull complete</span><br><span class="line">Digest: sha256:cb29ee85b234f356fb8a77d8cfb78b42355f7f016f528f11a2a5f75e4862dc94</span><br><span class="line">Status: Downloaded newer image for nginx:latest</span><br><span class="line">[root@bds-aliyun ~]# docker images</span><br><span class="line">REPOSITORY                 TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">nginx                      latest              b175e7467d66        2 weeks ago         109MB</span><br><span class="line">[root@bds-aliyun ~]# docker run -p 81:80 nginx</span><br></pre></td></tr></table></figure><h4 id="请求nginx"><a href="#请求nginx" class="headerlink" title="请求nginx"></a>请求nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">另起终端本地访问启动的nginx</span><br><span class="line">[root@bds-aliyun ~]# curl -I  http://172.17.233.88:81</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.13.12</span><br><span class="line">Date: Wed, 25 Apr 2018 05:38:42 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 612</span><br><span class="line">Last-Modified: Mon, 09 Apr 2018 16:01:09 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">ETag: &quot;5acb8e45-264&quot;</span><br><span class="line">Accept-Ranges: bytes </span><br><span class="line"></span><br><span class="line">终端日志输出</span><br><span class="line">[root@bds-aliyun ~]# docker run -p 81:80 nginx</span><br><span class="line">172.17.233.88 - - [25/Apr/2018:05:38:35 +0000] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;curl/7.29.0&quot; &quot;-&quot;</span><br><span class="line">172.17.233.88 - - [25/Apr/2018:05:38:42 +0000] &quot;HEAD / HTTP/1.1&quot; 200 0 &quot;-&quot; &quot;curl/7.29.0&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure><h4 id="进入容器-修改nginx-html文件"><a href="#进入容器-修改nginx-html文件" class="headerlink" title="进入容器 修改nginx html文件"></a>进入容器 修改nginx html文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@bds-aliyun ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES</span><br><span class="line">5bd99fe2480d        nginx               &quot;nginx -g &apos;daemon of…&quot;   9 minutes ago       Up 9 minutes        0.0.0.0:81-&gt;80/tcp   unruffled_murdock</span><br><span class="line">[root@bds-aliyun ~]# docker exec -it  5bd99fe2480d bash</span><br><span class="line">root@5bd99fe2480d:/# cd /usr/share/nginx/html/</span><br><span class="line">root@5bd99fe2480d:/usr/share/nginx/html# echo budongshu jianshu &gt; index.html</span><br><span class="line">root@5bd99fe2480d:/usr/share/nginx/html# exit</span><br><span class="line">exit</span><br><span class="line">[root@bds-aliyun ~]# curl  http://172.17.233.88:81</span><br><span class="line">budongshu jianshu</span><br></pre></td></tr></table></figure><p>通过curl命令测试<br><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fqoutowsssj30vs063gvx.jpg" alt></p><p>通过网页访问<br><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fqovjrpfrkj30h404tglt.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;机器环境&quot;&gt;&lt;a href=&quot;#机器环境&quot; class=&quot;headerlink&quot; title=&quot;机器环境&quot;&gt;&lt;/a&gt;机器环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;容器管理工具 &lt;ul&gt;
&lt;li&gt;Docker Engine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;runtime - runc    &lt;ul&gt;
&lt;li&gt;Docker默认的runtime&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;操作系统&lt;ul&gt;
&lt;li&gt;CentOS 7.2.1511 (3.10.0-327.el7.x86_64)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://budongshu.gitee.io/categories/docker/"/>
    
    
      <category term="docker" scheme="http://budongshu.gitee.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker 入门简介</title>
    <link href="http://budongshu.gitee.io/2018/04/24/docker_container%E5%AE%B9%E5%99%A8%E7%AE%80%E4%BB%8B/"/>
    <id>http://budongshu.gitee.io/2018/04/24/docker_container容器简介/</id>
    <published>2018-04-24T12:26:00.000Z</published>
    <updated>2020-03-27T06:17:51.385Z</updated>
    
    <content type="html"><![CDATA[<h3 id="云计算平台"><a href="#云计算平台" class="headerlink" title="云计算平台"></a>云计算平台</h3><ul><li>IaaS<ul><li>虚拟机 存储 负载均衡 网络</li></ul></li><li>PaaS<ul><li>运行时环境 数据库 web服务器 开发工具</li></ul></li><li>SaaS<ul><li>客户关系管理 邮件 虚拟桌面 通信 游戏</li></ul></li></ul><a id="more"></a><h4 id="IaaS"><a href="#IaaS" class="headerlink" title="IaaS"></a>IaaS</h4><p>理解为基础设施运维人员服务，提供计算 存储 网络以及其他基础资源，云平台使用者可以在上面<br>部署和运行包括操作系统和应用程序在内的任意软件，无需再为基础设施的管理而分心</p><h4 id="Paas"><a href="#Paas" class="headerlink" title="Paas"></a>Paas</h4><p>应用开发人员服务，提供支撑应用运行所需要的软件运行时环境，相关工具与服务，如数据库服务，<br>日志服务 监控服务等，让应用开发者可以专注于核心业务的开发</p><h4 id="SaaS"><a href="#SaaS" class="headerlink" title="SaaS"></a>SaaS</h4><p>一般用户服务，提供了一套完整可用的软件系统，让一般用户无需关注技术细节，只需要通过浏览器<br>应用客户端等方式 就能使用部署在云上的应用服务</p><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><p>最新的容器技术引入了 OpenVZ Solaris Zones 以及 Linux容器（如lxc）使用这些新技术，<br>容器不再仅仅是一个单纯的运行环境，在自己的权限范围内，容器更像是一个完整的宿主机，对Docker<br>来说，它得益于现在Linux内核特性，如控制组(control group),命名空间(namespace) 技术，<br>容器和宿主机之间的隔离更加彻底，容器有独立的网络和存储栈，还拥有自己的资源管理能力，使得<br>同一台宿主机中的多个容器可以友好的地共存</p><p>容器需要的开销资源有限，和传统的虚拟化以及半虚拟化技术(paravirtualization)相比，容器<br>运行不需要模拟(emulation layer）和管理层（hypervisor layer），而是使用操作通的系统<br>调用接口，这降低了运行单个容器所需要的开销，也使得宿主机中可以运行更多的容器</p><h3 id="容器云"><a href="#容器云" class="headerlink" title="容器云"></a>容器云</h3><p>容器云以容器为资源分割和调度的基本单位，封装整个软件运行时环境 为开发者和系统管理员提供<br>用于构建 发布和运行分布式应用的平台。当容器云专注于资源共享和隔离，容器编排与部署时候<br>它更近传统的Iaas。当容器云渗透到应用支撑与运行是的环境时， 它更接近于传统的PaaS.</p><p>从容器到容器云是一种伟大的进化，并依旧在日积月累中不断前行，现在让我们一起进入Docker世界<br>感受容器和容器云的魅力</p><h3 id="docker-简介"><a href="#docker-简介" class="headerlink" title="docker 简介"></a>docker 简介</h3><p>Docker是一个能够把开发的应用程序自动部署到容器的开源引擎。用于构建 发布 和运行分部署<br>应用的平台，它是一个跨平台 可移植并且简单易用的容器解决方案。</p><p>Docker代码托管在GitHub上，基于Go语言开发 并遵从Apache 2.0协议，通过操作系统内核技术(namespaces cgroups)等 为容器提供资源隔离与安全保障。</p><p>Docker项目是由Solomon Hykes 所带领的团队发起，在Docker公司的前身dotCloud内部启动孕育<br>代码托管在GitHub。</p><p>2013年3月：Docker正式发布开源版本。</p><h3 id="docker-特点"><a href="#docker-特点" class="headerlink" title="docker 特点"></a>docker 特点</h3><ul><li>持续部署与测试</li><li>跨平台支持</li><li>环境标准和版本控制</li><li>高资源利用率与隔离</li><li>容器跨平台性与镜像</li><li>易于理解且易用 </li><li>应用镜像仓库</li></ul><h3 id="Containers-and-virtual-machines"><a href="#Containers-and-virtual-machines" class="headerlink" title="Containers and virtual machines"></a>Containers and virtual machines</h3><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fqo4sru5sbj30yw0g2tb3.jpg" alt></p><h3 id="docker-客户端"><a href="#docker-客户端" class="headerlink" title="docker 客户端"></a>docker 客户端</h3><p>Docker是一个典型的C/S架构的应用程序，但在发布上 Docker将客户端和服务器端统一在同一个<br>二进制文件中，不过 这只是对于Linux系统而言的 在其他平台上如Mac上，Docker只提供了用户<br>端</p><p>Docker客户端一般通过Docker Command来发起请求，另外 也可以通过Docker提供的一整套<br>Restful API来发起请求， 这种方式更多地被应用在应用程序的代码中</p><h3 id="docker-daemon"><a href="#docker-daemon" class="headerlink" title="docker daemon"></a>docker daemon</h3><p>Docker daemon也可以被理解成DockerServer，另外 人们也常常用Docker Engine来直接<br>描述它，因为这实际上就是驱动整个Docker功能的核心引擎 </p><p>简单的说，Docker daemon实现的功能就是接收客户端来的请求，并实现请求所要求的功能，<br>同时针对返回相应的结果，在功能的实现上，因为涉及了容器 镜像 存储等多方面的内容<br>daemon内部的机制会复杂很多，涉及多个模块之间的实现和交互</p><h3 id="docker-镜像"><a href="#docker-镜像" class="headerlink" title="docker 镜像"></a>docker 镜像</h3><p>可以理解为类似于传统虚拟化的iso镜像，不过Docker镜像相对要轻量化很多，它只是一个可以<br>定制的rootfs。Docker镜像的另一个创新是 它是层级的 并且是可复用的。如果是基于相同的<br>发行版的镜像，在大多数文件的内容上都是一样的，基于此，当然会希望可以服用他们。<br>利用Unionfs的特性，Docker会极大迪减少磁盘和内存的开销</p><p>docker 镜像可以通过Dockerfile来创建的，Dockerfile提供了镜像内容的定制，同时也<br>体现了曾经关系的建立。也可以通过使用docker commit命令来手动将修改后的内容生成镜像<br>这些将在后面详细介绍</p><h3 id="Registry"><a href="#Registry" class="headerlink" title="Registry"></a>Registry</h3><p>Registry是一个存放镜像的仓库，它通常部署在互联网服务器上或者云端上</p><p>Docker公司提供了官方的Registry叫Docker Hub这上面提供了大多数常用软件和发行版的镜像</p><p>Registry本身也是一个开源项目，任务人都可以下载进项部署，所以多数企业选择在自己的内部<br>部署一套自己的Docker Hub 后二次开发。 </p><h3 id="docker-生态"><a href="#docker-生态" class="headerlink" title="docker 生态"></a>docker 生态</h3><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fqoqgpmalgj30ty0okdjn.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;云计算平台&quot;&gt;&lt;a href=&quot;#云计算平台&quot; class=&quot;headerlink&quot; title=&quot;云计算平台&quot;&gt;&lt;/a&gt;云计算平台&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;IaaS&lt;ul&gt;
&lt;li&gt;虚拟机 存储 负载均衡 网络&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PaaS&lt;ul&gt;
&lt;li&gt;运行时环境 数据库 web服务器 开发工具&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SaaS&lt;ul&gt;
&lt;li&gt;客户关系管理 邮件 虚拟桌面 通信 游戏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://budongshu.gitee.io/categories/docker/"/>
    
    
      <category term="docker" scheme="http://budongshu.gitee.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Centos6.6 编译安装php7和php扩展</title>
    <link href="http://budongshu.gitee.io/2018/04/21/Centos6.6_%E7%BC%96%E8%AF%91php7andphp7%E6%89%A9%E5%B1%95/"/>
    <id>http://budongshu.gitee.io/2018/04/21/Centos6.6_编译php7andphp7扩展/</id>
    <published>2018-04-21T12:26:00.000Z</published>
    <updated>2020-03-27T06:18:27.017Z</updated>
    
    <content type="html"><![CDATA[<h3 id="机器环境"><a href="#机器环境" class="headerlink" title="机器环境"></a>机器环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CentOS release 6.6 (Final)</span><br><span class="line">kernal 2.6.32-504.23.4.el6.x86_64</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h3><p>yum install -y  curl libcurl-devel libjpeg-devel libpng-devel libjped-devel freetype-devel libxslt-devel boost-devel gperf libevent-devel libuuid-devel libgearman  libgearman-devel</p><h3 id="install-php"><a href="#install-php" class="headerlink" title="install php"></a>install php</h3><p>下载目录: <code>/opt/</code><br>安装目录: <code>/Data/apps/php/</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">wget http://docs.php.net/distributions/php-7.0.28.tar.gz</span><br><span class="line">tar xf php-7.0.28.tar.gz</span><br><span class="line">cd php-7.0.28</span><br><span class="line">./configure --with-libdir=lib64 --prefix=/Data/apps/php --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-gd --with-zlib --with-png-dir --with-jpeg-dir --with-iconv --with-curl --with-mcrypt --with-openssl --with-xsl --enable-opcache --enable-inline-optimization --enable-fpm --enable-mbstring --enable-pcntl --enable-soap --enable-sockets --enable-bcmath --with-libxml --with-freetype-dir=/usr/include/freetype2/ --disable-phar</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="php-扩展"><a href="#php-扩展" class="headerlink" title="php 扩展"></a>php 扩展</h3><blockquote><p>下面所有php扩展包的下载目录统一为: <code>/opt/soft/</code></p></blockquote><h4 id="opcache"><a href="#opcache" class="headerlink" title="opcache"></a>opcache</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/php-7.0.28/ext </span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure --with-php-config=/Data/apps/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="xdebug"><a href="#xdebug" class="headerlink" title="xdebug"></a>xdebug</h4><p><code>从2.4开始支持php7</code></p><p>下载地址: <a href="https://xdebug.org/files/" target="_blank" rel="noopener">https://xdebug.org/files/</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://xdebug.org/files/xdebug-2.6.0.tgz</span><br><span class="line">tar xf xdebug-2.6.0.tgz</span><br><span class="line">cd xdebug-2.6.0</span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure --with-php-config=/Data/apps/php/bin/php-config</span><br><span class="line">make </span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="igbinary"><a href="#igbinary" class="headerlink" title="igbinary"></a>igbinary</h4><p><code>最新版本(2.0.5),2.0.1开始支持7.0</code></p><p>详情连接: <a href="http://pecl.php.net/package-changelog.php?package=igbinary" target="_blank" rel="noopener">http://pecl.php.net/package-changelog.php?package=igbinary</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://pecl.php.net/get/igbinary-2.0.5.tgz</span><br><span class="line">tar xf igbinary-2.0.5.tgz</span><br><span class="line">cd igbinary-2.0.5</span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure --with-php-config=/Data/apps/php/bin/php-config</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="memcached"><a href="#memcached" class="headerlink" title="memcached"></a>memcached</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">memcached版本要求：</span><br><span class="line">php-memcached 3.x</span><br><span class="line">Supports PHP 7.0 - 7.2.</span><br><span class="line">Requires libmemcached 1.x or higher.</span><br><span class="line">Optionally supports igbinary 2.0 or higher.</span><br><span class="line">Optionally supports msgpack 2.0 or higher.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">安装libmemcached 依赖包</span><br><span class="line">wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gzc</span><br><span class="line">tar -zxf libmemcached-1.0.18.tar.gz</span><br><span class="line">./configure --prefix=/Data/apps/libmemcached --with-memcached</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://pecl.php.net/get/memcached-3.0.0.tgz</span><br><span class="line">tar xf memcached-3.0.0.tgz</span><br><span class="line">cd /opt/soft/memcached-3.0.0</span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure --with-php-config=/Data/apps/php/bin/php-config --with-libmemcached-dir=/Data/apps/libmemcached --enable-memcached --enable-memcached-igbinary </span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>遇到这样的报错<br><code>configure: error: no, sasl.h is not available. Run configure with --disable-memcached-sasl to disable this check</code><br>根据提示加上参数重新编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-php-config=/Data/apps/php/bin/php-config --with-libmemcached-dir=/Data/apps/libmemcached --enable-memcached --enable-memcached-igbinary  --disable-memcached-sasl </span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="imagick"><a href="#imagick" class="headerlink" title="imagick"></a>imagick</h4><p>下载地址：<code>https://pecl.php.net/package/imagick</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">安装ImageMagick(ImageMagick-7.0.7-28)</span><br><span class="line">wget ftp://mirror.checkdomain.de/imagemagick/ImageMagick-7.0.7-28.tar.gz</span><br><span class="line">tar xf ImageMagick-7.0.7-28.tar.gz</span><br><span class="line">cd ImageMagick-7.0.7-28</span><br><span class="line">./configure --prefix=/Data/apps/ImageMagick</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">编译imagick</span><br><span class="line">wget http://pecl.php.net/get/imagick-3.4.3.tgz</span><br><span class="line">tar xf imagick-3.4.3.tgz</span><br><span class="line">cd imagick-3.4.3</span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure --with-imagick=/Data/apps/ImageMagick --with-php-config=/Data/apps/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h4><p>下载地址: <code>https://github.com/phpredis/phpredis  (develop版本)</code> </p><p>安装redis目录: <code>/Data/app/redis</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">编译redis扩展</span><br><span class="line">wget https://pecl.php.net/get/redis-3.0.0.tgz</span><br><span class="line">cd redis-3.0.0</span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure --enable-redis-igbinary=/Data/apps/redis/bin/ --with-php-config=/Data/apps/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="gearman"><a href="#gearman" class="headerlink" title="gearman"></a>gearman</h4><p>安装gearmand服务端 <a href="https://launchpad.net/gearmand" target="_blank" rel="noopener">https://launchpad.net/gearmand</a> 版本：1.1.12</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">编译gearman客服端扩展</span><br><span class="line">git下载最新：https://github.com/wcgallego/pecl-gearman/tree/master</span><br><span class="line">cd pecl-gearman-master</span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure  --with-php-config=/Data/apps/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="scws"><a href="#scws" class="headerlink" title="scws"></a>scws</h4><p>下载链接：<a href="http://www.xunsearch.com/scws/download.php" target="_blank" rel="noopener">http://www.xunsearch.com/scws/download.php</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.xunsearch.com/scws/down/scws-1.2.3.tar.bz2</span><br><span class="line">cd scws-1.2.3/phpext</span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure --with-scws=/Data/apps/scws --with-php-config=/Data/apps/php/bin/php-config</span><br></pre></td></tr></table></figure><h4 id="amqp"><a href="#amqp" class="headerlink" title="amqp"></a>amqp</h4><p>下载地址: <a href="http://pecl.php.net/package/amqp" target="_blank" rel="noopener">http://pecl.php.net/package/amqp</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">安装rabbitmq-c依赖库</span><br><span class="line">wget https://github.com/alanxz/rabbitmq-c/releases/download/v0.8.0/rabbitmq-c-0.8.0.tar.gz</span><br><span class="line">cd rabbitmq-c-0.8.0</span><br><span class="line">./configure --prefix=/usr/local/rabbitmq-c-0.8.0</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">编译amqp扩展</span><br><span class="line">wget https://pecl.php.net/get/amqp-1.9.3.tgz</span><br><span class="line">tar -xf amqp-1.9.3.tar</span><br><span class="line">cd amqp-1.9.3</span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure --with-php-config=/Data/apps/php/bin/php-config --with-amqp --with-librabbitmq-dir=/usr/local/rabbitmq-c-0.8.0</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="fastdfs-client"><a href="#fastdfs-client" class="headerlink" title="fastdfs client"></a>fastdfs client</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/happyfish100/fastdfs/archive/master.zip</span><br><span class="line">unzip master.zip</span><br><span class="line">cd fastdfs-master/php_client</span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure --with-php-config=/Data/apps/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="libiconv"><a href="#libiconv" class="headerlink" title="libiconv"></a>libiconv</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">安装libiconv</span><br><span class="line">wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz</span><br><span class="line">tar xf libiconv-1.14.tar.gz</span><br><span class="line">cd libiconv-1.14</span><br><span class="line">./configure </span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">安装libdatrie</span><br><span class="line">解压，进入目录</span><br><span class="line">./configure LDFLAGS=-L/usr/local/lib LIBS=-liconv --host=arm</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">安装trie_filter.so 拓展</span><br><span class="line">git clonde https://github.com/zzjin/php-ext-trie-filter</span><br><span class="line">cd  php-ext-trie-filter</span><br><span class="line">/Data/apps/php/bin/phpize</span><br><span class="line">./configure  --with-php-config=/Data/apps/php/bin/php-config  --with-trie_filter=/usr/local/libdatrie</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="php-ini-配置"><a href="#php-ini-配置" class="headerlink" title="php.ini 配置"></a>php.ini 配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/soft/php-7.0.28</span><br><span class="line">cp php.ini-production /Data/apps/php/lib/php.ini</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">加载的模块配置</span><br><span class="line">[opcache]</span><br><span class="line">zend_extension=&quot;/Data/apps/php/lib/php/extensions/no-debug-non-zts-20151012/opcache.so&quot;</span><br><span class="line">opcache.memory_consumption=128</span><br><span class="line">opcache.interned_strings_buffer=8</span><br><span class="line">opcache.max_accelerated_files=4000</span><br><span class="line">opcache.fast_shutdown=1</span><br><span class="line">opcache.enable_cli=1</span><br><span class="line">opcache.validate_timestamps=1</span><br><span class="line">opcache.revalidate_freq=1</span><br><span class="line">opcache.error_log=&quot;/Data/apps/php/var/log/opcache.log&quot;</span><br><span class="line">[memcached]</span><br><span class="line">extension=memcached.so</span><br><span class="line">memcache.hash_strategy=consistent</span><br><span class="line">memcache.hash_function=crc32</span><br><span class="line">session.save_handler = memcached</span><br><span class="line">extension=igbinary.so</span><br><span class="line">extension=imagick.so</span><br><span class="line">extension=redis.so</span><br><span class="line">extension=gearman.so</span><br><span class="line">extension=trie_filter.so</span><br><span class="line">[scws]</span><br><span class="line">extension=scws.so</span><br><span class="line">scws.default.charset = utf8</span><br><span class="line">scws.default.fpath = /Data/apps/scws/etc</span><br><span class="line">[amqp]</span><br><span class="line">extension=amqp.so</span><br><span class="line">[fastdfs]</span><br><span class="line">extension = fastdfs_client.so</span><br><span class="line">fastdfs_client.base_path = /tmp</span><br><span class="line">fastdfs_client.connect_timeout = 2</span><br><span class="line">fastdfs_client.network_timeout = 60</span><br><span class="line">fastdfs_client.log_level = info</span><br><span class="line">fastdfs_client.http.anti_steal_secret_key =</span><br><span class="line">fastdfs_client.tracker_group_count = 1</span><br><span class="line">fastdfs_client.tracker_group0 = /etc/fdfs/client.conf</span><br><span class="line">fastdfs_client.use_connection_pool = false</span><br><span class="line">fastdfs_client.connection_pool_max_idle_time = 3600</span><br></pre></td></tr></table></figure><h3 id="php-fpm-conf"><a href="#php-fpm-conf" class="headerlink" title="php-fpm.conf"></a>php-fpm.conf</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /Data/apps/php/etc/php-fpm.conf.default /Data/apps/php/etc/php-fpm</span><br></pre></td></tr></table></figure><h3 id="php-fpm-启动脚本"><a href="#php-fpm-启动脚本" class="headerlink" title="php-fpm 启动脚本"></a>php-fpm 启动脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/soft/php-7.0.28/sapi/fpm</span><br><span class="line">cp init.d.php-fpm /etc/init.d/php-fpm</span><br><span class="line">chmod +x /etc/init.d/php-fpm</span><br></pre></td></tr></table></figure><h3 id="启动php"><a href="#启动php" class="headerlink" title="启动php"></a>启动php</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/php-fpm start</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;机器环境&quot;&gt;&lt;a href=&quot;#机器环境&quot; class=&quot;headerlink&quot; title=&quot;机器环境&quot;&gt;&lt;/a&gt;机器环境&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CentOS release 6.6 (Final)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kernal 2.6.32-504.23.4.el6.x86_64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://budongshu.gitee.io/categories/linux/"/>
    
    
      <category term="php" scheme="http://budongshu.gitee.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>kafka_cluster</title>
    <link href="http://budongshu.gitee.io/2018/04/20/kafka_cluster/"/>
    <id>http://budongshu.gitee.io/2018/04/20/kafka_cluster/</id>
    <published>2018-04-20T12:26:00.000Z</published>
    <updated>2020-03-27T06:17:33.968Z</updated>
    
    <content type="html"><![CDATA[<h3 id="download-elk-rpm"><a href="#download-elk-rpm" class="headerlink" title="download elk rpm"></a>download elk rpm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kakfa-manager </span><br><span class="line">wget https://excellmedia.dl.sourceforge.net/project/schedulerbox/tmp/scala_dependencies/kafka-manager-1.3.1.6-1.noarch.rpm</span><br><span class="line">logstash</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/ELK/yum/logstash-2.4/logstash-2.4.0.noarch.rpm</span><br><span class="line">elasticsearch</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/ELK/yum/elasticsearch-2.x/elasticsearch-2.4.0.rpm</span><br><span class="line">kinana</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/ELK/yum/kibana-4.5/kibana-4.5.4-1.x86_64.rpm</span><br><span class="line">filebeat</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/elasticstack/5.x/yum/5.0.0/filebeat-5.0.0-x86_64.rpm</span><br><span class="line">elastis-search-head </span><br><span class="line">https://codeload.github.com/mobz/elasticsearch-head/zip/master</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="机器环境"><a href="#机器环境" class="headerlink" title="机器环境"></a>机器环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">系统版本</span><br><span class="line">centos6.6</span><br><span class="line">机器三台搭建集群</span><br><span class="line">10.1.1.11</span><br><span class="line">10.1.1.12</span><br><span class="line">10.1.1.13</span><br></pre></td></tr></table></figure><p><em>以下安装的软件将分别在三台机器进行安装,下面只用一台机器作为例子进行安装。不同的地方会有说明</em></p><h3 id="zookeeper-安装"><a href="#zookeeper-安装" class="headerlink" title="zookeeper 安装"></a>zookeeper 安装</h3><h4 id="下载并解压zk"><a href="#下载并解压zk" class="headerlink" title="下载并解压zk"></a>下载并解压zk</h4><p><code>download 地址:</code> <a href="https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home/root/</span><br><span class="line">wget http://archive.apache.org/dist/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz</span><br><span class="line">tar xf zookeeper-3.4.9.tar.gz</span><br><span class="line">cd zookeeper-3.4.9</span><br></pre></td></tr></table></figure><h4 id="创建快照日志和日志目录"><a href="#创建快照日志和日志目录" class="headerlink" title="创建快照日志和日志目录"></a>创建快照日志和日志目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /Data/zookeeper/data -pv </span><br><span class="line">mkdir /Data/zookeeper/logs -pv</span><br></pre></td></tr></table></figure><h4 id="安装并配置"><a href="#安装并配置" class="headerlink" title="安装并配置"></a>安装并配置</h4><p><code>安装目录: /Data/apps/</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -a /root/zookeeper-3.4.9 /Data/apps/zookeeper</span><br></pre></td></tr></table></figure><p><code>配置文件修改</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">initLimit=10</span><br><span class="line">syncLimit=5</span><br><span class="line">dataDir=/Data/zookeeper/data</span><br><span class="line">dataLogDir=/Data/zookeeper/logs</span><br><span class="line"></span><br><span class="line">clientPort=2181</span><br><span class="line">server.1=10.1.1.11:2888:3888</span><br><span class="line">server.2=10.1.1.12:2888:3888</span><br><span class="line">server.3=10.1.1.13:2888:3888</span><br></pre></td></tr></table></figure><h4 id="zk-标识server-id"><a href="#zk-标识server-id" class="headerlink" title="zk 标识server id"></a>zk 标识server id</h4><p><code>目录地址: /Data/zookeeper/data/myid</code> </p><blockquote><p>在目录中创建文件myid文件 每个文件中分别写入当前机器的server id</p><p>例如这个机器10.1.1.11 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">将分别在三台机器上执行</span><br><span class="line">echo 1 &gt;&gt;  /Data/zookeeper/data/myid</span><br><span class="line">echo 2 &gt;&gt;  /Data/zookeeper/data/myid</span><br><span class="line">echo 3 &gt;&gt;  /Data/zookeeper/data/myid</span><br></pre></td></tr></table></figure><h4 id="启动zookeeper"><a href="#启动zookeeper" class="headerlink" title="启动zookeeper"></a>启动zookeeper</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Data/apps/zookeeper/bin/zkServer.sh start</span><br></pre></td></tr></table></figure><h4 id="检测状态"><a href="#检测状态" class="headerlink" title="检测状态"></a>检测状态</h4><blockquote><p>在各个节点上分别执行如下指令，可看到其中有leader和follower，即搭建成功</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Data/apps/zookeeper/bin/zkServer.sh status</span><br></pre></td></tr></table></figure><h3 id="kafka安装"><a href="#kafka安装" class="headerlink" title="kafka安装"></a>kafka安装</h3><p><code>DOWNLOAD 地址:</code> <a href="http://kafka.apache.org/downloads.html" target="_blank" rel="noopener">http://kafka.apache.org/downloads.html</a></p><h4 id="下载-kafka"><a href="#下载-kafka" class="headerlink" title="下载 kafka"></a>下载 kafka</h4><p>安装目录: <code>/Data/apps/kafka</code> </p><blockquote><p>分别在三体机器上进行安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://archive.apache.org/dist/kafka/0.9.0.1/kafka_2.10-0.9.0.1.tgz</span><br><span class="line">tar xf kafka_2.10-0.9.0.1.tgz</span><br><span class="line">cp -a kafka_2.11-0.9.0.1 /Data/apps/kafka</span><br></pre></td></tr></table></figure><h4 id="建立日志目录"><a href="#建立日志目录" class="headerlink" title="建立日志目录"></a>建立日志目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /Data/kafka/kafka-logs</span><br></pre></td></tr></table></figure><h4 id="配置文件-kafka"><a href="#配置文件-kafka" class="headerlink" title="配置文件 kafka"></a>配置文件 kafka</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">broker.id=0             #集群节点的标示符，不得重复。取值范围0~n</span><br><span class="line">host.name=10.1.1.11     #三个机器分别修改为自己的IP地址</span><br><span class="line">port=9092</span><br><span class="line">zookeeper.connect=10.1.1.11:2181,10.1.1.12:2181,10.1.1.13:2181</span><br><span class="line">default.replication.factor=2</span><br><span class="line">num.network.threads=3</span><br><span class="line">num.io.threads=8</span><br><span class="line">num.partitions=1</span><br><span class="line">num.recovery.threads.per.data.dir=1</span><br><span class="line">socket.send.buffer.bytes=102400</span><br><span class="line">socket.receive.buffer.bytes=102400</span><br><span class="line">socket.request.max.bytes=104857600</span><br><span class="line">log.dirs=/Data/kafka/kafka-logs</span><br><span class="line">log.retention.check.interval.ms=300000  </span><br><span class="line">log.cleanup.policy=delete        #日志的清除策略：直接删除</span><br><span class="line">log.retention.hours=72           #日志保存时间为3天</span><br><span class="line">log.segment.bytes=1073741824     #每个日志文件的最大的大小，这里为1GB</span><br><span class="line">delete.topic.enable=true         #通过配置此项使得删除topic的指令生效</span><br><span class="line">zookeeper.connection.timeout.ms=6000</span><br></pre></td></tr></table></figure><h4 id="启动-kafka"><a href="#启动-kafka" class="headerlink" title="启动 kafka"></a>启动 kafka</h4><p><code>这里注意，记得要先启动zookeeper。确保zookeeper启动以后再执行kafka的启动命令</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Data/apps/kafka/bin/kafka-server-start.sh -daemon /Data/apps/kafka/config/server.properties</span><br></pre></td></tr></table></figure><h4 id="检测kafka进程是否存在"><a href="#检测kafka进程是否存在" class="headerlink" title="检测kafka进程是否存在"></a>检测kafka进程是否存在</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux |grep kafka</span><br></pre></td></tr></table></figure><h4 id="kafka-常用操作命令"><a href="#kafka-常用操作命令" class="headerlink" title="kafka 常用操作命令"></a>kafka 常用操作命令</h4><h5 id="Check-service"><a href="#Check-service" class="headerlink" title="Check service"></a>Check service</h5><p>推荐第一次启动先不要加上<code>-daemon</code>参数 观察一下控制台输出是否有success</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Data/apps/kafka/bin/kafka-server-start.sh /Data/apps/kafka/config/server.properties</span><br></pre></td></tr></table></figure><h5 id="Create-topic"><a href="#Create-topic" class="headerlink" title="Create topic"></a>Create topic</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --create --zookeeper 10.1.1.11:2181 --replication-factor 3 --partitions 1 --topic bdstest</span><br></pre></td></tr></table></figure><h5 id="Describe-a-topic"><a href="#Describe-a-topic" class="headerlink" title="Describe a topic"></a>Describe a topic</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --describe --zookeeper 10.1.1.11:2181 --topic bdstest</span><br></pre></td></tr></table></figure><h5 id="List-the-topic"><a href="#List-the-topic" class="headerlink" title="List the topic"></a>List the topic</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-producer.sh --broker-list 10.1.1.11:9092 --topic bdstest</span><br></pre></td></tr></table></figure><h5 id="Start-a-consumer"><a href="#Start-a-consumer" class="headerlink" title="Start a consumer"></a>Start a consumer</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --zookeeper 10.1.1.11:2181 --topic bdstest --from-beginning</span><br></pre></td></tr></table></figure><h5 id="Start-a-consumer-1"><a href="#Start-a-consumer-1" class="headerlink" title="Start a consumer"></a>Start a consumer</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --zookeeper 10.1.1.12:2181 --topic nodeHlsTest --from-beginning</span><br></pre></td></tr></table></figure><h5 id="Delete-a-topic"><a href="#Delete-a-topic" class="headerlink" title="Delete a topic"></a>Delete a topic</h5><p>要事先在<code>serve.properties</code> 配置 <code>delete.topic.enable=true</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --delete --zookeeper localhost:2181 --topic bdstest</span><br></pre></td></tr></table></figure><p><strong>如果仍然只是仅仅被标记了删除(zk中并没有被删除)，那么启动zkCli.sh,输入如下指令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/Data/apps/zookeeper/bin/zkCli.sh   #敲回车进入zookeeper管理终端</span><br><span class="line">[zk: localhost:2181(CONNECTED) 0] ls /brokers/topics</span><br><span class="line">[test1, test2]</span><br><span class="line">[zk: localhost:2181(CONNECTED) 1] rmr /brokers/topics/test1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;download-elk-rpm&quot;&gt;&lt;a href=&quot;#download-elk-rpm&quot; class=&quot;headerlink&quot; title=&quot;download elk rpm&quot;&gt;&lt;/a&gt;download elk rpm&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kakfa-manager &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget https://excellmedia.dl.sourceforge.net/project/schedulerbox/tmp/scala_dependencies/kafka-manager-1.3.1.6-1.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logstash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget https://mirrors.tuna.tsinghua.edu.cn/ELK/yum/logstash-2.4/logstash-2.4.0.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elasticsearch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/ELK/yum/elasticsearch-2.x/elasticsearch-2.4.0.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kinana&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/ELK/yum/kibana-4.5/kibana-4.5.4-1.x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filebeat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/elasticstack/5.x/yum/5.0.0/filebeat-5.0.0-x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elastis-search-head &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://codeload.github.com/mobz/elasticsearch-head/zip/master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="elk" scheme="http://budongshu.gitee.io/categories/elk/"/>
    
    
      <category term="kafka" scheme="http://budongshu.gitee.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>ansible-playbook 介绍</title>
    <link href="http://budongshu.gitee.io/2017/09/07/ansible_playbook%20%E4%BB%8B%E7%BB%8D/"/>
    <id>http://budongshu.gitee.io/2017/09/07/ansible_playbook 介绍/</id>
    <published>2017-09-07T12:26:00.000Z</published>
    <updated>2020-03-27T06:16:46.755Z</updated>
    
    <content type="html"><![CDATA[<h3 id="playbook简介"><a href="#playbook简介" class="headerlink" title="playbook简介"></a>playbook简介</h3><p>playbook是ansible用于配置，部署，和管理被控节点的剧本。通过playbook的详细描述，执行其中的一系列tasks，可以让远端主机达到预期的状态。playbook就像Ansible控制器给被控节点列出的的一系列to-do-list，而被控节点必须要完成。<br>也可以这么理解，playbook 字面意思，即剧本，现实中由演员按照剧本表演，在Ansible中，这次由计算机进行表演，由计算机安装，部署应用，提供对外服务，以及组织计算机处理各种各样的事情。</p><a id="more"></a><h3 id="Playbook使用场景"><a href="#Playbook使用场景" class="headerlink" title="Playbook使用场景"></a>Playbook使用场景</h3><p>执行一些简单的任务，使用ad-hoc(调用各种模块,通过命令行来执行命令)命令可以方便的解决问题，但是有时一个设施过于复杂，需要大量的操作时候，执行的ad-hoc命令是不适合的，这时最好使用playbook，就像执行shell命令与写shell脚本一样，也可以理解为批处理任务，不过playbook有自己的语法格式，一会会介绍。<br>使用playbook你可以方便的重用这些代码，可以移植到不同的机器上面，像函数一样，最大化的利用代码。在你使用Ansible的过程中，你也会发现，你所处理的大部分操作都是编写playbook。</p><h3 id="playbook格式"><a href="#playbook格式" class="headerlink" title="playbook格式"></a>playbook格式</h3><p>playbook由YMAL语言编写。YAML参考了其他多种语言，包括：XML、C语言、Python、Perl以及电子邮件格式RFC2822，Clark Evans在2001年5月在首次发表了这种语言，另外Ingy döt Net与Oren Ben-Kiki也是这语言的共同设计者。</p><p>YMAL格式是类似于JSON的文件格式，便于人理解和阅读，同时便于书写。首先学习了解一下YMAL的格式，对我们后面书写playbook很有帮助。以下为playbook常用到的YMAL格式。</p><p>YMAL语法请参考<a href="http://docs.ansible.com/YAMLSyntax.html" target="_blank" rel="noopener">http://docs.ansible.com/YAMLSyntax.html</a></p><h3 id="yaml格式语法简介"><a href="#yaml格式语法简介" class="headerlink" title="yaml格式语法简介"></a>yaml格式语法简介</h3><p>对于 Ansible, 每一个 YAML 文件都是从一个列表开始. 列表中的每一项都是一个键值对, 通常它们被称为一个 “哈希” 或 “字典”. 所以, 我们需要知道如何在 YAML 中编写列表和字典.</p><ul><li>文件第一行以 —- (三个连字符)开始,表明yaml文件的开始</li><li>在同一行中, #之后的内容表示注释, 类似于shell,python</li><li><p>yaml中的列表元素以 - 开头然后紧跟着一个空格,后面为元素的内容<br>例子如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- apple</span><br><span class="line">- red</span><br><span class="line">- green</span><br></pre></td></tr></table></figure></li><li><p>同一个列表中的元素应该保持相同的缩进。否则会被当做错误处理。</p></li><li>play中hosts，variables，roles，tasks等对象的表示方法都是键值中间以”:”分隔表示,”:”后面还要增加一个空格。</li><li><p>YMAL的有很多的字符串可以解释为true或false：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YMAL Truethy: true ,True ,TRUE ,yes ,Yes , YES ,on ,On ,ON ,y ,</span><br><span class="line">YMAL falthy:false ,False ,FALSE ,no ,No ,NO ,off ,Off ,OFF , n ,N</span><br></pre></td></tr></table></figure></li><li><p>尽管 YAML 通常是友好的, 但是下面将会导致一个 YAML 语法错误:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foo: somebody said I should put a colon here: so I did</span><br></pre></td></tr></table></figure></li><li><p>你需要使用引号来包裹任何包含冒号的哈希值, 像这样:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foo: &quot;somebody said I should put a colon here: so I did&quot;</span><br></pre></td></tr></table></figure></li></ul><p>然后这个冒号将会被结尾.</p><ul><li>Ansible 使用 “” 来引用变量. 如果一个值以 “{” 开头, YAML 将认为它是一个字典, 所以我们必须引用它, 像这样:<br>foo: “<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"># 一位职工的记录</span><br><span class="line">name: Example Developer</span><br><span class="line">job: Developer</span><br><span class="line">skill: Elite</span><br></pre></td></tr></table></figure></li></ul><p><strong>让我们把目前所学到的 YAML 例子组合在一起.<br> 这些在 Ansible 中什么也干不了 但这些格式将会给你感觉:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"># 一位职工记录</span><br><span class="line">name: Example Developer</span><br><span class="line">job: Developer</span><br><span class="line">skill: Elite</span><br><span class="line">employed: True</span><br><span class="line">foods:</span><br><span class="line">- Apple</span><br><span class="line">- Orange</span><br><span class="line">- Strawberry</span><br><span class="line">- Mango</span><br><span class="line">languages:</span><br><span class="line">ruby: Elite</span><br><span class="line">python: Elite</span><br><span class="line">dotnet: Lame</span><br></pre></td></tr></table></figure></p><p> 一个家庭记录</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-361690a77a4535d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="clip_image002.png"></p><h4 id="playbook基础"><a href="#playbook基础" class="headerlink" title="playbook基础"></a>playbook基础</h4><p>现在的/etc/ansible/hosts配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ansible]# cat /etc/ansible/hosts</span><br><span class="line">[web]</span><br><span class="line">192.168.70.51</span><br><span class="line">[db]</span><br><span class="line">192.168.70.50</span><br></pre></td></tr></table></figure></p><p> 安装一个mysql服务的案列</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-9f6e29040930a88a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"><br> 在mysql.yml中，主要由三个部分组成:</p><ul><li>hosts部分：使用hosts指示使用哪个主机或主机组来运行下面的tasks，每个playbook都必须指定hosts，hosts也可以使用通配符格式。主机或主机组在inventory清单中指定，可以使用系统默认的/etc/ansible/hosts，也可以自己编辑，在运行的时候加上-i选项，指定清单的位置即可。在运行清单文件的时候，–list-hosts选项会显示那些主机将会参与执行task的过程中。</li><li>remote_user：指定远端主机中的哪个用户来登录远端系统，在远端系统执行task的用户，可以任意指定，也可以使用sudo，但是用户必须要有执行相应task的权限。</li><li>tasks：指定远端主机将要执行的一系列动作。tasks的核心为ansible的模块，前面已经提到模块的用法。tasks包含name和要执行的模块，name是可选的，只是为了便于用户阅读，不过还是建议加上去，模块是必须的，同时也要给予模块相应的参数。</li></ul><h4 id="playbook运行结果解析"><a href="#playbook运行结果解析" class="headerlink" title="playbook运行结果解析"></a>playbook运行结果解析</h4><p>使用ansible-playbook运行playbook文件，得到如下输出信息，输出内容为JSON格式。并且由不同颜色组成，便于识别。一般而言</p><ul><li><p>绿色代表执行成功，系统保持原样</p></li><li><p>黄色代表系统代表系统状态发生改变</p></li><li><p>红色代表执行失败，显示错误输出。</p><p>执行的时候是用ansible-playbook而不是ansible命令了</p></li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1542757-531d555823fdb026.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"><br> 查看结果</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-479c8b4faeb2b253.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><h4 id="列出执行的远程主机"><a href="#列出执行的远程主机" class="headerlink" title="列出执行的远程主机"></a>列出执行的远程主机</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ansible]# ansible-playbook mysql_ansible.yaml --list-hosts</span><br><span class="line">playbook: mysql_ansible.yaml</span><br><span class="line">play #1 (db): host count=1</span><br><span class="line">192.168.70.50</span><br></pre></td></tr></table></figure><h4 id="ansible具有幂等性"><a href="#ansible具有幂等性" class="headerlink" title="ansible具有幂等性"></a>ansible具有幂等性</h4><p> 再次执行的时候ansible会检测这个task是否已经执行过,<br>   如果这个task任务执行过,它不会再次执行task任务,<br>   而是直接显示ok状态.</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-4467d87410017e11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><h3 id="ansible-playbook-进阶特性"><a href="#ansible-playbook-进阶特性" class="headerlink" title="ansible-playbook 进阶特性"></a>ansible-playbook 进阶特性</h3><h4 id="playbook-组成结构"><a href="#playbook-组成结构" class="headerlink" title="playbook 组成结构"></a>playbook 组成结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Invertory    </span><br><span class="line">Modules</span><br><span class="line">Ad Hoc Commands</span><br><span class="line">PlayBooks</span><br><span class="line">Tasks  任务 即调用模块完成的某操作</span><br><span class="line">Variable  变量</span><br><span class="line">Templates 模板 根据客户端的情况来生成一些的数据</span><br><span class="line">Handlers  处理器 由某条件满足能触发执行的操作</span><br><span class="line">Roles  角色</span><br></pre></td></tr></table></figure><h4 id="playbook-基础组件"><a href="#playbook-基础组件" class="headerlink" title="playbook 基础组件"></a>playbook 基础组件</h4><h5 id="Hosts和Users"><a href="#Hosts和Users" class="headerlink" title="Hosts和Users"></a>Hosts和Users</h5><p>playbook中的每一个play的目的都是为了让某个或者某些主机以某个指定的用户身份来执行任务，hosts是用于指定要执行的指定任务的主机，其可以是一个或者多个以冒号分割的主机组，remote_users则用于指定远程主机上的执行任务的用户，如下面所示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- hosts: webnodes</span><br><span class="line"> remote_user: root</span><br></pre></td></tr></table></figure></p><p>不过 remote_users 也可以用于每个task中，也可以通过指定其通过sudo的方式在远程的主机上执行任务，其可以于play全局或者某任务中，此外，甚至可以在sudo时使用sudo_user 指定sudo时切换的用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- hosts: webnodes</span><br><span class="line">  remote_user: bds</span><br><span class="line">  tasks:</span><br><span class="line">  - name: test connection</span><br><span class="line">    ping:</span><br><span class="line">    remote_user: bds   </span><br><span class="line">    sudo: yes</span><br></pre></td></tr></table></figure></p><h5 id="任务列表和action"><a href="#任务列表和action" class="headerlink" title="任务列表和action"></a>任务列表和action</h5><ul><li><p>play的主体部分是task list task list中的各任务按次序逐个在hosts中指定的所有主机上执行，即在所有主机上完成第一个任务后在开始第二个任务，在运行自上而下某个playbook时，如果中途发生错误，所有已经执行的任务都会讲回滚，因此，在更正playbook后重新执行一次即可</p></li><li><p>task目的是使用指定的参数执行模块，而在模块参数中可以使用变量，模块执行是具有幂等性的，这意味着多次执行是安全的，因为其结构均一致</p></li><li><p>每个task都应该有其name ，用于playbook执行结果输出，建议其内容尽可能清晰地描述任务执行步骤，如果未提供name，则action的结果将用于输出</p></li><li><p>定义task的可以使用“action： module option”或者module: options</p><p>推荐使用后者以实现向后兼容，如果action 一行的内容过多，也可以使用在行首使用几个空白字符进行换行。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">- name: make sure apache is running</span><br><span class="line">  service: name=httpd state=running</span><br></pre></td></tr></table></figure><p> 在众多模块中，只用command和shell模块仅需要给定一个列表而无需使用“key=value”格式例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">- name: disable selinux</span><br><span class="line">  shell: /sbin/setenforce 0</span><br></pre></td></tr></table></figure><p> 如果命令或者脚本的退出码不为零，可以使用如下的方式替代</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">- name: run this command and igonre the result</span><br><span class="line">  shell: /usr/bin/somecomand || /bin/true</span><br></pre></td></tr></table></figure><p> 或者使用ignore_errors来忽略错误信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">- name: run this command and ignore the result</span><br><span class="line">  shell: /usr/bin/somecommand</span><br><span class="line">  ingore_errors: True</span><br></pre></td></tr></table></figure><p> 写一个示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-15 playbooks]# cat /etc/ansible/hosts    #现在hosts配置,新添加一台主机</span><br><span class="line">[web]</span><br><span class="line">192.168.122.52</span><br><span class="line">[db]</span><br><span class="line">10.10.10.15</span><br><span class="line">10.10.10.14</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-15 playbooks]# cat nginx.yml</span><br><span class="line">---</span><br><span class="line">- hosts: web</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">  - name: create nginx group</span><br><span class="line">    group: name=nginx  system=yes gid=208</span><br><span class="line">  - name: create nginx user </span><br><span class="line">    user: name=nginx system=yes uid=208         group=nginx</span><br><span class="line">- hosts: db</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">  - name: copy file to dbservers</span><br><span class="line">    copy: src=/etc/inittabdest=/tmp/inittale.ansible</span><br></pre></td></tr></table></figure><p> 执行结果</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-ca7939bb86b92d88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><h5 id="handlers"><a href="#handlers" class="headerlink" title="handlers"></a>handlers</h5><p>用于当关注的资源发生变化时采取一定的操作,notify 这个action可用于在每个play的最后被触发，这样可以避免多次有改变发生的时候每次都执行指定的操作,取而代之,仅在所有的变化发生完成时最后一次性的执行指定的操作,在notify中列出的操作成为handlers,也即为notify中调用handler中定义的操作<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- name: template configuration file</span><br><span class="line">   template: src=template.j2 dest=/etc/foo.conf</span><br><span class="line">   notify:</span><br><span class="line">     - restart memcached</span><br><span class="line">     - restart apache</span><br></pre></td></tr></table></figure></p><p> handler是task列表，这些task与前述的task并没有本质上的区别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">handlers:</span><br><span class="line">- name: restart memcached      #名字要和上面notify的 一致</span><br><span class="line">  service: name=memcached state=restarted</span><br><span class="line">- name: restart apache</span><br><span class="line">  service: name=apache state=restarted</span><br></pre></td></tr></table></figure><p> 简单案例: 没有handler的时候<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# cat apache.yml</span><br><span class="line">---</span><br><span class="line">- hosts: web</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install httpd package</span><br><span class="line">    yum: name=httpd state=latest</span><br><span class="line">  - name: install configurest file</span><br><span class="line">    copy: src=conf/httpd.conf dest=/etc/httpd/conf/httpd.conf</span><br><span class="line">  - name: start httpd service</span><br><span class="line">    service: name=httpd enabled=true state=started</span><br></pre></td></tr></table></figure></p><p> 简单案例：</p><p>当有一个需求，需要改变httpd配置文案的时候，那么这个时候是需要重启httpd服务的，这时候就需要handlers了，只有某个条件满足的时候才执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# cat apache.yml</span><br><span class="line">---</span><br><span class="line">- hosts: web</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install httpd package</span><br><span class="line">    yum: name=httpd state=latest</span><br><span class="line">  - name: install configurest file</span><br><span class="line">    copy: src=conf/httpd.conf dest=/etc/httpd/conf/httpd.conf</span><br><span class="line">    notify:</span><br><span class="line">      - restart httpd</span><br><span class="line">  - name: start httpd service</span><br><span class="line">    service: name=httpd enabled=true state=started</span><br><span class="line">handlers:</span><br><span class="line">  - name: restart httpd</span><br><span class="line">    service: name=httpd state=restarted</span><br></pre></td></tr></table></figure></p><h5 id="Templates模板"><a href="#Templates模板" class="headerlink" title="Templates模板"></a>Templates模板</h5><p>如果说俩个webservser 安装httpd node1监听80端口，node2 监听8080端口，node1使用的maxClient=100 node2的maxClient=200，这样就需要俩个配置，非常不方便，这样就可以尝试用变量的方式来解决<br> 简单案例: 模板中定义变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# cat templates/httpd.conf.j2  | grep &#123;&#123;    #httpd.conf.j2就是httpd的配置文件</span><br><span class="line">MaxClients       &#123;&#123; maxclient &#125;&#125;</span><br><span class="line">MaxClients       &#123;&#123; maxclient &#125;&#125;</span><br><span class="line">Listen  &#123;&#123; http_port &#125;&#125;</span><br><span class="line">ServerName &#123;&#123; ansible_fqdn &#125;&#125;    # facts 变量</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# cat apache.yml</span><br><span class="line">---</span><br><span class="line">- hosts: web</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars:</span><br><span class="line">  - http_port: 888        #定义的变量值 ,然后查看主机的配置文件是否为这里的值</span><br><span class="line">  - maxclient: 305        #定义的变量值 ,然后查看主机的配置文件是否为这里的值</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install httpd package</span><br><span class="line">    yum: name=httpd state=latest</span><br><span class="line">  - name: install configurest file</span><br><span class="line">    copy: src=conf/httpd.conf dest=/etc/httpd/conf/httpd.conf</span><br><span class="line">  #把带变量的模板替换正在运行的配置文件,然后通知httpd重启加载新的配置文件</span><br><span class="line">    template: src=templates/httpd.conf.j2 dest=/etc/httpd/conf/httpd.conf</span><br><span class="line">    notify:</span><br><span class="line">    - restart httpd</span><br><span class="line">  - name: start httpd service</span><br><span class="line">    service: name=httpd enabled=true state=started</span><br><span class="line">handlers:</span><br><span class="line">  - name: restart httpd</span><br><span class="line">    service: name=httpd state=restarted</span><br></pre></td></tr></table></figure><p> 执行结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# cat /etc/httpd/conf/httpd.conf |grep -v &quot;^#&quot;| grep ServerName</span><br><span class="line">ServerName bj-idc-14</span><br><span class="line">[root@bj-idc-14 playbooks]# cat /etc/httpd/conf/httpd.conf |grep -v &quot;^#&quot;| grep Listen</span><br><span class="line">Listen 888</span><br><span class="line">[root@bj-idc-14 playbooks]# cat /etc/httpd/conf/httpd.conf |grep -v &quot;^#&quot;| grep MaxClients</span><br><span class="line">MaxClients       305</span><br><span class="line">MaxClients       305</span><br></pre></td></tr></table></figure></p><h3 id="ansible-playbook-中yaml基础元素"><a href="#ansible-playbook-中yaml基础元素" class="headerlink" title="ansible-playbook 中yaml基础元素"></a>ansible-playbook 中yaml基础元素</h3><ul><li>变量</li><li>Invertory</li><li>条件判断</li><li>迭代机制</li></ul><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><ul><li><p>变量命名<br>变量名仅能有字母，数字和下划线组成，且只能以字母开头</p></li><li><p>facts<br>facts是由正在通信的远程目标主机发回的信息，可以直接引用, 这些信息保存在ansible变量中，要获取指定的远程主机所支持的所有facts，可试用如下命令进行ansible hostname -m setup</p></li><li><p>register<br>把任务的输出定义为变量,然后用于其他任务,示例如下:</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">shell: /usr/bin/foo</span><br><span class="line">register: foo_result</span><br><span class="line">ignore_error: True</span><br></pre></td></tr></table></figure><ul><li>通过命令传递变量<br>在运行playbook的时候,也可以传递一些变量供playbook使用,示例如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook test.yaml –extra-vars  “hosts=wwwuser=bds”</span><br></pre></td></tr></table></figure><ul><li>通过roles传递变量<br>当给一个主应用角色的时候可以传递变量,然后在角色内使用这变量,如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- host: webservers</span><br><span class="line">  roles:</span><br><span class="line">    - commn</span><br><span class="line">    - &#123; role: foo_arpp_instance , dir: ‘web/htdocs/a.com’ , port: 8080 &#125;</span><br></pre></td></tr></table></figure><h4 id="变量实战"><a href="#变量实战" class="headerlink" title="变量实战"></a>变量实战</h4><p>vars的简单案例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# cat http.yml</span><br><span class="line">---</span><br><span class="line">- hosts: web</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars:</span><br><span class="line">  - groupuser: httpd</span><br><span class="line">  - username: httpd</span><br><span class="line">  tasks:</span><br><span class="line">  - name: create &#123;&#123; groupuser &#125;&#125; group</span><br><span class="line">    group: name=&#123;&#123; groupuser &#125;&#125; system=yes gid=238</span><br><span class="line">  - name: create &#123;&#123; username &#125;&#125; user</span><br><span class="line">    user:name=&#123;&#123; username &#125;&#125; system=yes uid=238 group=&#123;&#123; groupuser  &#125;&#125;</span><br></pre></td></tr></table></figure><p>执行结果</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-73246f5d1f6d6c39.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><p> facts的简单案例: 定义主机变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 ansible]# cat hosts</span><br><span class="line">[web]</span><br><span class="line">10.10.10.14   httpvars=&apos;10.10.10.14&apos;</span><br><span class="line">[db]</span><br><span class="line">10.10.10.15</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# cat facts_host.yml</span><br><span class="line">---</span><br><span class="line">- hosts: web</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">  - name: copy file </span><br><span class="line">    copy: content=&quot;&#123;&#123; ansible_all_ipv4_addresses &#125;&#125;, &#123;&#123; httpvars &#125;&#125; ,</span><br><span class="line">    &#123;&#123; ansible_cmdline.LANG  &#125;&#125; &quot; dest=/tmp/vars.ansible</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# ansible-playbook facts_host.yml</span><br></pre></td></tr></table></figure><p> 执行结果</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-cbb05fef8be5a025.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><h4 id="Inventory"><a href="#Inventory" class="headerlink" title="Inventory"></a>Inventory</h4><p>ansible的主要功能用在于批量操作主机，<br>为了便捷的使用其中的部分主机，<br>可以在Inventory file中将其分组命名，<br>默认的Inventory file为/etc/ansible/hosts<br>Inventory file 可以有多个<br>也可以通过DynamicInvertory 来动态生成</p><h5 id="Inventory文件格式"><a href="#Inventory文件格式" class="headerlink" title="Inventory文件格式"></a>Inventory文件格式</h5><p>Inventory文件遵循INI文件风格，中括号中的字符为组名，可以将同一个主机同时归并到多个不同的组中，此外，当如若目标主机使用了非默认的ssh端口，还可以在主机名称之后使用冒号加端口来表明<br>例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ntp.bds.com</span><br><span class="line">[webservers]</span><br><span class="line">www1.bds.com</span><br><span class="line">www2.bds.com</span><br><span class="line">[bdservers]</span><br><span class="line">db1.bds.com</span><br><span class="line">db2.bds.com</span><br></pre></td></tr></table></figure></p><p>如果主机名称遵循相识的命名模式，还可以使用列表的形式标识各主机<br>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[webservers]</span><br><span class="line">www[0-51].bds.com</span><br><span class="line">[dbservers]</span><br><span class="line">db-[a-f].bds.com</span><br></pre></td></tr></table></figure></p><h5 id="主机变量"><a href="#主机变量" class="headerlink" title="主机变量"></a>主机变量</h5><p>可以再Inverntory中定义主机时，为其添加主机变量，以便于在playbook中使用例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[webservers]</span><br><span class="line">www1.bds.com http_port=80 maxRequestsPerChild=1024</span><br></pre></td></tr></table></figure></p><h5 id="组变量"><a href="#组变量" class="headerlink" title="组变量"></a>组变量</h5><p>组变量是指赋予给指定的组内所有的主机上的在playbook中可用的变量<br>例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[webservers]   #可以调用下面[webservsers:vars]中的变量</span><br><span class="line">www1.bds.com</span><br><span class="line">www2.bds.com</span><br><span class="line">[webservsers:vars]</span><br><span class="line">ntp_servser=ntp.bds.com</span><br><span class="line">nfs_servser=nfs.bds.com</span><br></pre></td></tr></table></figure></p><h5 id="组嵌套"><a href="#组嵌套" class="headerlink" title="组嵌套"></a>组嵌套</h5><p>Inventory中，组还可以包含其他的组，并且也可以向组中的主机指定变量，不过，这些变量只能在ansible-playbook中使用，而ansible不支持<br>例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[apache]</span><br><span class="line">http1.bds.com</span><br><span class="line">http2.bds.com</span><br><span class="line">[nginx]</span><br><span class="line">ngx1.bds.com</span><br><span class="line">ngx2.bds.com</span><br><span class="line">[webservsers:children]</span><br><span class="line">apache</span><br><span class="line">nginx</span><br><span class="line">[webservsers:vars]</span><br><span class="line">ntp_server=ntp.bds.com</span><br></pre></td></tr></table></figure></p><h5 id="Inventory参数"><a href="#Inventory参数" class="headerlink" title="Inventory参数"></a>Inventory参数</h5><p>ansible 基于ssh连接Invertory中指定的远程主机时，还可以通过参数指定其交互方式，这些参数如下所示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">基本结构</span><br><span class="line">-host: web</span><br><span class="line">remote_user: root</span><br><span class="line">tasks:</span><br><span class="line">  - task1</span><br><span class="line">    modulesname: module_args</span><br><span class="line">- task2</span><br><span class="line">   -  host: dbserver</span><br></pre></td></tr></table></figure></p><h4 id="条件测试"><a href="#条件测试" class="headerlink" title="条件测试"></a>条件测试</h4><p>如果需要根据变量，facts或者此前任务的执行结果来作为某个tasks执行与否的前提时要用到的条件测试</p><h5 id="when语句"><a href="#when语句" class="headerlink" title="when语句"></a>when语句</h5><p>在task后添加when子句即可使用条件测试，<br>when语句支持Jinjia2表达式语法，例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">  - name: &quot;shutdown Debian falovred systems&quot;</span><br><span class="line">    command: /sbin/shutdown -h now</span><br><span class="line">    when: ansible_os_family == &quot;Debian&quot;</span><br></pre></td></tr></table></figure><p>when语句中可以使用Jinja2的大多filter功能，<br>例如要忽略此前某语句的错误并基于其结果<br>(failed或者sccess)运行后面指定的语句，<br>可使用类似如下形式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">- command: /bin/false</span><br><span class="line">  register: result</span><br><span class="line">  ignore_errors: True</span><br><span class="line">- command: /bin/something</span><br><span class="line">  when: result| failed</span><br><span class="line">- command: /bin/something_else</span><br><span class="line">  when: result|success</span><br><span class="line">- command: /bin/still/something_else</span><br><span class="line">  when: result| skipped</span><br></pre></td></tr></table></figure><p>此外when语句还可以使用facts或者playbooks中定义的变量</p><p> 简单案例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# ansible web -m setup  |grep fqdn</span><br><span class="line">&quot;ansible_fqdn&quot;: &quot;bj-idc-14&quot;,</span><br><span class="line">[root@bj-idc-14 playbooks]# cat when.yml </span><br><span class="line">---</span><br><span class="line">- hosts: web</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars:</span><br><span class="line">    - username: user10</span><br><span class="line">  tasks:</span><br><span class="line">- name: create &#123;&#123; username &#125;&#125;user</span><br><span class="line">  user: name=&#123;&#123; username &#125;&#125; uid=510</span><br><span class="line">  when: ansible_fqdn == &quot;bj-idc-14&quot;</span><br></pre></td></tr></table></figure><p> 执行结果</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-a10d10e2195cb132.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><h4 id="迭代机制"><a href="#迭代机制" class="headerlink" title="迭代机制"></a>迭代机制</h4><p>当有需要重复性的执行的任务的时候，可以使用迭代机制，<br>其使用格式为将需要迭代的内容定义为item变量引用，<br>并通过with_items 语句来指定迭代的元素列表即可<br>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- name: add serveral users</span><br><span class="line">  user: name=&#123;&#123; item &#125;&#125; state=present groups=wheel </span><br><span class="line">  with_items:</span><br><span class="line">    - testuser1</span><br><span class="line">    - testuser2</span><br></pre></td></tr></table></figure><p>上面的语句等同于下面的语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- name: add serveral users1</span><br><span class="line">  user: name=testuser1 state=present groups=wheel </span><br><span class="line">- name: add serveral users2</span><br><span class="line">  user: name=testuser1 state=present groups=wheel</span><br></pre></td></tr></table></figure><p>事实上，with_items中可以使用元素还可以为hashes，例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- name: add serveral users</span><br><span class="line">  user: name=&#123;&#123; item.name &#125;&#125; state=present groups=&#123;&#123; item.groups&#125;&#125; </span><br><span class="line">  with_items:</span><br><span class="line">    - &#123; name: &apos;testuser1&apos;, groups: &apos;wheel&apos; &#125; </span><br><span class="line">    - &#123; name: &apos;testuser2&apos;, gorups: &apos;wheel&apos; &#125;</span><br></pre></td></tr></table></figure><p>ansible的循环机制还有很多高级功能,具体参见官方文档<br>迭代: 表示重复同类task时使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">调用: item</span><br><span class="line">定义循环列表: with_items</span><br><span class="line">- apache</span><br><span class="line">- php</span><br><span class="line">- mysql</span><br></pre></td></tr></table></figure><p>注意: with_items中的列表值可以是字典，但是引用的时候是使用item.KEY</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- &#123;name: apache, conf: conffiles/httpd.conf &#125; </span><br><span class="line">- &#123;name: php , conf: conffiles/php.ini &#125; </span><br><span class="line">- &#123;name: mysql-servser, conf: conffiles/my.conf</span><br></pre></td></tr></table></figure><h4 id="ansible-playbook-小技巧"><a href="#ansible-playbook-小技巧" class="headerlink" title="ansible-playbook 小技巧"></a>ansible-playbook 小技巧</h4><h5 id="Tags"><a href="#Tags" class="headerlink" title="Tags"></a>Tags</h5><ul><li><p>tags用于让用户选择运行或者路过playbook中的部分代码</p></li><li><p>ansible具有幂等性，因此会自身跳过没有变化的部分</p></li><li><p>即便如此,有些代码为测试其确实没有发生变化的时间依然会非常的地长,此时,如果确实其没有发生变化,就可以通过tags跳过这些代码片段当改变配置文件的时候</p></li><li><p>对于安装软件的操作就不需要在执行了,这时候有了tags就可以标记你期望运行的task任务中</p></li><li><p>tags表示在playbook可以为某个任务或者某些任务定义一个标签 </p></li><li><p>在执行次playbook时候通过为ansible-playbook 命令使用—tags选项能实现仅仅运行指定的tasks而非所有的</p><p>简单案例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# cat apache.yml </span><br><span class="line">--- </span><br><span class="line">- hosts: web</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars: </span><br><span class="line">  - http_port: 888 </span><br><span class="line">  - maxclient: 305</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install httpd package</span><br><span class="line">    yum: name=httpd state=latest</span><br><span class="line">  - name: install configurest file </span><br><span class="line">    #copy: src=conf/httpd.conf dest=/etc/httpd/conf/httpd.conf </span><br><span class="line">    template: src=templates/httpd.conf.j2 dest=/etc/httpd/conf/httpd.conf</span><br><span class="line">    tags: </span><br><span class="line">    - config   #定义了一个tags 叫做config </span><br><span class="line">    notify: </span><br><span class="line">    - restart httpd </span><br><span class="line">  - name: start httpd service </span><br><span class="line">    service: name=httpd enabled=true state=started  </span><br><span class="line">    tags: </span><br><span class="line">    - always               #tags特殊用法 代表总是执行这个任务</span><br><span class="line">handlers: </span><br><span class="line">  - name: restart httpd </span><br><span class="line">    service: name=httpd state=restarted</span><br></pre></td></tr></table></figure><p>执行结果</p></li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1542757-b5e8ad8d58c5b0a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><h4 id="check检测和语法检测"><a href="#check检测和语法检测" class="headerlink" title="check检测和语法检测"></a>check检测和语法检测</h4><p>不要做任何改变，相反，试着预测一些可能发生的变化</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-8b87b70751a3df0b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><p>语法检测</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-fafc68a28f730042.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><h4 id="list列出"><a href="#list列出" class="headerlink" title="list列出"></a>list列出</h4><p><img src="http://upload-images.jianshu.io/upload_images/1542757-0c56cb6847ec32dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><h4 id="forks线程"><a href="#forks线程" class="headerlink" title="forks线程"></a>forks线程</h4><p>语法:  -f FORKS, —forks=FORKS</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-3d0fcd139dcd2e5e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><h4 id="step交互执行"><a href="#step交互执行" class="headerlink" title="step交互执行"></a>step交互执行</h4><p><img src="http://upload-images.jianshu.io/upload_images/1542757-8063b8927022afff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><h3 id="ansible-playbook-角色roles-定义"><a href="#ansible-playbook-角色roles-定义" class="headerlink" title="ansible-playbook 角色roles 定义"></a>ansible-playbook 角色roles 定义</h3><h4 id="roles使用"><a href="#roles使用" class="headerlink" title="roles使用"></a>roles使用</h4><p>ansible自1.2版本引入的新特性，用于层次性，结构性的组织<br>playbook，roles能够根据层次型结构自动装载变量文件，tasks以及hanlders等</p><p>要使用roles只需要在playbook中使用include指令即可</p><p>简单来讲，roles就是通过分别将变量，文件，任务，模块以及处理器位置放置于单独的目录中，并可以便捷地include他们的一种机制，角色一般用于基于主机机构建服务的场景中</p><p>但也可以用于构建守护进程等场景中<br> 一个roles的案例如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">site.yml</span><br><span class="line">webservers.yml</span><br><span class="line">fooservers.yml</span><br><span class="line">roles/</span><br><span class="line">       common/</span><br><span class="line">              files/</span><br><span class="line">              templates/</span><br><span class="line">              tasks/</span><br><span class="line">              handlers/</span><br><span class="line">              vars/</span><br><span class="line">              meta/</span><br><span class="line">       webservsers/     </span><br><span class="line">              files/    </span><br><span class="line">              templates/</span><br><span class="line">              tasks/</span><br><span class="line">              handlers/</span><br><span class="line">              vars/</span><br><span class="line">              meta/</span><br></pre></td></tr></table></figure><ul><li><p>在playbook中，可以这样使用roles</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: webservers</span><br><span class="line">  roles:</span><br><span class="line">    - common</span><br><span class="line">    - webservers</span><br></pre></td></tr></table></figure></li><li><p>也可以向roles传递参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: webservsers</span><br><span class="line">  roles:</span><br><span class="line">    - common</span><br><span class="line">    - &#123; role: foo_app_instance，dir: &apos;/opt/a&apos; port: 5000 &#125;</span><br></pre></td></tr></table></figure></li><li><p>甚至可以条件式的使用roles</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: webservers</span><br><span class="line">  roles:</span><br><span class="line">    - &#123; roles: some_role, when: &quot;ansible_os_family == &apos;Redhat&apos; &quot;&#125;</span><br></pre></td></tr></table></figure></li><li><p>还可以role之间设定依赖关系</p></li></ul><h4 id="roles创建步骤"><a href="#roles创建步骤" class="headerlink" title="roles创建步骤"></a>roles创建步骤</h4><ul><li>创建以roles命名的目录</li><li>在roles目录中分别创建以各个角色命名的目录， 如webservers等</li><li>在每个角色命名的目录中分别创建files，handles，meta，tasks，templates，和vars等目录，用不到的可以创建为空目录，也可以不创建</li><li>在playbook文件中，调用各个角色</li></ul><h4 id="roles内各个目录中可用的文件"><a href="#roles内各个目录中可用的文件" class="headerlink" title="roles内各个目录中可用的文件"></a>roles内各个目录中可用的文件</h4><ul><li>tasks目录: 至少应该包含一个名为main.yml的文件，其定义了此角色的任务列表，此文件可以使用include包含其他的位于此目录中的task文件</li><li>files目录: 存放由copy 和script等模块调用的文件</li><li>templates目录: template模块会自动再次目录中寻找Jinja2模板文件</li><li>handlers目录: 此目录中应当包含一个main.yml文件，用于定义此角色用到的各handler：在handler中使用include包含的其它的handler文件也应该位于此目录中</li><li>vars目录: 应当包含一个main.yml文件，用于定义此角色用到的变量</li><li>meta目录: 应当包含一个main.yml文件， 用于定义此角色的特殊设定的依赖关系， ansible 1.3及以后的版本才支持</li><li>default目录： 为当前角色设定默认变量时使用的目录，应当包含一个main.yml文件</li></ul><h4 id="roles总结"><a href="#roles总结" class="headerlink" title="roles总结"></a>roles总结</h4><ul><li>目录名同为角色名</li><li>目录结构有固定格式<ul><li>files：静态文件</li><li>templates： Jinja2 模板文件</li><li>tasks：至少有一个main.yml文件，定义各tasks</li><li>handlers： 至少有一个main.yml文件，定义各handlers</li><li>vars：定义变量</li><li>meta：定义依赖关系信息</li></ul></li><li>site.yml中定义playbook， 额外也可以有其他的yml文件</li></ul><h4 id="roles简单案例"><a href="#roles简单案例" class="headerlink" title="roles简单案例"></a>roles简单案例</h4><p> 建立目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# mkdir -pv /root/ansible_playbooks/roles/&#123;websrvs,dbsrvs&#125;/&#123;tasks,files,templates,meta,handlers,vars&#125;</span><br></pre></td></tr></table></figure><p>查看目录树</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 playbooks]# tree /root/ansible_playbooks/</span><br><span class="line">/root/ansible_playbooks/</span><br><span class="line">└── roles</span><br><span class="line">├── dbsrvs</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── meta</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">└── websrvs</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">├── meta</span><br><span class="line">├── tasks</span><br><span class="line">├── templates</span><br><span class="line">└── vars</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@bj-idc-14 ansible_playbooks]# cat site.yml</span><br><span class="line">---</span><br><span class="line">- hosts: web</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">- websrvs</span><br><span class="line">- hosts: web</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">- dbsrvs</span><br></pre></td></tr></table></figure><p>目录树</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-23cb804b91cbb76c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><p>执行结果<br>第一次websrvs</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-3b37901c361d26f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p><p>第二次websrvs和dbsrvs</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-83550b94446b36bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;playbook简介&quot;&gt;&lt;a href=&quot;#playbook简介&quot; class=&quot;headerlink&quot; title=&quot;playbook简介&quot;&gt;&lt;/a&gt;playbook简介&lt;/h3&gt;&lt;p&gt;playbook是ansible用于配置，部署，和管理被控节点的剧本。通过playbook的详细描述，执行其中的一系列tasks，可以让远端主机达到预期的状态。playbook就像Ansible控制器给被控节点列出的的一系列to-do-list，而被控节点必须要完成。&lt;br&gt;也可以这么理解，playbook 字面意思，即剧本，现实中由演员按照剧本表演，在Ansible中，这次由计算机进行表演，由计算机安装，部署应用，提供对外服务，以及组织计算机处理各种各样的事情。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ansible" scheme="http://budongshu.gitee.io/categories/ansible/"/>
    
    
      <category term="ansible" scheme="http://budongshu.gitee.io/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>https_openssl_update</title>
    <link href="http://budongshu.gitee.io/2017/09/07/https_openssl_update/"/>
    <id>http://budongshu.gitee.io/2017/09/07/https_openssl_update/</id>
    <published>2017-09-07T12:26:00.000Z</published>
    <updated>2020-03-27T07:51:01.584Z</updated>
    
    <content type="html"><![CDATA[<h3 id="升级openssl"><a href="#升级openssl" class="headerlink" title="升级openssl"></a>升级openssl</h3><h4 id="https-网站打分"><a href="#https-网站打分" class="headerlink" title="https 网站打分"></a>https 网站打分</h4><p><a href="https://www.ssllabs.com/ssltest/analyze.html?d=www.jd.com" target="_blank" rel="noopener">https://www.ssllabs.com/ssltest/analyze.html?d=www.jd.com</a></p><a id="more"></a><h4 id="openssl-漏洞查询"><a href="#openssl-漏洞查询" class="headerlink" title="openssl 漏洞查询"></a>openssl 漏洞查询</h4><p><a href="https://blog.myssl.com/https-security-best-practices-2/" target="_blank" rel="noopener">https://blog.myssl.com/https-security-best-practices-2/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mkdir /Data/apps</span><br><span class="line">cd /opt</span><br><span class="line">wget https://www.openssl.org/source/old/1.0.1/openssl-1.0.1t.tar.gz</span><br><span class="line">tar xf openssl-1.0.1t.tar.gz</span><br><span class="line">cd openssl-1.0.1t</span><br><span class="line">./config shared zlib --prefix=/Data/apps/openssl</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">mv /usr/bin/openssl /usr/bin/openssl.old</span><br><span class="line">mv /usr/include/openssl /usr/include/openssl.old</span><br><span class="line">ln -s /Data/apps/openssl/bin/openssl /usr/bin/openssl</span><br><span class="line">ln -s /Data/apps/openssl/include/openssl /usr/include/openssl </span><br><span class="line">ln -s /Data/apps/openssl/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1</span><br><span class="line">ln -s /Data/apps/openssl/lib/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl version</span><br></pre></td></tr></table></figure><h3 id="重新编译nginx"><a href="#重新编译nginx" class="headerlink" title="重新编译nginx"></a>重新编译nginx</h3><h4 id="查看nginx-是否静态编译openssl"><a href="#查看nginx-是否静态编译openssl" class="headerlink" title="查看nginx 是否静态编译openssl"></a>查看nginx 是否静态编译openssl</h4><p>1 nginx -V<br> <img src="http://upload-images.jianshu.io/upload_images/1542757-ef21bade0e915000.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>发现没有显示出来build openssl 的版本 则表明是静态编译的<br>2 ldd /Data/apps/nginx/sbin/nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@l-ng5.ops.prod.idc1 openssl]# ldd /Data/apps/nginx/sbin/nginx</span><br><span class="line">linux-vdso.so.1 =&gt;  (0x00007ffd70ac8000)</span><br><span class="line">libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x0000003014c00000)</span><br><span class="line">libdl.so.2 =&gt; /lib64/libdl.so.2 (0x0000003014400000)</span><br><span class="line">libcrypt.so.1 =&gt; /lib64/libcrypt.so.1 (0x0000003016400000)</span><br><span class="line">libluajit-5.1.so.2 =&gt; /Data/apps/luajit/lib/libluajit-5.1.so.2 (0x00007f78bd38f000)</span><br><span class="line">libm.so.6 =&gt; /lib64/libm.so.6 (0x0000003015400000)</span><br><span class="line">libpcre.so.0 =&gt; /lib64/libpcre.so.0 (0x00007f78bd162000)</span><br><span class="line">libz.so.1 =&gt; /lib64/libz.so.1 (0x0000003015800000)</span><br><span class="line">libc.so.6 =&gt; /lib64/libc.so.6 (0x0000003014800000)</span><br><span class="line">/lib64/ld-linux-x86-64.so.2 (0x0000003014000000)</span><br><span class="line">libfreebl3.so =&gt; /lib64/libfreebl3.so (0x0000003018800000)</span><br><span class="line">libgcc_s.so.1 =&gt; /lib64/libgcc_s.so.1 (0x0000003c8ea00000)</span><br><span class="line"># 如果依赖库不含有Openssl，则表明是静态编译的Openssl的。</span><br></pre></td></tr></table></figure></p><h4 id="修改下载解压后nginx源码目录里面代码"><a href="#修改下载解压后nginx源码目录里面代码" class="headerlink" title="修改下载解压后nginx源码目录里面代码"></a>修改下载解压后nginx源码目录里面代码</h4><p>进入目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/src/tengine-2.2.0/auto/lib/openssl </span><br><span class="line">cat conf</span><br></pre></td></tr></table></figure></p><p>找到下面这样一段代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CORE_INCS=&quot;$CORE_INCS $OPENSSL/.openssl/include&quot;</span><br><span class="line">CORE_DEPS=&quot;$CORE_DEPS $OPENSSL/.openssl/include/openssl/ssl.h&quot;</span><br><span class="line">CORE_LIBS=&quot;$CORE_LIBS $OPENSSL/.openssl/lib/libssl.a&quot;</span><br><span class="line">CORE_LIBS=&quot;$CORE_LIBS $OPENSSL/.openssl/lib/libcrypto.a&quot;</span><br></pre></td></tr></table></figure></p><p>更改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CORE_INCS=&quot;$CORE_INCS $OPENSSL/include&quot;</span><br><span class="line">CORE_DEPS=&quot;$CORE_DEPS $OPENSSL/include/openssl/ssl.h&quot;</span><br><span class="line">CORE_LIBS=&quot;$CORE_LIBS $OPENSSL/lib/ssleay32.lib&quot;</span><br><span class="line">CORE_LIBS=&quot;$CORE_LIBS $OPENSSL/lib/libeay32.lib&quot;</span><br></pre></td></tr></table></figure><h4 id="nginx-编译参数"><a href="#nginx-编译参数" class="headerlink" title="nginx 编译参数"></a>nginx 编译参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/Data/apps/nginx/ --with-debug --add-module=/opt/src/ngx_cache_purge-2.3 --with-http_stub_status_module --with-http_ssl_module --add-module=/opt/src/ngx_devel_kit-0.3.0rc1 --add-module=/opt/src/lua-nginx-module-0.10.2/ --with-ld-opt=-Wl,-rpath,/Data/apps/luajit/lib --with-openssl=/Data/apps/openssl</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;升级openssl&quot;&gt;&lt;a href=&quot;#升级openssl&quot; class=&quot;headerlink&quot; title=&quot;升级openssl&quot;&gt;&lt;/a&gt;升级openssl&lt;/h3&gt;&lt;h4 id=&quot;https-网站打分&quot;&gt;&lt;a href=&quot;#https-网站打分&quot; class=&quot;headerlink&quot; title=&quot;https 网站打分&quot;&gt;&lt;/a&gt;https 网站打分&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://www.ssllabs.com/ssltest/analyze.html?d=www.jd.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.ssllabs.com/ssltest/analyze.html?d=www.jd.com&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="http://budongshu.gitee.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="http://budongshu.gitee.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>tengine-lua_install</title>
    <link href="http://budongshu.gitee.io/2017/09/07/tengine_lua_install/"/>
    <id>http://budongshu.gitee.io/2017/09/07/tengine_lua_install/</id>
    <published>2017-09-07T12:26:00.000Z</published>
    <updated>2020-03-27T06:20:07.290Z</updated>
    
    <content type="html"><![CDATA[<h3 id="shell-脚本安装"><a href="#shell-脚本安装" class="headerlink" title="shell 脚本安装"></a>shell 脚本安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">if [ ! -e /Data/apps ];then </span><br><span class="line">      mkdir /Data/apps -pv </span><br><span class="line">fi</span><br><span class="line">if [ ! -e /opt/src ];then</span><br><span class="line">mkdir /opt/src</span><br><span class="line">fi</span><br><span class="line">cd /opt/src</span><br><span class="line"></span><br><span class="line">#tengine</span><br><span class="line"></span><br><span class="line">if [ ! -e /opt/src/tengine-2.2.0.tar.gz ];then</span><br><span class="line">wget http://tengine.taobao.org/download/tengine-2.2.0.tar.gz</span><br><span class="line">tar xf tengine-2.2.0.tar.gz</span><br><span class="line">fi</span><br><span class="line">#ngx_purge</span><br><span class="line"></span><br><span class="line">if [ ! -e /opt/src/ngx_cache_purge-2.3.tar.gz ];then</span><br><span class="line">wget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz</span><br><span class="line">tar xf ngx_cache_purge-2.3.tar.gz</span><br><span class="line">fi</span><br><span class="line">#ngx_devel_kit</span><br><span class="line"></span><br><span class="line">if [ ! -e /opt/src/v0.3.0rc1.tar.gz ];then</span><br><span class="line">wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0rc1.tar.gz</span><br><span class="line">tar xf v0.3.0rc1.tar.gz</span><br><span class="line">fi</span><br><span class="line">#luajit</span><br><span class="line">if [ ! -e /opt/src/LuaJIT-2.0.4.tar.gz ];then</span><br><span class="line">wget http://luajit.org/download/LuaJIT-2.0.4.tar.gz</span><br><span class="line">tar xf LuaJIT-2.0.4.tar.gz</span><br><span class="line">fi</span><br><span class="line">#lua-nginx-module</span><br><span class="line">if [ !  -e /opt/src/v0.10.2.tar.gz  ];then</span><br><span class="line">wget https://github.com/openresty/lua-nginx-module/archive/v0.10.2.tar.gz</span><br><span class="line">tar xf v0.10.2.tar.gz</span><br><span class="line">fi</span><br><span class="line">if [ ! -e /Data/apps/luajit  ];then</span><br><span class="line">cd LuaJIT-2.0.4</span><br><span class="line">make</span><br><span class="line">make install PREFIX=/Data/apps/luajit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ !  -e /etc/profile.d/luajit.sh ];then</span><br><span class="line">cat &gt; /etc/profile.d/luajit.sh  &lt;&lt;EOF</span><br><span class="line">export LUAJIT_LIB=/Data/apps/luajit/lib</span><br><span class="line">export LUAJIT_INC=/Data/apps/luajit/include/luajit-2.0/</span><br><span class="line">EOF</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">test -e /etc/profile.d/luajit.sh   &amp;&amp;  . /etc/profile.d/luajit.sh</span><br><span class="line">test -e /Data/apps/luajit/lib/libluajit-5.1.so.2  &amp;&amp; ln -s /Data/apps/luajit/lib/libluajit-5.1.so.2 /lib64/</span><br><span class="line"></span><br><span class="line">#nginx</span><br><span class="line">cd /opt/src/tengine-2.2.0</span><br><span class="line">./configure --prefix=/Data/apps/nginx/  --with-debug --add-module=/opt/src/ngx_cache_purge-2.3 --with-http_stub_status_module --with-http_ssl_module --add-module=/opt/src/ngx_devel_kit-0.3.0rc1 --add-module=/opt/src/lua-nginx-module-0.10.2/    --with-ld-opt=-Wl,-rpath,/Data/apps/luajit/lib</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">[  $? -eq 0 ] &amp;&amp;  echo &apos;The tengine lua update Success&apos;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="nginx配置文件"><a href="#nginx配置文件" class="headerlink" title="nginx配置文件"></a>nginx配置文件</h3><h4 id="server-主机配置"><a href="#server-主机配置" class="headerlink" title="server 主机配置"></a>server 主机配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location /lua &#123;</span><br><span class="line">        # MIME type determined by default_type:</span><br><span class="line">        default_type &apos;text/plain&apos;;</span><br><span class="line">        content_by_lua &quot;ngx.say(&apos;Hello World Lua!&apos;)&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="web页面访问"><a href="#web页面访问" class="headerlink" title="web页面访问"></a>web页面访问</h4><p><img src="http://upload-images.jianshu.io/upload_images/1542757-b7b8fcf6850ff1de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="fpm打包"><a href="#fpm打包" class="headerlink" title="fpm打包"></a>fpm打包</h3><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/tmp/nginxinstall/Data/apps/nginx</span><br></pre></td></tr></table></figure><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@budongshu]# cat /tmp/pro.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">if [ `id avatar |grep avatar | wc -l` -eq 1 ]; then</span><br><span class="line">exit 0</span><br><span class="line">else</span><br><span class="line">        useradd avatar</span><br><span class="line">exit 0</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@budongshu]# cat /tmp/post.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">if [  -e /Data/apps/nginx ] ;then </span><br><span class="line">  rm -fr /Data/apps/nginx  </span><br><span class="line">  exit 0</span><br><span class="line">else </span><br><span class="line">   exit 0</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="命令安装"><a href="#命令安装" class="headerlink" title="命令安装"></a>命令安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin/fpm -s dir -t rpm -n hdf-tengine -v 2.2.0 --iteration 3.el6  -d &apos;pcre,pcre-devel,openssl-devel&apos; --post-install /tmp/pro.sh --post-uninstall /tmp/post.sh  -f -C /tmp/nginxinstall/  --description &apos;proxy tengine lua 2.2.0 rpm&apos; -p /opt/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;shell-脚本安装&quot;&gt;&lt;a href=&quot;#shell-脚本安装&quot; class=&quot;headerlink&quot; title=&quot;shell 脚本安装&quot;&gt;&lt;/a&gt;shell 脚本安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ ! -e /Data/apps ];then &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mkdir /Data/apps -pv &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ ! -e /opt/src ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mkdir /opt/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd /opt/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#tengine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ ! -e /opt/src/tengine-2.2.0.tar.gz ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wget http://tengine.taobao.org/download/tengine-2.2.0.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tar xf tengine-2.2.0.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#ngx_purge&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ ! -e /opt/src/ngx_cache_purge-2.3.tar.gz ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tar xf ngx_cache_purge-2.3.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#ngx_devel_kit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ ! -e /opt/src/v0.3.0rc1.tar.gz ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0rc1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tar xf v0.3.0rc1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#luajit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ ! -e /opt/src/LuaJIT-2.0.4.tar.gz ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wget http://luajit.org/download/LuaJIT-2.0.4.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tar xf LuaJIT-2.0.4.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#lua-nginx-module&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ !  -e /opt/src/v0.10.2.tar.gz  ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wget https://github.com/openresty/lua-nginx-module/archive/v0.10.2.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tar xf v0.10.2.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ ! -e /Data/apps/luajit  ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cd LuaJIT-2.0.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	make install PREFIX=/Data/apps/luajit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ !  -e /etc/profile.d/luajit.sh ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;gt; /etc/profile.d/luajit.sh  &amp;lt;&amp;lt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export LUAJIT_LIB=/Data/apps/luajit/lib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export LUAJIT_INC=/Data/apps/luajit/include/luajit-2.0/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test -e /etc/profile.d/luajit.sh   &amp;amp;&amp;amp;  . /etc/profile.d/luajit.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test -e /Data/apps/luajit/lib/libluajit-5.1.so.2  &amp;amp;&amp;amp; ln -s /Data/apps/luajit/lib/libluajit-5.1.so.2 /lib64/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd /opt/src/tengine-2.2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure --prefix=/Data/apps/nginx/  --with-debug --add-module=/opt/src/ngx_cache_purge-2.3 --with-http_stub_status_module --with-http_ssl_module --add-module=/opt/src/ngx_devel_kit-0.3.0rc1 --add-module=/opt/src/lua-nginx-module-0.10.2/    --with-ld-opt=-Wl,-rpath,/Data/apps/luajit/lib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[  $? -eq 0 ] &amp;amp;&amp;amp;  echo &amp;apos;The tengine lua update Success&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="http://budongshu.gitee.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="http://budongshu.gitee.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>ansible 基础模块介绍</title>
    <link href="http://budongshu.gitee.io/2017/09/06/ansible_module%E5%9F%BA%E7%A1%80%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D/"/>
    <id>http://budongshu.gitee.io/2017/09/06/ansible_module基础模块介绍/</id>
    <published>2017-09-06T12:26:00.000Z</published>
    <updated>2020-03-27T06:15:58.917Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运维自动化工具介绍"><a href="#运维自动化工具介绍" class="headerlink" title="运维自动化工具介绍"></a>运维自动化工具介绍</h2><p> 在日常服务器维护中，从系统安装到程序部署再到发布应用，在大规模的生产环境中，如果需要手动的每台服务器进行安装配置将会给运维人员带来许多繁琐而又重复的工作。这就促使了在每个运维层次中出现了不同的自动化运维工具。<br>常见的自动化运维工具分类有以下几类：</p><a id="more"></a><h3 id="系统安装运维工具（OS-Provisioning）："><a href="#系统安装运维工具（OS-Provisioning）：" class="headerlink" title="系统安装运维工具（OS Provisioning）："></a>系统安装运维工具（OS Provisioning）：</h3><p> 常见的有：PXE,Cobbler，Red Hat Satelite(redhat)系统专用等</p><h3 id="操作系统的配置运维工具-OS-Config-："><a href="#操作系统的配置运维工具-OS-Config-：" class="headerlink" title="操作系统的配置运维工具(OS Config)："></a>操作系统的配置运维工具(OS Config)：</h3><p> 常见的有：cfengine，puppet,saltsack,chef等 </p><h3 id="应用程序部署工具-Application-Service-Orchestration"><a href="#应用程序部署工具-Application-Service-Orchestration" class="headerlink" title="应用程序部署工具(Application Service Orchestration):"></a>应用程序部署工具(Application Service Orchestration):</h3><p> 常见的有:Func,Fabric,ControITier,Capistrano等</p><h3 id="根据工作模式不同上面的运维工具有分为以下两类："><a href="#根据工作模式不同上面的运维工具有分为以下两类：" class="headerlink" title="根据工作模式不同上面的运维工具有分为以下两类："></a>根据工作模式不同上面的运维工具有分为以下两类：</h3><ul><li>agent：基于ssl协议实现，agent工作在被监控端，例如：puppet</li><li>agentless: 基于ssh key实现，例如：ansible</li></ul><h2 id="ansible介绍"><a href="#ansible介绍" class="headerlink" title="ansible介绍"></a>ansible介绍</h2><p>  ansible是一款轻量级自动化运维工具，由Python语言开发，结合了多种自动化运维工具的特性，实现了批量系统配置、批量程序部署、批量命令执行等功能；ansible是基于模块化实现批量操作的。</p><p><img src="http://upload-images.jianshu.io/upload_images/1542757-c4b2d6eede79a975.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h2 id="ansible组成"><a href="#ansible组成" class="headerlink" title="ansible组成"></a>ansible组成</h2><ul><li>Ansible：            核心</li><li>Modules：          包括 Ansible 自带的核心模块及自定义模块</li><li>Plugins：            完成模块功能的补充，包括连接插件、邮件插件等</li><li>Playbooks：       网上很多翻译为剧本，个人觉得理解为编排更为合理；定义 Ansible 多任务配置文件，有 Ansible 自动执行</li><li>Inventory：         定义 Ansible 管理主机的清单</li></ul><h2 id="ansible特点"><a href="#ansible特点" class="headerlink" title="ansible特点"></a>ansible特点</h2><p>模块化、部署简单、工作于agentless模式、默认使用ssh协议、支持自定义模块、支持Palybook等    </p><h2 id="ansible-基本安装介绍"><a href="#ansible-基本安装介绍" class="headerlink" title="ansible 基本安装介绍"></a>ansible 基本安装介绍</h2><h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># uname -a</span></span><br><span class="line">Linux note1 <span class="number">2.6</span><span class="number">.32</span><span class="number">-504.</span>el6.x86_64 <span class="comment">#1 SMP Wed Oct 15 04:27:16 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">[root@note1 ~]<span class="comment"># cat /etc/redhat-release </span></span><br><span class="line">CentOS release <span class="number">6.6</span> (Final)</span><br></pre></td></tr></table></figure><h3 id="epel源"><a href="#epel源" class="headerlink" title="epel源"></a>epel源</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/epel.repo  http://mirrors.aliyun.com/repo/epel<span class="number">-6.</span>repo</span><br><span class="line">```  </span><br><span class="line"><span class="comment">### 安装ansible</span></span><br><span class="line">```python</span><br><span class="line">[root@note1 ~]<span class="comment"># yum -y install python-jinja2 PyYAML python-paramiko python-babel python-crypto ansible</span></span><br></pre></td></tr></table></figure><h3 id="配置ansible主机文件"><a href="#配置ansible主机文件" class="headerlink" title="配置ansible主机文件"></a>配置ansible主机文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># &gt; /etc/ansible/hosts  #清空文件(操作前先备份)</span></span><br><span class="line">[root@note1 ~]<span class="comment"># vim /etc/ansible/hosts    #编辑配置主机文件</span></span><br><span class="line">[root@note1 ~]<span class="comment"># cat /etc/ansible/hosts        #查看配置</span></span><br><span class="line">[web]</span><br><span class="line"><span class="number">192.168</span><span class="number">.70</span><span class="number">.51</span></span><br><span class="line">[db]</span><br><span class="line"><span class="number">192.168</span><span class="number">.70</span><span class="number">.50</span></span><br></pre></td></tr></table></figure><h3 id="配置主机免密钥登陆"><a href="#配置主机免密钥登陆" class="headerlink" title="配置主机免密钥登陆"></a>配置主机免密钥登陆</h3><p>为了避免Ansible下发指令时输入目标主机密码，通过证书签名达到SSH无密码是一个好的方案，推荐使用ssh-keygen与ssh- copy-id来实现快速证书的生成和公钥下发，其中ssh-keygen生成一对密钥，使用ssh-copy-id来下发生成的公钥。具体操作如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]ssh-keygen -t rsa -P <span class="string">''</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> which to save the key (/root/.ssh/id_rsa): </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint <span class="keyword">is</span>:</span><br><span class="line">a8:eb:cc:da:<span class="number">26</span>:<span class="number">06</span>:<span class="number">67</span>:<span class="number">9</span>b:<span class="number">23</span>:ae:<span class="number">45</span>:<span class="number">04</span>:d4:<span class="number">76</span>:<span class="number">63</span>:bb root@bj-idc<span class="number">-15</span></span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+--[ RSA 2048]----+</span></span><br><span class="line"><span class="string">|o..              |</span></span><br><span class="line"><span class="string">| . o +           |</span></span><br><span class="line"><span class="string">|  o o o          |</span></span><br><span class="line"><span class="string">| .   . .         |</span></span><br><span class="line"><span class="string">|  .   o S        |</span></span><br><span class="line"><span class="string">|..o  E           |</span></span><br><span class="line"><span class="string">| +.o.            |</span></span><br><span class="line"><span class="string">|..*+..           |</span></span><br><span class="line"><span class="string">|++.**            |</span></span><br></pre></td></tr></table></figure><h3 id="密钥拷贝到远程主机"><a href="#密钥拷贝到远程主机" class="headerlink" title="密钥拷贝到远程主机"></a>密钥拷贝到远程主机</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ssh-copy-id  -i ~/.ssh/id_rsa.pub root@192.168.70.51</span></span><br><span class="line">root@<span class="number">192.168</span><span class="number">.70</span><span class="number">.51</span><span class="string">'s password: </span></span><br><span class="line"><span class="string">Now try logging into the machine, with "ssh '</span>root@<span class="number">10.10</span><span class="number">.10</span><span class="number">.14</span><span class="string">'", and check in:</span></span><br><span class="line"><span class="string">  .ssh/authorized_keys</span></span><br><span class="line"><span class="string">to make sure we haven'</span>t added extra keys that you weren<span class="string">'t expecting.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@note1 ~]# ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.70.50</span></span><br><span class="line"><span class="string">root@192.168.70.50'</span>s password: </span><br><span class="line">Now <span class="keyword">try</span> logging into the machine, <span class="keyword">with</span> <span class="string">"ssh 'root@192.168.70.50'"</span>, <span class="keyword">and</span> check <span class="keyword">in</span>:</span><br><span class="line">  .ssh/authorized_keys</span><br><span class="line">to make sure we haven<span class="string">'t added extra keys that you weren'</span>t expecting.</span><br><span class="line"></span><br><span class="line">*注意：在首次连接或者重装系统之后会出现检查 keys 的提示*</span><br></pre></td></tr></table></figure><h3 id="测试ping"><a href="#测试ping" class="headerlink" title="测试ping"></a>测试ping</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m ping </span></span><br><span class="line">The authenticity of host <span class="string">'192.168.70.50 (192.168.70.50)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 56:49:f5:4f:3e:30:8d:5c:2c:42:06:79:69:a4:18:89.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br><span class="line"><span class="string">解决办法:</span></span><br><span class="line"><span class="string">vim /etc/ansible/ansible.cfg 或者 ~/.ansible.cfg</span></span><br><span class="line"><span class="string">[defaults]</span></span><br><span class="line"><span class="string">host_key_checking = False</span></span><br><span class="line"><span class="string">也可以通过设置系统环境变量来禁止这样的提示</span></span><br><span class="line"><span class="string">export ANSIBLE_HOST_KEY_CHECKING=False</span></span><br><span class="line"><span class="string">应用最后一个办法</span></span><br><span class="line"><span class="string">[root@note1 ~]# export ANSIBLE_HOST_KEY_CHECKING=False</span></span><br><span class="line"><span class="string">再次测试</span></span><br><span class="line"><span class="string">[root@note1 ~]# ansible all -m ping                                </span></span><br><span class="line"><span class="string">192.168.70.50 | success &gt;&gt; &#123;</span></span><br><span class="line"><span class="string">    "changed": false, </span></span><br><span class="line"><span class="string">    "ping": "pong"</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">192.168.70.51 | success &gt;&gt; &#123;</span></span><br><span class="line"><span class="string">    "changed": false, </span></span><br><span class="line"><span class="string">    "ping": "pong"</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Ansible命令参数介绍"><a href="#Ansible命令参数介绍" class="headerlink" title="Ansible命令参数介绍"></a>Ansible命令参数介绍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-v,–verbose   详细模式，如果命令执行成功，输出详细的结果(-vv –vvv -vvvv)</span><br><span class="line">-i PATH,–inventory=PATH   指定host文件的路径，默认是在/etc/ansible/hosts </span><br><span class="line">-f NUM,–forks=NU  NUM是指定一个整数，默认是<span class="number">5</span>，指定fork开启同步进程的个数。 </span><br><span class="line">-m NAME,–module-name=NAME   指定使用的module名称，默认是command</span><br><span class="line">-m DIRECTORY,–module-path=DIRECTORY   指定module的目录来加载module，默认是/usr/share/ansible, </span><br><span class="line">-a,MODULE_ARGS   指定module模块的参数 </span><br><span class="line">-k,-ask-<span class="keyword">pass</span>     提示输入ssh的密码，而不是使用基于ssh的密钥认证</span><br><span class="line">-sudo                   指定使用sudo获得root权限</span><br><span class="line">-K,-ask-sudo-<span class="keyword">pass</span>       提示输入sudo密码，与–sudo一起使用 </span><br><span class="line">-u USERNAME,-user=USERNAME  指定移动端的执行用户 </span><br><span class="line">-C,-check               测试此命令执行会改变什么内容，不会真正的去执行</span><br></pre></td></tr></table></figure><h3 id="主机清单介绍hosts"><a href="#主机清单介绍hosts" class="headerlink" title="主机清单介绍hosts"></a>主机清单介绍hosts</h3><p> Ansible 通过读取默认的主机清单配置/etc/ansible/hosts，可以同时连接到多个远程主机上执行任务，默认路径可以通过修改 ansible.cfg 的 hostfile 参数指定路径。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[dbserver]  []表示主机的分组名,可以按照功能,系统进行分类,便于进行操作</span><br><span class="line"><span class="number">192.168</span><span class="number">.10</span><span class="number">.2</span> </span><br><span class="line">one.example.com </span><br><span class="line">www.bds.com:<span class="number">5309</span>         <span class="comment">#支持指定ssh端口5309 </span></span><br><span class="line">jumper ansible_ssh_port=<span class="number">5309</span> ansible_ssh_host=<span class="number">192.168</span><span class="number">.10</span><span class="number">.2</span>   <span class="comment">#设置主机别名为jumper</span></span><br><span class="line">www[<span class="number">01</span>:<span class="number">50</span>].bds.com       <span class="comment">#支持通配符匹配www01.bds.com www02.bds.com</span></span><br><span class="line">[web]    <span class="comment">#提醒下这里面字母是随便定义的</span></span><br><span class="line">web-[a:f].bds.com        <span class="comment">#支持字母匹配 web-a.bds.com ..web-f.bds.com</span></span><br></pre></td></tr></table></figure><h3 id="为主机指定类型和连接用户"><a href="#为主机指定类型和连接用户" class="headerlink" title="为主机指定类型和连接用户"></a>为主机指定类型和连接用户</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[bds]</span><br><span class="line">Localhost  ansible_connection=local</span><br><span class="line">other1.example.com ansible_connection=ssh ansible_ssh_user=deploy</span><br><span class="line">other2.example.com ansible_connection=ssh ansible_ssh_user=deploy</span><br><span class="line">ansible hosts配置文件中支持指令</span><br></pre></td></tr></table></figure><p><strong>注意: 前面如果不配置主机免密钥登录,可以在/etc/ansible/hosts中定义用户和密码,主机ip地址,和ssh端口,这样也可以进行免密码访问,但是这个/hosts文件要保护好,因为所有的密码都写在里面</strong></p><h3 id="hosts文件配置参数介绍"><a href="#hosts文件配置参数介绍" class="headerlink" title="hosts文件配置参数介绍"></a>hosts文件配置参数介绍</h3><hr><p>1, ansible<em>ssh_host :<br>指定主机别名对应的真实 IP，如：100 ansible_ssh_host=192.168.1.100，随后连接该主机无须指定完整 IP，只需指定 251 就行<br>2, ansible_ssh_port :<br>指定连接到这个主机的 ssh 端口，默认 22<br>3, ansible_ssh_user:<br>连接到该主机的 ssh 用户<br>4, ansible_ssh_pass:<br>连接到该主机的 ssh 密码（连-k 选项都省了），安全考虑还是建议使用私钥或在命令行指定-k 选项输入<br>5, ansible_sudo_pass:                              sudo 密码<br>6, ansible_sudo_exe:                                sudo 命令路径<br>7, ansible_connection :<br>连接类型，可以是 local、ssh 或 paramiko，ansible1.2 之前默认为 paramiko<br>8, ansible_ssh_private_key_file :               私钥文件路径<br>9, ansible_shell_type  :<br>目标系统的 shell 类型，默认为 sh,如果设置 csh/fish，那么命令需要遵循它们语法<br>10, ansible_python_interpreter  :<br>python 解释器路径，默认是/usr/bin/python，但是如要要连*BSD系统的话，就需要该指令修改 python 路径<br>11, ansible</em><em>_interpreter  :<br>这里的”</em>“可以是 ruby 或 perl 或其他语言的解释器，作用和 ansible_python_interpreter 类似</p><h2 id="ansible-常用模块介绍"><a href="#ansible-常用模块介绍" class="headerlink" title="ansible 常用模块介绍"></a>ansible 常用模块介绍</h2><h3 id="ansible使用帮助"><a href="#ansible使用帮助" class="headerlink" title="ansible使用帮助"></a>ansible使用帮助</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible-doc  -l                 #查询ansible的所有模块</span></span><br><span class="line">[root@note1 ~]<span class="comment"># ansible-doc -s module_name  #查看模块的属性信息</span></span><br></pre></td></tr></table></figure><h3 id="例子-查询service-模块的信息"><a href="#例子-查询service-模块的信息" class="headerlink" title="例子: 查询service 模块的信息"></a>例子: 查询service 模块的信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible-doc -s service   </span></span><br><span class="line">less <span class="number">436</span></span><br><span class="line">Copyright (C) <span class="number">1984</span><span class="number">-2009</span> Mark Nudelman</span><br><span class="line"></span><br><span class="line">less comes <span class="keyword">with</span> NO WARRANTY, to the extent permitted by law.</span><br><span class="line">For information about the terms of redistribution,</span><br><span class="line">see the file named README <span class="keyword">in</span> the less distribution.</span><br><span class="line">Homepage: http://www.greenwoodsoftware.com/less</span><br><span class="line">- name: M a n a g e   s e r v i c e s .</span><br><span class="line">  action: service</span><br><span class="line">      arguments              <span class="comment"># Additional arguments provided on the command line</span></span><br><span class="line">      enabled                <span class="comment"># Whether the service should start on boot. *At least one of state and enabled are requi</span></span><br><span class="line">      name=                  <span class="comment"># Name of the service.</span></span><br><span class="line">      pattern                <span class="comment"># If the service does not respond to the status command, name a substring to look for as</span></span><br><span class="line">      runlevel               <span class="comment"># For OpenRC init scripts (ex: Gentoo) only.  The runlevel that this service belongs to.</span></span><br><span class="line">      sleep                  <span class="comment"># If the service is being `restarted' then sleep this many seconds between the stop and </span></span><br><span class="line">      state                  <span class="comment"># `started'/`stopped' are idempotent actions that will not run commands unless necessary</span></span><br><span class="line">(END)</span><br></pre></td></tr></table></figure><h3 id="ansible语法"><a href="#ansible语法" class="headerlink" title="ansible语法"></a>ansible语法</h3><p> ansible <pattern_goes_here> -m <module_name> -a <arguments></arguments></module_name></pattern_goes_here></p><h3 id="command模块"><a href="#command模块" class="headerlink" title="command模块"></a>command模块</h3><p> 默认模块 ,用于在各个被管理节点运行指定的命令(不支持管道和变量)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m command -a "hostname "</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.70</span><span class="number">.51</span> | success | rc=<span class="number">0</span> &gt;&gt;</span><br><span class="line">bds</span><br><span class="line"><span class="number">192.168</span><span class="number">.70</span><span class="number">.50</span> | success | rc=<span class="number">0</span> &gt;&gt;</span><br><span class="line">note1</span><br></pre></td></tr></table></figure><h3 id="shell模块"><a href="#shell模块" class="headerlink" title="shell模块"></a>shell模块</h3><p>command模块功能相同，但比command的模块功能强大(支持管道和变量)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m shell -a "cat /etc/passwd| grep root "                         </span></span><br><span class="line"><span class="number">192.168</span><span class="number">.70</span><span class="number">.51</span> | success | rc=<span class="number">0</span> &gt;&gt;</span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">operator:x:<span class="number">11</span>:<span class="number">0</span>:operator:/root:/sbin/nologin</span><br><span class="line"><span class="number">192.168</span><span class="number">.70</span><span class="number">.50</span> | success | rc=<span class="number">0</span> &gt;&gt;</span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">operator:x:<span class="number">11</span>:<span class="number">0</span>:operator:/root:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="user模块"><a href="#user模块" class="headerlink" title="user模块"></a>user模块</h3><p> 用户模块,用于在各管理节点管理用户所使用<br>创建一个名字为DBA的用户,uid是505 ,家目录是/Data/dba,shell是不让用户登录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible db -m user -a 'name=DBA uid=505 home=/Data/dba shell=/sbin/nologin'            </span></span><br><span class="line"><span class="number">192.168</span><span class="number">.70</span><span class="number">.50</span> | success &gt;&gt; &#123;</span><br><span class="line">    <span class="string">"changed"</span>: true, </span><br><span class="line">    <span class="string">"comment"</span>: <span class="string">""</span>, </span><br><span class="line">    <span class="string">"createhome"</span>: true, </span><br><span class="line">    <span class="string">"group"</span>: <span class="number">505</span>, </span><br><span class="line">    <span class="string">"home"</span>: <span class="string">"/Data/dba"</span>, </span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"DBA"</span>, </span><br><span class="line">    <span class="string">"shell"</span>: <span class="string">"/sbin/nologin"</span>, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"present"</span>, </span><br><span class="line">    <span class="string">"system"</span>: false, </span><br><span class="line">    <span class="string">"uid"</span>: <span class="number">505</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 删除一个用户</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible db -m user  -a <span class="string">'name=budongshu uid=506  state=absent'</span></span><br></pre></td></tr></table></figure><h3 id="group模块"><a href="#group模块" class="headerlink" title="group模块"></a>group模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible db -m group  -a <span class="string">'name=test  gid=1000'</span></span><br></pre></td></tr></table></figure><h3 id="cron模块"><a href="#cron模块" class="headerlink" title="cron模块"></a>cron模块</h3><p>计划定时任务,用于在各管理节点管理计划任务 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m cron -a "name=time minute='*/2' job='/usr/sbin/ntpdate</span></span><br></pre></td></tr></table></figure><h3 id="copy模块"><a href="#copy模块" class="headerlink" title="copy模块"></a>copy模块</h3><p>复制模块,复制文件到各个节点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m copy -a "src=/etc/hosts dest=/tmp/ mode=600"</span></span><br></pre></td></tr></table></figure><h3 id="file模块"><a href="#file模块" class="headerlink" title="file模块"></a>file模块</h3><p> 文件模块 , 修改各个节点指定的文件属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m file -a 'path=/tmp/hosts mode=644 owner=DBA'</span></span><br></pre></td></tr></table></figure><p> 创建目录类似mkdir –p</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m file -a "dest=/tmp/ansible.txt mode=755 owner=root </span></span><br><span class="line">group=root state=directory<span class="string">"</span></span><br></pre></td></tr></table></figure><p> file删除文件或者目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m file -a "dest=/tmp/ansible.txt state=absent"</span></span><br></pre></td></tr></table></figure><p><strong>注：state的其他选项：link(链接)、hard(硬链接)</strong> </p><h3 id="stat-模块"><a href="#stat-模块" class="headerlink" title="stat 模块"></a>stat 模块</h3><p> 获取远程文件状态信息，包含atime、ctime、mtime、md5、uid、gid等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m stat -a "path=/etc/passwd "</span></span><br></pre></td></tr></table></figure><h3 id="ping-模块"><a href="#ping-模块" class="headerlink" title="ping 模块"></a>ping 模块</h3><p> 测试模块 ,测试各个节点是否正常在线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m stat -a <span class="string">'path=/etc/passwd'</span></span><br></pre></td></tr></table></figure><h3 id="template模块"><a href="#template模块" class="headerlink" title="template模块"></a>template模块</h3><p> 根据官方的翻译是：template使用了Jinjia2格式作为文件模板，进行文档内变量的替换的模块。他的每次使用都会被ansible标记为changed状态。</p><h3 id="yum模块"><a href="#yum模块" class="headerlink" title="yum模块"></a>yum模块</h3><p> 用于管理节点安装软件所使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m yum -a 'name=ntp state=present'</span></span><br><span class="line">卸载的软件只需要将 name=ntp state=absent </span><br><span class="line">安装特定版本 name=nginx<span class="number">-1.6</span><span class="number">.2</span> state=present</span><br><span class="line">指定某个源仓库安装软件包name=htop enablerepo=epel state=present</span><br><span class="line">更新软件到最新版 name=nginx state=latest</span><br><span class="line">``` </span><br><span class="line"><span class="comment">### service模块</span></span><br><span class="line"> 管理各个节点的服务</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">[root@note1 ~]<span class="comment"># ansible all -m service -a "name=ntpd enabled=true state=started"     state 支持其它选项 started stopped restarted </span></span><br><span class="line"> ``` </span><br><span class="line"></span><br><span class="line"><span class="comment">### script模块</span></span><br><span class="line"> 自动复制脚本到远程节点,并运行</span><br><span class="line"></span><br><span class="line">* 测试脚本</span><br><span class="line">```python</span><br><span class="line">[root@note1 ~]<span class="comment"># cat ansible_test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash </span></span><br><span class="line">echo <span class="string">"hello world "</span> &gt;&gt; /tmp/ansible_sh.log</span><br></pre></td></tr></table></figure><ul><li>运行脚本<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m script -a 'ansible_test.sh'</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="setup模块"><a href="#setup模块" class="headerlink" title="setup模块"></a>setup模块</h3><p> 收集ansible的facts信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@note1 ~]<span class="comment"># ansible all -m setup  #收集主机的facts信息,可以通过变量引用这些信息</span></span><br></pre></td></tr></table></figure><h3 id="ansible-主机清单通配模式介绍"><a href="#ansible-主机清单通配模式介绍" class="headerlink" title="ansible 主机清单通配模式介绍"></a>ansible 主机清单通配模式介绍</h3><p> 可以看到上面执行命令的时候有个ansible -m all ,以上我用的all或指定主机,这里也可以进行通配 ,在/etc/ansible/hosts 进行设置如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[web]</span><br><span class="line"><span class="number">10.10</span><span class="number">.10</span><span class="number">.2</span></span><br><span class="line"><span class="number">10.10</span><span class="number">.10</span><span class="number">.3</span></span><br><span class="line">[db]</span><br><span class="line"><span class="number">10.10</span><span class="number">.10</span><span class="number">.4</span> </span><br><span class="line">[allhost:children]     <span class="comment">#可以把一个组当做另一个组的子成员</span></span><br><span class="line">web</span><br><span class="line">db</span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子:"></a>例子:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible web -m shell -a ‘uptime’     <span class="comment">#代表web组中的所有主机</span></span><br><span class="line">ansible allhost -m shell -a ‘uptime’ <span class="comment">#代表allhost组中的所有子成员组</span></span><br></pre></td></tr></table></figure><h3 id="其它匹配方式"><a href="#其它匹配方式" class="headerlink" title="其它匹配方式"></a>其它匹配方式</h3><p>1.1 通配所有主机<br>all , <em><br>ansible all  -m shell -a ‘uptime’<br>ansible </em>   -m shell –a ‘uptime’</p><p>1.2 通配具有规则特征的主机或者主机名<br>one.bds.com<br><em>.bds.com<br>192.168.10.2<br>192.168.10.</em> </p><p>1.3 通配俩组的所有主机,组名之间通过冒号分开,表示or的意思<br>web:db</p><p>1.4 非模式匹配: 表示在 web组不在db组的主机<br>web:!db</p><p>1.5 交集匹配: 表示同时都在 web 和db组的主机<br>web:&amp;db</p><p>1.6 匹配一个组的特定编号的主机 从零开始计算<br>web[0]</p><p>1.7 匹配 web组的第 1 个到第 25 个主机<br>web [0-25]      </p><p>1.8  组合匹配<br>在web组或者在db组中,必须还存在test1组中,但不在test2组中<br>web:db:&amp;test1:!test2  </p><p>1.9 大部分人都在patterns应用正则表达式,但你可以.只需要以 ‘~’ 开头即可:<br>~(web|db).*.example.com</p><p>2.0 同时让我们提前了解一些技能,除了如上,你也可以通过 —limit 标记来添加排除条件,/usr/bin/ansible or /usr/bin/ansible-playbook都支持:<br>ansible-playbook site.yml —limit datacenter2</p><p>2.1 如果你想从文件读取hosts,文件名以@为前缀即可.从Ansible 1.2开始支持该功能:<br>ansible-playbook site.yml —limit @retry_hosts.txt</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;运维自动化工具介绍&quot;&gt;&lt;a href=&quot;#运维自动化工具介绍&quot; class=&quot;headerlink&quot; title=&quot;运维自动化工具介绍&quot;&gt;&lt;/a&gt;运维自动化工具介绍&lt;/h2&gt;&lt;p&gt; 在日常服务器维护中，从系统安装到程序部署再到发布应用，在大规模的生产环境中，如果需要手动的每台服务器进行安装配置将会给运维人员带来许多繁琐而又重复的工作。这就促使了在每个运维层次中出现了不同的自动化运维工具。&lt;br&gt;常见的自动化运维工具分类有以下几类：&lt;/p&gt;
    
    </summary>
    
    
      <category term="ansible" scheme="http://budongshu.gitee.io/categories/ansible/"/>
    
    
      <category term="ansible" scheme="http://budongshu.gitee.io/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>filebeat Output</title>
    <link href="http://budongshu.gitee.io/2017/06/11/filebeat_output/"/>
    <id>http://budongshu.gitee.io/2017/06/11/filebeat_output/</id>
    <published>2017-06-10T21:22:31.000Z</published>
    <updated>2019-09-27T04:06:57.965Z</updated>
    
    <content type="html"><![CDATA[<p>Filbeat OutPut </p><a id="more"></a><h3 id="Filebeat-Elasticsearch-OutPut"><a href="#Filebeat-Elasticsearch-OutPut" class="headerlink" title="Filebeat Elasticsearch OutPut"></a>Filebeat Elasticsearch OutPut</h3><blockquote><p>configure </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [&quot;http://localhost:9200&quot;]</span><br><span class="line">  template.enabled: true</span><br><span class="line">  template.path: &quot;filebeat.template.json&quot;</span><br><span class="line">  template.overwrite: false</span><br><span class="line">  index: &quot;filebeat&quot;</span><br><span class="line">  ssl.certificate_authorities: [&quot;/etc/pki/root/ca.pem&quot;]</span><br><span class="line">  ssl.certificate: &quot;/etc/pki/client/cert.pem&quot;</span><br><span class="line">  ssl.key: &quot;/etc/pki/client/cert.key&quot;</span><br></pre></td></tr></table></figure><blockquote><p>定义ip port add portocalhttps </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [&quot;localhost&quot;]</span><br><span class="line">  protocol: &quot;https&quot;</span><br><span class="line">  username: &quot;admin&quot;</span><br><span class="line">  password: &quot;s3cr3t&quot;</span><br></pre></td></tr></table></figure><ul><li>compression_level <ul><li>gzip 压缩级别 range（1-9） </li></ul></li><li>work <ul><li>发送事件到es的工作数量 </li></ul></li><li><p>index </p><ul><li>The index name to write events to. </li><li>The default is “filebeat-%{+yyyy.MM.dd}” (for example,”filebeat-2015.04.26”).</li></ul></li><li><p>indices</p><blockquote><p>支持条件，基于格式字符串的字段访问和名称映射的索引选择器规则的数组 </p></blockquote><ul><li>index <ul><li>要使用的索引格式字符串。 如果使用的字段丢失，则规则失败。 </li></ul></li><li>mapping <ul><li>映射字典为新名字</li></ul></li><li>default <ul><li>默认字符串数值</li></ul></li><li><p>when     </p><ul><li>选择匹配条件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [&quot;http://localhost:9200&quot;]</span><br><span class="line">  index: &quot;logs-%&#123;+yyyy.MM.dd&#125;&quot;</span><br><span class="line">  indices:</span><br><span class="line">    - index: &quot;critical-%&#123;+yyyy.MM.dd&#125;&quot;</span><br><span class="line">      when.contains:</span><br><span class="line">        message: &quot;CRITICAL&quot;</span><br><span class="line">    - index: &quot;error-%&#123;+yyyy.MM.dd&#125;&quot;</span><br><span class="line">      when.contains:</span><br><span class="line">        message: &quot;ERR&quot;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>pipeline </p><ul><li><p>格式字符串指定获取节点写入事件pipeline的id值</p><pre><code>  output.elasticsearch:      hosts: [&quot;http://localhost:9200&quot;]      pipeline: my_pipeline_id</code></pre></li></ul></li></ul><ul><li><p>pipelines </p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">filebeat.prospectors:</span><br><span class="line">- paths: [&quot;/var/log/app/normal/*.log&quot;]</span><br><span class="line"> fields:</span><br><span class="line">   type: &quot;normal&quot;</span><br><span class="line">- paths: [&quot;/var/log/app/critical/*.log&quot;]</span><br><span class="line"> fields:</span><br><span class="line">   type: &quot;critical&quot;</span><br><span class="line"></span><br><span class="line">output.elasticsearch:</span><br><span class="line"> hosts: [&quot;http://localhost:9200&quot;]</span><br><span class="line"> index: &quot;filebeat-%&#123;+yyyy.MM.dd&#125;&quot;</span><br><span class="line"> pipelines:</span><br><span class="line">  - pipeline: critical_pipeline</span><br><span class="line">   when.equals:</span><br><span class="line">         type: &quot;critical&quot;</span><br><span class="line">    - pipeline: normal_pipeline</span><br><span class="line">        when.equals:</span><br><span class="line">         type: &quot;normal&quot;</span><br></pre></td></tr></table></figure></li><li><p>template</p></li></ul><pre><code>    output.elasticsearch:        hosts: [&quot;localhost:9200&quot;]        template.name: &quot;filebeat&quot;        template.path: &quot;filebeat.template.json&quot;        template.overwrite: false</code></pre><ul><li>templates.versions </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [&quot;localhost:9200&quot;]</span><br><span class="line">  template.path: &quot;filebeat.template.json&quot;</span><br><span class="line">  template.overwrite: false</span><br><span class="line">  template.versions.2x.path: &quot;filebeat.template-es2x.json</span><br></pre></td></tr></table></figure><ul><li>max_retries <ul><li>当发送失败的时候，尝试多少次发送事件 </li></ul></li><li>bulk_max_size <ul><li>单个Elasticsearch批量API索引请求中批量的最大事件数 默认值为50</li></ul></li><li><p>timeout </p><ul><li>The http request timeout in seconds for the Elasticsearch request </li><li>The default is 90 </li></ul></li><li><p>flush_interval </p><ul><li>在两个批量API索引请求之间等待新事件的秒数</li></ul></li><li>ssl <ul><li><a href="https://www.elastic.co/guide/en/beats/filebeat/current/configuration-output-ssl.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/beats/filebeat/current/configuration-output-ssl.html</a></li></ul></li></ul><h3 id="Filebeat-Logstash-OutPut"><a href="#Filebeat-Logstash-OutPut" class="headerlink" title="Filebeat Logstash OutPut"></a>Filebeat Logstash OutPut</h3><blockquote><p>需要logstash服务端安装beat插件 使用lumberjack协议发送事件到logstash </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">output.logstash:</span><br><span class="line">  hosts: [&quot;localhost:5044&quot;]</span><br></pre></td></tr></table></figure><ul><li><p>Metadata Fields </p><ul><li><p>@meatedata </p><ul><li>Filebeat使用@metadata字段将元数据发送到Logstash  </li><li>@metadata字段的内容只存在于Logstash中，不属于从Logstash发送的任何事件的一部分</li><li><p>有关@metadata字段的更多信息，请参阅Logstash文档<a href="https://www.elastic.co/guide/en/logstash/5.4/event-dependent-configuration.html#metadata" target="_blank" rel="noopener">logstash doucument</a></p><pre><code>  {      ...          &quot;@metadata&quot;: {            &quot;beat&quot;: &quot;filebeat&quot;,           &quot;type&quot;: &quot;&lt;event type&gt;&quot;       }      }</code></pre></li></ul></li></ul></li></ul><blockquote><p>logstash to elasticsearch </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5044</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [&quot;http://localhost:9200&quot;]</span><br><span class="line">    index =&gt; &quot;%&#123;[@metadata][beat]&#125;-%&#123;+YYYY.MM.dd&#125;&quot; </span><br><span class="line">    document_type =&gt; &quot;%&#123;[@metadata][type]&#125;&quot; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>enabled </li><li>hosts </li><li>compression_level </li><li>worker </li><li><p>loadbalance </p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">output.logstash:</span><br><span class="line">     hosts: [&quot;localhost:5044&quot;, &quot;localhost:5045&quot;]</span><br><span class="line">     loadbalance: true</span><br><span class="line">     index: filebeat</span><br></pre></td></tr></table></figure></li><li><p>pipelining </p><ul><li>异步处理事件，默认关闭    </li></ul></li><li>index</li><li>ssl</li><li>timeout </li><li>max_retries </li><li>bulk_max_size <ul><li>The maximum number of events to bulk in a single Logstash request </li><li>The default is 2048.</li></ul></li></ul><h3 id="kafka-OutPut"><a href="#kafka-OutPut" class="headerlink" title="kafka OutPut"></a>kafka OutPut</h3><blockquote><p>The Kafka output sends the events to Apache Kafka.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">output.kafka:</span><br><span class="line">  # initial brokers for reading cluster metadata</span><br><span class="line">  hosts: [&quot;kafka1:9092&quot;, &quot;kafka2:9092&quot;, &quot;kafka3:9092&quot;]</span><br><span class="line"></span><br><span class="line">  # message topic selection + partitioning</span><br><span class="line">  topic: &apos;%&#123;[type]&#125;&apos;</span><br><span class="line">  partition.round_robin:</span><br><span class="line">    reachable_only: false</span><br><span class="line"></span><br><span class="line">  required_acks: 1</span><br><span class="line">  compression: gzip</span><br><span class="line">  max_message_bytes: 1000000</span><br></pre></td></tr></table></figure><ul><li>enabled </li><li>hosts</li><li>version</li><li>username </li><li>password </li><li><p>topic </p></li><li><p>topics </p><ul><li>topic </li><li>mapping </li><li>default </li><li>when </li></ul></li><li><p>partition </p><ul><li>random.group_events </li><li>round_robin.group_events </li><li>hash.hash</li><li>hash.random</li></ul></li><li><p>client_id</p></li><li>worker</li><li><p>codec </p></li><li><p>metadata </p><ul><li>refresh_frequency </li><li>retry.max </li><li>retry.backoff </li></ul></li><li><p>max_retries</p></li><li>bulk_max_size</li><li>timeout</li><li>broker_timeout </li><li>channel_buffer_size </li><li>keep_alive</li><li>compression </li><li>max_message_bytes </li><li>required_acks</li><li>flush_interval     </li><li>ssl</li></ul><h3 id="Redis-OutPut"><a href="#Redis-OutPut" class="headerlink" title="Redis OutPut"></a>Redis OutPut</h3><blockquote><p>This output works with Redis 3.2.4.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">output.redis:</span><br><span class="line">  hosts: [&quot;localhost&quot;]</span><br><span class="line">  password: &quot;my_password&quot;</span><br><span class="line">  key: &quot;filebeat&quot;</span><br><span class="line">  db: 0</span><br><span class="line">  timeout: 5</span><br></pre></td></tr></table></figure><ul><li>enabled</li><li>hosts </li><li>port </li><li>index</li><li>key</li></ul><pre><code>    output.redis:      hosts: [&quot;localhost&quot;]      key: &quot;%{[fields.list]:fallback}&quot;    </code></pre><ul><li><p>keys </p><ul><li>key </li><li>mapping </li><li>default </li><li><p>when </p><pre><code>  output.redis:      hosts: [&quot;localhost&quot;]      key: &quot;default_list&quot;      keys:       - key: &quot;info_list&quot;   # send to info_list if `message` field contains INFO          when.contains:          message: &quot;INFO&quot;     - key: &quot;debug_list&quot;  # send to debug_list if `message` field contains DEBUG         when.contains:         message: &quot;DEBUG&quot;     - key: &quot;%{[type]}&quot;          mapping:          &quot;http&quot;: &quot;frontend_list&quot;          &quot;nginx&quot;: &quot;frontend_list&quot;          &quot;mysql&quot;: &quot;backend_list&quot;</code></pre></li></ul></li><li><p>passport </p></li><li>db </li><li><p>datatype </p><blockquote><p>用于发布事件的Redis数据类型。如果数据类型为列表，则使用Redis RPUSH命令，并将所有事件添加到列表中，并在键下定义键。 如果使用数据类型通道，则使用Redis PUBLISH命令，这意味着所有事件都被推送到Redis的pub / sub机制。 通道的名称是键下定义的。 默认值为列表。</p></blockquote></li><li><p>codec </p></li><li>worker </li><li>loadbalance </li><li>timeout</li><li>max_retries</li><li>bulk_max_size </li><li>ssl </li><li>proxy_url </li><li>proxy_use_local_resolver </li></ul><h3 id="File-OutPut"><a href="#File-OutPut" class="headerlink" title="File OutPut"></a>File OutPut</h3><blockquote><p>文件输出将事务转储到每个事务处于JSON格式的文件中。 目前，该输出用于测试，但可以作为Logstash的输入</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">output.file:</span><br><span class="line">  path: &quot;/tmp/filebeat&quot;</span><br><span class="line">  filename: filebeat</span><br><span class="line">  #rotate_every_kb: 10000</span><br><span class="line">  #number_of_files: 7</span><br></pre></td></tr></table></figure><ul><li>enables </li><li>path <ul><li>定义保存文件的路径</li></ul></li><li>filename <ul><li>定义保存文件的名字</li></ul></li><li>rotate_every_kb <ul><li>定义每个文件达到多少kb就开始切割</li></ul></li><li>number_if_files<ul><li>定义保存几份文件 </li></ul></li><li>codec</li></ul><h3 id="Console-OutPut"><a href="#Console-OutPut" class="headerlink" title="Console OutPut"></a>Console OutPut</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">output.console:</span><br><span class="line">  pretty: true</span><br></pre></td></tr></table></figure><ul><li>pretty </li><li>codec</li><li>enabled </li><li>bulk_max_size</li></ul><h3 id="Codec-Output"><a href="#Codec-Output" class="headerlink" title="Codec Output"></a>Codec Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">output.console:</span><br><span class="line">  codec.json:</span><br><span class="line">    pretty: true</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">output.console:</span><br><span class="line">  codec.format:</span><br><span class="line">    string: &apos;%&#123;[@timestamp]&#125; %&#123;[message]&#125;&apos;</span><br></pre></td></tr></table></figure><h3 id="Loggin-OutPut"><a href="#Loggin-OutPut" class="headerlink" title="Loggin OutPut"></a>Loggin OutPut</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">logging.level: warning</span><br><span class="line">logging.to_files: true</span><br><span class="line">logging.to_syslog: false</span><br><span class="line">logging.files:</span><br><span class="line">  path: /var/log/mybeat</span><br><span class="line">  name: mybeat.log</span><br><span class="line">  rotateeverybytes: 10MB </span><br><span class="line">  keepfiles: 7</span><br></pre></td></tr></table></figure><h3 id="Debugging"><a href="#Debugging" class="headerlink" title="Debugging"></a>Debugging</h3><p>By default, Filebeat sends all its output to syslog. When you run Filebeat in the foreground, you can use the -e command line flag to redirect the output to standard error instead. For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebeat -e</span><br></pre></td></tr></table></figure><p>The default configuration file is filebeat.yml (the location of the file varies by platform). You can use a different configuration file by specifying<br>the -c flag. For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebeat -e -c myfilebeatconfig.yml</span><br></pre></td></tr></table></figure><p>You can increase the verbosity of debug messages by enabling one or more debug selectors. For example, to view the published transactions, you can start Filebeat with the publish selector like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebeat -e -d &quot;publish&quot;</span><br></pre></td></tr></table></figure><p>If you want all the debugging output (fair warning, it’s quite a lot), you can use *, like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebeat -e -d &quot;*&quot;</span><br></pre></td></tr></table></figure><h3 id="support"><a href="#support" class="headerlink" title="support"></a>support</h3><p><a href="https://www.elastic.co/support/matrix#show_compatibility" target="_blank" rel="noopener">https://www.elastic.co/support/matrix#show_compatibility</a>         </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Filbeat OutPut &lt;/p&gt;
    
    </summary>
    
    
      <category term="elk" scheme="http://budongshu.gitee.io/categories/elk/"/>
    
    
      <category term="filebeat" scheme="http://budongshu.gitee.io/tags/filebeat/"/>
    
  </entry>
  
  <entry>
    <title>filebeat config</title>
    <link href="http://budongshu.gitee.io/2017/06/11/filebeat_config/"/>
    <id>http://budongshu.gitee.io/2017/06/11/filebeat_config/</id>
    <published>2017-06-10T19:22:31.000Z</published>
    <updated>2019-09-27T04:06:57.964Z</updated>
    
    <content type="html"><![CDATA[<p>Filbeat config</p><a id="more"></a><h3 id="Filebeat-Prospector"><a href="#Filebeat-Prospector" class="headerlink" title="Filebeat Prospector"></a>Filebeat Prospector</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">filebeat.prospectors:</span><br><span class="line">- input_type: log</span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/apache/httpd-*.log</span><br><span class="line">  document_type: apache</span><br><span class="line"></span><br><span class="line">- input_type: log</span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/messages</span><br><span class="line">    - /var/log/*.log</span><br></pre></td></tr></table></figure><h3 id="Filebeat-Options"><a href="#Filebeat-Options" class="headerlink" title="Filebeat Options"></a>Filebeat Options</h3><h4 id="input-type-log-stdin"><a href="#input-type-log-stdin" class="headerlink" title="input_type: log|stdin"></a>input_type: log|stdin</h4><ul><li>指定输入类型</li></ul><h4 id="paths"><a href="#paths" class="headerlink" title="paths"></a>paths</h4><ul><li>支持基本的正则，所有golang glob都支持,支持/var/log/*/*.log </li></ul><h4 id="encoding"><a href="#encoding" class="headerlink" title="encoding"></a>encoding</h4><ul><li>plain, latin1, utf-8, utf-16be-bom, utf-16be, utf-16le, big5, gb18030, gbk, hz-gb-2312,</li><li>euc-kr, euc-jp, iso-2022-jp, shift-jis, and so on </li></ul><h4 id="exclude-lines"><a href="#exclude-lines" class="headerlink" title="exclude_lines"></a>exclude_lines</h4><ul><li>支持正则 排除匹配的行，如果有多行，合并成一个单一行来进行过滤</li></ul><h4 id="include-lines"><a href="#include-lines" class="headerlink" title="include_lines"></a>include_lines</h4><ul><li>支持正则 include_lines执行完毕之后会执行exclude_lines。</li></ul><h4 id="exclude-files"><a href="#exclude-files" class="headerlink" title="exclude_files"></a>exclude_files</h4><ul><li>支持正则 排除匹配的文件 </li><li>exclude_files: [‘.gz$’]</li></ul><h4 id="tags"><a href="#tags" class="headerlink" title="tags"></a>tags</h4><ul><li><p>列表中添加标签，用过过滤</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">filebeat.prospectors:</span><br><span class="line">- paths: [&quot;/var/log/app/*.json&quot;]</span><br><span class="line">  tags: [&quot;json&quot;]</span><br></pre></td></tr></table></figure></li></ul><h4 id="fields"><a href="#fields" class="headerlink" title="fields"></a>fields</h4><ul><li>可选字段，选择额外的字段进行输出 </li><li>可以是标量值，元组，字典等嵌套类型 </li><li><p>默认在sub-dictionary 位置  </p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">filebeat.prospectors:</span><br><span class="line">- paths: [&quot;/var/log/app/*.log&quot;]</span><br><span class="line">     fields:</span><br><span class="line">        app_id: query_engine_12</span><br></pre></td></tr></table></figure></li></ul><h4 id="fields-under-root"><a href="#fields-under-root" class="headerlink" title="fields_under_root"></a>fields_under_root</h4><ul><li>如果值为ture，那么fields存储在输出文档的顶级位置 </li><li><p>如果与filebeat中字段冲突，自定义字段会覆盖其他字段</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fields_under_root: true</span><br><span class="line">fields:</span><br><span class="line">   instance_id: i-10a64379</span><br><span class="line">   region: us-east-1</span><br></pre></td></tr></table></figure></li></ul><h4 id="ignore-older"><a href="#ignore-older" class="headerlink" title="ignore_older"></a>ignore_older</h4><ul><li>可以指定Filebeat忽略指定时间段以外修改的日志内容 </li><li>文件被忽略之前，确保文件不在被读取，必须设置ignore older时间范围大于close_inactive </li><li>如果一个文件正在读取时候被设置忽略，它会取得到close_inactive后关闭文件，然后文件被忽略</li></ul><h4 id="close"><a href="#close" class="headerlink" title="close_*"></a>close_*</h4><blockquote><p> close_ *配置选项用于在特定标准或时间之后关闭harvester。 关闭harvester意味着关闭文件处理程序。 如果在harvester关闭后文件被更新，则在scan_frequency过后，文件将被重新拾取。 但是，如果在harvester关闭时移动或删除文件，Filebeat将无法再次接收文件，并且harvester未读取的任何数据都将丢失。</p></blockquote><h4 id="close-inactive"><a href="#close-inactive" class="headerlink" title="close_inactive"></a>close_inactive</h4><ul><li>启动选项时，如果在制定时间没有被读取，将关闭文件句柄 </li><li>读取的最后一条日志定义为下一次读取的起始点，而不是基于文件的修改时间 </li><li>如果关闭的文件发生变化，一个新的harverster将在scan_frequency运行后被启动 </li><li>建议至少设置一个大于读取日志频率的值，配置多个prospector来实现针对不同更新速度的日志文件</li><li>使用内部时间戳机制，来反映记录日志的读取，每次读取到最后一行日志时开始倒计时</li><li>使用2h 5m 来表示 </li></ul><h4 id="close-rename"><a href="#close-rename" class="headerlink" title="close_rename"></a>close_rename</h4><ul><li>当选项启动，如果文件被重命名和移动，filebeat关闭文件的处理读取</li></ul><h4 id="close-removed"><a href="#close-removed" class="headerlink" title="close_removed"></a>close_removed</h4><ul><li>当选项启动，文件被删除时，filebeat关闭文件的处理读取 </li><li>这个选项启动后，必须启动clean_removed  </li></ul><h4 id="close-eof"><a href="#close-eof" class="headerlink" title="close_eof"></a>close_eof</h4><ul><li>适合只写一次日志的文件，然后filebeat关闭文件的处理读取 </li></ul><h4 id="close-timeout"><a href="#close-timeout" class="headerlink" title="close_timeout"></a>close_timeout</h4><ul><li>当选项启动时，filebeat会给每个harvester设置预定义时间，不管这个文件是否被读取，达到设定时间后，将被关闭 </li><li>close_timeout 不能等于ignore_older,会导致文件更新时，不会被读取</li><li>如果output一直没有输出日志事件，这个timeout是不会被启动的，至少要要有一个事件发送，然后haverter将被关闭</li><li>设置0 表示不启动 </li></ul><h4 id="clean-inactived"><a href="#clean-inactived" class="headerlink" title="clean_inactived"></a>clean_inactived</h4><ul><li>从注册表文件中删除先前收获的文件的状态</li><li>设置必须大于ignore_older+scan_frequency，以确保在文件仍在收集时没有删除任何状态</li><li>配置选项有助于减小注册表文件的大小，特别是如果每天都生成大量的新文件</li><li>此配置选项也可用于防止在Linux上重用inode的Filebeat问题</li></ul><h4 id="clean-removed"><a href="#clean-removed" class="headerlink" title="clean_removed"></a>clean_removed</h4><ul><li>启动选项后，如果文件在磁盘上找不到，将从注册表中清除filebeat</li><li>如果关闭close removed 必须关闭clean removed </li></ul><h4 id="scan-frequency"><a href="#scan-frequency" class="headerlink" title="scan_frequency"></a>scan_frequency</h4><ul><li>prospector检查指定用于收获的路径中的新文件的频率,默认10s    </li></ul><h4 id="document-type"><a href="#document-type" class="headerlink" title="document_type"></a>document_type</h4><ul><li>类型事件，被用于设置输出文档的type字段，默认是log</li></ul><h4 id="harvester-buffer-size"><a href="#harvester-buffer-size" class="headerlink" title="harvester_buffer_size"></a>harvester_buffer_size</h4><ul><li>每次harvester读取文件缓冲字节数，默认是16384 </li></ul><h4 id="max-bytes"><a href="#max-bytes" class="headerlink" title="max_bytes"></a>max_bytes</h4><ul><li>对于多行日志信息，很有用，最大字节数 </li></ul><h4 id="json"><a href="#json" class="headerlink" title="json"></a>json</h4><blockquote><p>这些选项使Filebeat解码日志结构化为JSON消息<br>  逐行进行解码json </p></blockquote><ul><li>keys_under_root<ul><li>设置key为输出文档的顶级目录 </li></ul></li><li>overwrite_keys <ul><li>覆盖其他字段</li></ul></li><li>add_error_key<ul><li>定一个json_error </li></ul></li><li>message_key <ul><li>指定json 关键建作为过滤和多行设置，与之关联的值必须是string </li></ul></li></ul><h4 id="multiline"><a href="#multiline" class="headerlink" title="multiline"></a>multiline</h4><p>控制filebeat如何处理跨多行日志的选项，多行日志通常发生在java堆栈中 </p><p><code>multiline.pattern: &#39;^\[&#39;</code><br><code>multiline.negate: true</code><br><code>multiline.match: after</code></p><p>上面匹配是将多行日志所有不是以[符号开头的行合并成一行它可以将下面的多行日志进行合并成一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[beat-logstash-some-name-832-2015.11.28] IndexNotFoundException[no such index]</span><br><span class="line">    at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:566)</span><br><span class="line">    at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:133)</span><br><span class="line">    at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:77)</span><br><span class="line">    at org.elasticsearch.action.admin.indices.delete.TransportDeleteIndexAction.checkBlock(TransportDeleteIndexAction.java:75)</span><br></pre></td></tr></table></figure><h4 id="multiline-pattern"><a href="#multiline-pattern" class="headerlink" title="multiline.pattern"></a>multiline.pattern</h4><ul><li>指定匹配的正则表达式，filebeat支持的regexp模式与logstash支持的模式有所不同<br>  <a href="https://www.elastic.co/guide/en/beats/filebeat/current/regexp-support.html" target="_blank" rel="noopener">pattern regexp</a></li></ul><h4 id="multiline-negate"><a href="#multiline-negate" class="headerlink" title="multiline.negate"></a>multiline.negate</h4><ul><li>定义上面的模式匹配条件的动作是 否定的，默认是false </li><li>假如模式匹配条件’^b’，默认是false模式，表示讲按照模式匹配进行匹配 将不是以b开头的日志行进行合并</li><li>如果是true，表示将不以b开头的日志行进行合并</li></ul><h4 id="multiline-match"><a href="#multiline-match" class="headerlink" title="multiline.match"></a>multiline.match</h4><ul><li>指定Filebeat如何将匹配行组合成事件,在之前或者之后，取决于上面所指定的negate </li></ul><h4 id="multiline-max-lines"><a href="#multiline-max-lines" class="headerlink" title="multiline.max_lines"></a>multiline.max_lines</h4><ul><li>可以组合成一个事件的最大行数，超过将丢弃，默认500 </li></ul><h4 id="multiline-timeout"><a href="#multiline-timeout" class="headerlink" title="multiline.timeout"></a>multiline.timeout</h4><ul><li>定义超时时间，如果开始一个新的事件在超时时间内没有发现匹配，也将发送日志，默认是5s</li></ul><h4 id="tail-files"><a href="#tail-files" class="headerlink" title="tail_files"></a>tail_files</h4><ul><li>如果此选项设置为true，Filebeat将在每个文件的末尾开始读取新文件，而不是开头 </li><li>此选项适用于Filebeat尚未处理的文件</li></ul><h4 id="symlinks"><a href="#symlinks" class="headerlink" title="symlinks"></a>symlinks</h4><ul><li>符号链接选项允许Filebeat除常规文件外,可以收集符号链接。收集符号链接时，即使报告了符号链接的路径，Filebeat也会打开并读取原始文件。</li></ul><h4 id="backoff"><a href="#backoff" class="headerlink" title="backoff"></a>backoff</h4><ul><li>backoff选项指定Filebeat如何积极地抓取新文件进行更新。默认1s </li><li>backoff选项定义Filebeat在达到EOF之后再次检查文件之间等待的时间。</li></ul><h4 id="max-backoff"><a href="#max-backoff" class="headerlink" title="max_backoff"></a>max_backoff</h4><ul><li>在达到EOF之后再次检查文件之前Filebeat等待的最长时间</li></ul><h4 id="backoff-factor"><a href="#backoff-factor" class="headerlink" title="backoff_factor"></a>backoff_factor</h4><ul><li>指定backoff尝试等待时间几次，默认是2</li></ul><h4 id="harvester-limit"><a href="#harvester-limit" class="headerlink" title="harvester_limit"></a>harvester_limit</h4><ul><li>harvester_limit选项限制一个prospector并行启动的harvester数量，直接影响文件打开数 </li></ul><h4 id="enabled"><a href="#enabled" class="headerlink" title="enabled"></a>enabled</h4><ul><li>控制prospector的启动和关闭</li></ul><h3 id="filebeat-global"><a href="#filebeat-global" class="headerlink" title="filebeat global"></a>filebeat global</h3><h4 id="spool-size"><a href="#spool-size" class="headerlink" title="spool_size"></a>spool_size</h4><ul><li><p>事件发送的阀值，超过阀值，强制刷新网络连接</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebeat.spool_size: 2048</span><br></pre></td></tr></table></figure></li></ul><h4 id="publish-async"><a href="#publish-async" class="headerlink" title="publish_async"></a>publish_async</h4><ul><li>异步发送事件，实验性功能</li></ul><h4 id="idle-timeout"><a href="#idle-timeout" class="headerlink" title="idle_timeout"></a>idle_timeout</h4><ul><li><p>事件发送的超时时间，即使没有超过阀值，也会强制刷新网络连接</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebeat.idle_timeout: 5s</span><br></pre></td></tr></table></figure></li></ul><h4 id="registry-file"><a href="#registry-file" class="headerlink" title="registry_file"></a>registry_file</h4><ul><li>注册表文件的名称，如果使用相对路径，则被认为是相对于数据路径 </li><li><p>有关详细信息，请参阅目录布局部分 默认值为${path.data}/registry</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebeat.registry_file: registry</span><br></pre></td></tr></table></figure></li></ul><h4 id="config-dir"><a href="#config-dir" class="headerlink" title="config_dir"></a>config_dir</h4><ul><li>包含额外的prospector配置文件的目录的完整路径 </li><li>每个配置文件必须以.yml结尾 </li><li>每个配置文件也必须指定完整的Filebeat配置层次结构，即使只处理文件的prospector部分。</li><li>所有全局选项（如spool_size）将被忽略 </li><li><p>必须是绝对路径</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebeat.config_dir: path/to/configs</span><br></pre></td></tr></table></figure></li></ul><h4 id="shutdown-timeout"><a href="#shutdown-timeout" class="headerlink" title="shutdown_timeout"></a>shutdown_timeout</h4><ul><li>Filebeat等待发布者在Filebeat关闭之前完成发送事件的时间。 </li></ul><h3 id="Filebeat-General"><a href="#Filebeat-General" class="headerlink" title="Filebeat General"></a>Filebeat General</h3><h4 id="name"><a href="#name" class="headerlink" title="name"></a>name</h4><ul><li><p>设置名字，如果配置为空，则用该服务器的主机名</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name: &quot;my-shipper&quot;</span><br></pre></td></tr></table></figure></li></ul><h4 id="queue-size"><a href="#queue-size" class="headerlink" title="queue_size"></a>queue_size</h4><ul><li>单个事件内部队列的长度 默认1000</li></ul><h4 id="bulk-queue-size"><a href="#bulk-queue-size" class="headerlink" title="bulk_queue_size"></a>bulk_queue_size</h4><ul><li>批量事件内部队列的长度 </li></ul><h4 id="max-procs"><a href="#max-procs" class="headerlink" title="max_procs"></a>max_procs</h4><ul><li>设置最大使用cpu数量</li></ul><h4 id="geoip-paths"><a href="#geoip-paths" class="headerlink" title="geoip.paths"></a>geoip.paths</h4><ul><li>此配置选项目前仅由Packetbeat使用，它将在6.0版中删除</li><li><p>要使GeoIP支持功能正常，GeoLite City数据库是必需的。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">geoip:</span><br><span class="line">  paths:</span><br><span class="line">    - &quot;/usr/share/GeoIP/GeoLiteCity.dat&quot;</span><br><span class="line">    - &quot;/usr/local/var/GeoIP/GeoLiteCity.dat&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Filebeat-reload"><a href="#Filebeat-reload" class="headerlink" title="Filebeat reload"></a>Filebeat reload</h3><blockquote><p>属于测试功能 </p></blockquote><h4 id="path"><a href="#path" class="headerlink" title="path"></a>path</h4><ul><li>定义要检查的配置路径        </li></ul><h4 id="reload-enabled"><a href="#reload-enabled" class="headerlink" title="reload.enabled"></a>reload.enabled</h4><ul><li>设置为true时，启用动态配置重新加载。    </li></ul><h4 id="reload-period"><a href="#reload-period" class="headerlink" title="reload.period"></a>reload.period</h4><ul><li>定义要检查的间隔时间     </li></ul><pre><code>filebeat.config.prospectors:  path: configs/*.yml  reload.enabled: true  reload.period: 10s</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Filbeat config&lt;/p&gt;
    
    </summary>
    
    
      <category term="elk" scheme="http://budongshu.gitee.io/categories/elk/"/>
    
    
      <category term="filebeat" scheme="http://budongshu.gitee.io/tags/filebeat/"/>
    
  </entry>
  
  <entry>
    <title>filebeat_work</title>
    <link href="http://budongshu.gitee.io/2017/06/09/filebeat_work/"/>
    <id>http://budongshu.gitee.io/2017/06/09/filebeat_work/</id>
    <published>2017-06-08T21:26:31.000Z</published>
    <updated>2019-09-27T04:06:57.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Filebeat-work"><a href="#Filebeat-work" class="headerlink" title="Filebeat work"></a>Filebeat work</h2><p><em>这个话题，你学习了解Filebeat关键构件<br>他们之间是怎么样工作， 理解这些概念，<br>在配置filebeat的时候，帮助你做出正确的决定。</em></p><p><strong>filebeat有俩个主要的组件： prospectors or harversters</strong><br><a id="more"></a></p><h3 id="Harvester"><a href="#Harvester" class="headerlink" title="Harvester"></a>Harvester</h3><ul><li>负责读取一个单个文件的内容 </li><li>逐行读取一个文件，并发送内容到输出端</li><li>从文件的开始读取，通过文件描述符控制关闭和打开文件 </li><li>如果文件被移走或者重命名，依然会读取该文件</li><li>默认情况下,Filebeat保持打开该文件,直到到达close_inactive</li></ul><p>关闭harverter会有以下结果 </p><ul><li>如果之前正在读取一个删除的日志文件，此时关闭harverter，则这个文件将被关闭，释放潜在的资源 </li><li>scan_frequency运行后，将被开始读取文件 </li><li>当文件被删除或者移走，关闭harvester，文件不在被读取</li><li>控制harvester的关闭，使用close_* 选项配置 </li></ul><h3 id="Prospector"><a href="#Prospector" class="headerlink" title="Prospector"></a>Prospector</h3><ul><li>负责管理harvesters和寻找资源来读取 </li><li>当input_type是log的时候，它将发现所有匹配定义的路径文件，为每个文件开始启动一个harvester，每个prospector都跑自己的例程</li><li>支持俩中prospector类型： log and stdin </li><li>每个prospector类型可以被定义多次 </li><li>对每个文件检查是否需要启动harvester，是否已经启动，是否被忽略等定义 </li><li>如果harvester是关闭的，文件的尺寸改变了，新行只是被收录进来</li></ul><p>保持文件状态</p><ul><li>保持文件状态，频繁写入registry file中 </li><li>文件状态记录最后读取文件的偏移量，确保所有日志文件被发送</li><li>跟踪发送的最后一行日志，继续阅读日志，直到输出端恢复正常</li><li>filebeat运行的时候，每个prospector状态信息被保存在内存中</li><li>filebeat被重启，将读取registry文件来恢复文件状态，确认位置</li><li>为了发现每个prospertor保持文件状态，对于每个文件，filebeat将存储唯一验证号来探测一个文件是否被获取了</li></ul><p>保证至少一次成功投递</p><ul><li>filebeat为每个事件存储投递状态到registry file中</li><li>在定义的输出被阻塞的情况下并没有证实所有事件,Filebeat将试图发送事件,直到输出承认已收到事件</li><li>如果在发送事件中，filebeat关闭，它不会等待事件成功投递返回结果，当再次启动filebeat的时候，会再次发送一次事件，确保至少事件有一次被发送，但也可以在结束的时候，发送俩条事件，或者可以指定等待超时时间 通过shutdown_timeout</li></ul><p>限制</p><ul><li>当输出端不可达的时候，文件被删除了，数据可能会丢失</li><li>写入磁盘的速度一定要大雨filebeat进程的速度 </li><li>linux上还有可能inode重用，filebeat会跳过inode重用文件</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Filebeat-work&quot;&gt;&lt;a href=&quot;#Filebeat-work&quot; class=&quot;headerlink&quot; title=&quot;Filebeat work&quot;&gt;&lt;/a&gt;Filebeat work&lt;/h2&gt;&lt;p&gt;&lt;em&gt;这个话题，你学习了解Filebeat关键构件&lt;br&gt;他们之间是怎么样工作， 理解这些概念，&lt;br&gt;在配置filebeat的时候，帮助你做出正确的决定。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;filebeat有俩个主要的组件： prospectors or harversters&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="elk" scheme="http://budongshu.gitee.io/categories/elk/"/>
    
    
      <category term="filebeat" scheme="http://budongshu.gitee.io/tags/filebeat/"/>
    
  </entry>
  
  <entry>
    <title>jenkins-gitlab-git pull</title>
    <link href="http://budongshu.gitee.io/2016/09/08/jenkins-gitlab-git%20pull/"/>
    <id>http://budongshu.gitee.io/2016/09/08/jenkins-gitlab-git pull/</id>
    <published>2016-09-08T12:26:00.000Z</published>
    <updated>2019-09-27T04:06:57.967Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/logo.png" alt></p><a id="more"></a><h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry ]# cat /etc/redhat-release </span><br><span class="line">CentOS Linux release 7.2.1511 (Core)</span><br></pre></td></tr></table></figure><h3 id="安装gitlab"><a href="#安装gitlab" class="headerlink" title="安装gitlab"></a>安装gitlab</h3><h4 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry ]# cat /etc/yum.repos.d/gitlab-ce.repo </span><br><span class="line">[gitlab-ce]</span><br><span class="line">name=gitlab-ce</span><br><span class="line">baseurl=http://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://packages.gitlab.com/gpg.key</span><br></pre></td></tr></table></figure><h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry # vim /etc/gitlab/gitlab.rb</span><br><span class="line">external_url &apos;http://10.128.28.196&apos;</span><br><span class="line"></span><br><span class="line">##启动加载reconfigure</span><br><span class="line">[root@office-docker-registry ~]# gitlab-ctl reconfigure</span><br><span class="line">[root@office-docker-registry ~]# gitlab-ctl status </span><br><span class="line">run: gitlab-workhorse: (pid 23500) 617s; run: log: (pid 23438) 658s</span><br><span class="line">run: logrotate: (pid 23456) 650s; run: log: (pid 23455) 650s</span><br><span class="line">run: nginx: (pid 23444) 656s; run: log: (pid 23443) 656s</span><br><span class="line">run: postgresql: (pid 23293) 696s; run: log: (pid 23292) 696s</span><br><span class="line">run: redis: (pid 23210) 702s; run: log: (pid 23209) 702s</span><br><span class="line">run: sidekiq: (pid 23428) 659s; run: log: (pid 23427) 659s</span><br><span class="line">run: unicorn: (pid 23482) 618s; run: log: (pid 23395) 665s</span><br><span class="line"></span><br><span class="line">## web访问</span><br><span class="line">http:://10.128.28.196</span><br></pre></td></tr></table></figure><h3 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h3><h4 id="安装jdk最新版本"><a href="#安装jdk最新版本" class="headerlink" title="安装jdk最新版本"></a>安装jdk最新版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry ~]# yum install -y java-1.8.0-openjdk</span><br><span class="line">[root@office-docker-registry ~]# java -version   </span><br><span class="line">openjdk version &quot;1.8.0_101&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_101-b13)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.101-b13, mixed mode)</span><br></pre></td></tr></table></figure><h4 id="yun源jenkins"><a href="#yun源jenkins" class="headerlink" title="yun源jenkins"></a>yun源jenkins</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo</span><br><span class="line">rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key </span><br><span class="line">yum install jenkins -y</span><br><span class="line">systemctl start jenkins</span><br></pre></td></tr></table></figure><h3 id="配置jenkins"><a href="#配置jenkins" class="headerlink" title="配置jenkins"></a>配置jenkins</h3><blockquote><p>由于gitlab 的ruby程序也使用8080端口,所以修改jenkins默认配置<br>将端口改为除了8080,80,以外的端口</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry ]# rpm -ql jenkins</span><br><span class="line">/etc/init.d/jenkins</span><br><span class="line">/etc/logrotate.d/jenkins</span><br><span class="line">/etc/sysconfig/jenkins        #jenkins默认配置文件路径</span><br><span class="line">/usr/lib/jenkins              #jenkins家目录</span><br><span class="line">/usr/lib/jenkins/jenkins.war</span><br><span class="line">/usr/sbin/rcjenkins</span><br><span class="line">/var/cache/jenkins</span><br><span class="line">/var/lib/jenkins</span><br><span class="line">/var/log/jenkins</span><br><span class="line"></span><br><span class="line">[root@office-docker-registry ]# grep -v &quot;^$&quot; /etc/sysconfig/jenkins |grep -v &quot;^#&quot;</span><br><span class="line">JENKINS_HOME=&quot;/data/jenkins&quot;                #这里修改了默认的家目录</span><br><span class="line">JENKINS_JAVA_CMD=&quot;&quot;</span><br><span class="line">JENKINS_USER=&quot;jenkins&quot;</span><br><span class="line">JENKINS_JAVA_OPTIONS=&quot;-Djava.awt.headless=true&quot;</span><br><span class="line">JENKINS_PORT=&quot;8081&quot;                         #端口这里修改为8081</span><br><span class="line">JENKINS_LISTEN_ADDRESS=&quot;10.128.28.196&quot;      #监听地址修改为本地地址</span><br><span class="line">JENKINS_HTTPS_PORT=&quot;&quot;</span><br><span class="line">JENKINS_HTTPS_KEYSTORE=&quot;&quot;</span><br><span class="line">JENKINS_HTTPS_KEYSTORE_PASSWORD=&quot;&quot;</span><br><span class="line">JENKINS_HTTPS_LISTEN_ADDRESS=&quot;&quot;</span><br><span class="line">JENKINS_DEBUG_LEVEL=&quot;5&quot;</span><br><span class="line">JENKINS_ENABLE_ACCESS_LOG=&quot;no&quot;</span><br><span class="line">JENKINS_HANDLER_MAX=&quot;100&quot;</span><br><span class="line">JENKINS_HANDLER_IDLE=&quot;20&quot;</span><br><span class="line">JENKINS_ARGS=&quot;&quot;</span><br><span class="line"></span><br><span class="line">[root@office-docker-registry data]# mkdir -pv /data/jenkins/       </span><br><span class="line">[root@office-docker-registry data]# chown  jenkins.jenkins -R  /data/jenkins/    </span><br><span class="line">[root@office-docker-registry data]# /etc/init.d/jenkins restart    #重启jenkins</span><br><span class="line">[root@office-docker-registry data]# ss -tunlp | grep 8081          #检查8081端口</span><br><span class="line">tcp    LISTEN     0      50     ::ffff:10.128.28.196:8081    :::*  users:((&quot;java&quot;,pid=26235,fd=20))</span><br></pre></td></tr></table></figure><h3 id="访问jenkins-web界面"><a href="#访问jenkins-web界面" class="headerlink" title="访问jenkins web界面"></a>访问jenkins web界面</h3><blockquote><p><a href="http://10.128.28.196:8081" target="_blank" rel="noopener">http://10.128.28.196:8081</a></p></blockquote><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/login1.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry ~]# cat /data/jenkins/secrets/initialAdminPassword</span><br><span class="line">789066937d624c7cafbc503b703c2c08</span><br></pre></td></tr></table></figure><blockquote><p>输入密码继续,点击skip plugin Installaitons</p></blockquote><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/login2.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/login3.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/login4.png" alt></p><h4 id="测试发邮件-在下一步插件安装完成后在回来执行这一步骤"><a href="#测试发邮件-在下一步插件安装完成后在回来执行这一步骤" class="headerlink" title="测试发邮件(在下一步插件安装完成后在回来执行这一步骤)"></a>测试发邮件(在下一步插件安装完成后在回来执行这一步骤)</h4><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/set1.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/email1.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/email2.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/email.png" alt></p><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><blockquote><p>此时会默认装上系统默认的插件</p></blockquote><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/plugin.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/plugin1.png" alt></p><h4 id="使用jenkins"><a href="#使用jenkins" class="headerlink" title="使用jenkins"></a>使用jenkins</h4><blockquote><p>添加一个认证用户,拉取git代码的时候使用</p></blockquote><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/user.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/pull1.png" alt></p><blockquote><p>gitlab上操作</p></blockquote><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/add-dev.png" alt></p><blockquote><p>gitlab上操作</p></blockquote><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/add-dev2.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/pull2.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/pull3.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/over.png" alt></p><h3 id="系统上查看代码"><a href="#系统上查看代码" class="headerlink" title="系统上查看代码"></a>系统上查看代码</h3><blockquote><p>可以看到README.md被拉取下来,内容一致 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry demo1]# pwd</span><br><span class="line">/data/jenkins/workspace/demo1</span><br><span class="line">[root@office-docker-registry demo1]# cat README.md </span><br><span class="line">test web</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xnvvj.com1.z0.glb.clouddn.com//jenkins/logo.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git持续集成" scheme="http://budongshu.gitee.io/categories/git%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
      <category term="git" scheme="http://budongshu.gitee.io/tags/git/"/>
    
      <category term="jenkins" scheme="http://budongshu.gitee.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>gitlab-git-Install</title>
    <link href="http://budongshu.gitee.io/2016/09/07/gitlab-git-Install/"/>
    <id>http://budongshu.gitee.io/2016/09/07/gitlab-git-Install/</id>
    <published>2016-09-07T12:26:00.000Z</published>
    <updated>2020-03-27T06:17:27.010Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@office-c6-4 ~]# cat /etc/redhat-release </span><br><span class="line">CentOS release 6.6 (Final)</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="yum源gitlab配置"><a href="#yum源gitlab配置" class="headerlink" title="yum源gitlab配置"></a>yum源gitlab配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@office-c6-4 ~]# cat /etc/yum.repos.d/gitlab-ce.repo </span><br><span class="line">[gitlab-ce]</span><br><span class="line">name=gitlab-ce</span><br><span class="line">baseurl=http://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6</span><br><span class="line">repo_gpgcheck=0 </span><br><span class="line">gpgcheck=0 </span><br><span class="line">enabled=1 </span><br><span class="line">gpgkey=https://packages.gitlab.com/gpg.key</span><br></pre></td></tr></table></figure><h2 id="安装gitlab"><a href="#安装gitlab" class="headerlink" title="安装gitlab"></a>安装gitlab</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gitlab-ce-8.10.8* -y</span><br></pre></td></tr></table></figure><h3 id="配置gitlab"><a href="#配置gitlab" class="headerlink" title="配置gitlab"></a>配置gitlab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">external_url &apos;http://192.168.10.14&apos;</span><br><span class="line">gitlab_rails[&apos;smtp_enable&apos;] = true #邮件发送设置</span><br><span class="line">gitlab_rails[&apos;smtp_address&apos;] = &quot;smtp.163.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_port&apos;] = 25</span><br><span class="line">gitlab_rails[&apos;smtp_user_name&apos;] = &quot;rooroot@163.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_password&apos;] = &quot;password&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_domain&apos;] = &quot;163.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_authentication&apos;] = :login</span><br><span class="line">gitlab_rails[&apos;smtp_enable_starttls_auto&apos;] = true</span><br><span class="line">gitlab_rails[&apos;smtp_tls&apos;] = false</span><br><span class="line">gitlab_rails[&apos;gitlab_email_from&apos;] = &quot;rooroot@163.com&quot;</span><br><span class="line">user[&quot;git_user_email&quot;] = &quot;rooroot@163.com</span><br></pre></td></tr></table></figure><h3 id="配置邮件发送"><a href="#配置邮件发送" class="headerlink" title="配置邮件发送"></a>配置邮件发送</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@office-c6-4 ~]# echo &quot;Test mail from postfix&quot; | mail -s &quot;Test Postfix&quot; budongshu@mia.com</span><br><span class="line">-bash: mail: command not found</span><br><span class="line">[root@office-c6-4 ~]# yum install mailx -y </span><br><span class="line">[root@office-c6-4 ~]# echo &quot;Test mail from postfix&quot; | mail -s &quot;Test Postfix&quot; budongshu@xxxxxxx.com</span><br></pre></td></tr></table></figure><p><img src="http://i.imgur.com/vA9Wrlc.png" alt></p><h3 id="启动并查看gitlab状态"><a href="#启动并查看gitlab状态" class="headerlink" title="启动并查看gitlab状态"></a>启动并查看gitlab状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@office-c6-4 ~]# gitlab-ctl  reconfigure</span><br><span class="line">[root@office-c6-4 ~]# gitlab-ctl status </span><br><span class="line">run: gitlab-workhorse: (pid 1650) 264s; run: log: (pid 1546) 348s</span><br><span class="line">run: logrotate: (pid 1564) 340s; run: log: (pid 1563) 340s</span><br><span class="line">run: nginx: (pid 1552) 346s; run: log: (pid 1551) 346s</span><br><span class="line">run: postgresql: (pid 1401) 392s; run: log: (pid 1400) 392s</span><br><span class="line">run: redis: (pid 1318) 398s; run: log: (pid 1317) 398s</span><br><span class="line">run: sidekiq: (pid 1536) 354s; run: log: (pid 1535) 354s</span><br><span class="line">run: unicorn: (pid 1737) 199s; run: log: (pid 1503) 356s</span><br></pre></td></tr></table></figure><h3 id="访问界面"><a href="#访问界面" class="headerlink" title="访问界面"></a>访问界面</h3><blockquote><p>如若出现界面502的情况，请检查本地是否配置nginx,还有80,8080端口是否被占用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.10.14</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="web界面访问"><a href="#web界面访问" class="headerlink" title="web界面访问"></a>web界面访问</h4><blockquote><p>首次登陆会提示让其设置新密码</p></blockquote><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/login2.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/login1.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/login3.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/login4.png" alt></p><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/add-user.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/user2.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/user3.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/user4.png" alt></p><h4 id="创建一个组并加入dev成员"><a href="#创建一个组并加入dev成员" class="headerlink" title="创建一个组并加入dev成员"></a>创建一个组并加入dev成员</h4><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/group1.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/group2.png" alt></p><h4 id="创建一个project"><a href="#创建一个project" class="headerlink" title="创建一个project"></a>创建一个project</h4><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/project.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/readme.png" alt></p><h3 id="客户端安装git-1-9"><a href="#客户端安装git-1-9" class="headerlink" title="客户端安装git-1.9"></a>客户端安装git-1.9</h3><blockquote><p>默认git-1.7，yum装的有些问题，所以升级到1.9</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker</span><br><span class="line">cd /usr/src</span><br><span class="line">wget https://www.kernel.org/pub/software/scm/git/git-1.9.4.tar.gz</span><br><span class="line">tar xzf git-1.9.4.tar.gz</span><br><span class="line">cd git-1.9.4</span><br><span class="line">make prefix=/usr/local/git all</span><br><span class="line">make prefix=/usr/local/git install</span><br><span class="line">echo &quot;export PATH=$PATH:/usr/local/git/bin&quot; &gt;&gt; /etc/bashrc</span><br><span class="line">source /etc/bashrc</span><br></pre></td></tr></table></figure><h3 id="客户端git下载上传"><a href="#客户端git下载上传" class="headerlink" title="客户端git下载上传"></a>客户端git下载上传</h3><h4 id="git-clone-root管理员用户"><a href="#git-clone-root管理员用户" class="headerlink" title="git clone(root管理员用户)"></a>git clone(root管理员用户)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@office-c6-2 data]# git clone http://192.168.10.14/ops/testconfig.git </span><br><span class="line">Cloning into &apos;testconfig&apos;...</span><br><span class="line">Username for &apos;http://192.168.10.14&apos;: root        #输入用户名</span><br><span class="line">Password for &apos;http://root@192.168.10.14&apos;:        #输入密码</span><br><span class="line">remote: Counting objects: 6, done.</span><br><span class="line">remote: Compressing objects: 100% (3/3), done.</span><br><span class="line">remote: Total 6 (delta 0), reused 0 (delta 0)</span><br><span class="line">Unpacking objects: 100% (6/6), done.</span><br><span class="line">Checking connectivity... done.</span><br></pre></td></tr></table></figure><h4 id="git-clone-dev-组中的一个开发人员"><a href="#git-clone-dev-组中的一个开发人员" class="headerlink" title="git clone(dev 组中的一个开发人员)"></a>git clone(dev 组中的一个开发人员)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@office-c6-2 ops]# git clone http://192.168.10.14/ops/testconfig.git </span><br><span class="line">Cloning into &apos;testconfig&apos;...</span><br><span class="line">Username for &apos;http://192.168.10.14&apos;: budongshu      #输入的是dev开发者的用户（不是root用户）</span><br><span class="line">Password for &apos;http://budongshu@192.168.10.14&apos;:      #该用户的密码</span><br><span class="line">remote: Counting objects: 13, done.</span><br><span class="line">remote: Compressing objects: 100% (8/8), done.</span><br><span class="line">remote: Total 13 (delta 0), reused 0 (delta 0)</span><br><span class="line">Unpacking objects: 100% (13/13), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line"></span><br><span class="line">[root@office-c6-2 ops]# ll -ls testconfig/</span><br><span class="line">total 8</span><br><span class="line">4 -rw-r--r-- 1 root root 48 Sep 10 01:12 nginx.conf</span><br><span class="line">4 -rw-r--r-- 1 root root 15 Sep 10 01:12 README.md</span><br></pre></td></tr></table></figure><h4 id="建立分支"><a href="#建立分支" class="headerlink" title="建立分支"></a>建立分支</h4><blockquote><p>非组的admin管理员不可以将代码直接push到master分支上，需要建立一个分支<br>确认测试代码没有问题后，在进行合并merge </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@office-c6-2 testconfig]# git config --global user.name &quot;budongshu&quot;</span><br><span class="line">[root@office-c6-2 testconfig]# git config --global user.email &quot;admin@126.com&quot;</span><br><span class="line">[root@office-c6-2 testconfig]# touch db.conf                    #新建一个配置文件（随意的，测试使用）</span><br><span class="line">[root@office-c6-2 testconfig]# echo &quot;listen 3306&quot; &gt;&gt; db.conf  </span><br><span class="line">[root@office-c6-2 testconfig]# git branch dev               #新建dev 分支</span><br><span class="line">[root@office-c6-2 testconfig]# git checkout dev     #切换到dev分支</span><br><span class="line">Switched to branch &apos;dev&apos;</span><br><span class="line">[root@office-c6-2 testconfig]# git push origin dev              #将本地push到远程origin</span><br><span class="line">Username for &apos;http://192.168.10.14&apos;: budongshu   </span><br><span class="line">Password for &apos;http://budongshu@192.168.10.14&apos;: </span><br><span class="line">Total 0 (delta 0), reused 0 (delta 0)</span><br><span class="line">To http://192.168.10.14/ops/testconfig.git</span><br><span class="line">   38982eb..4205f58  dev -&gt; dev</span><br><span class="line">[root@office-c6-2 testconfig]# echo &quot;ip 0.0.0.0 &quot; &gt;&gt; db.conf    #修改配置文件</span><br><span class="line">[root@office-c6-2 testconfig]# git add db.conf          #添加到暂存区</span><br><span class="line">[root@office-c6-2 testconfig]# git status     #查看状态</span><br><span class="line">On branch dev</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">        new file:   db.conf</span><br><span class="line"></span><br><span class="line">[root@office-c6-2 testconfig]# git commit -m &quot;add db.conf &quot;   #提交</span><br><span class="line">[dev e198869] add db.conf</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 db.conf</span><br><span class="line">[root@office-c6-2 testconfig]# git push -u origin dev         #push到远程分支dev下</span><br><span class="line">Username for &apos;http://192.168.10.14&apos;: budongshu</span><br><span class="line">Password for &apos;http://budongshu@192.168.10.14&apos;: </span><br><span class="line">Counting objects: 5, done.</span><br><span class="line">Compressing objects: 100% (2/2), done.</span><br><span class="line">Writing objects: 100% (3/3), 319 bytes | 0 bytes/s, done.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To http://192.168.10.14/ops/testconfig.git</span><br><span class="line">   4205f58..e198869  dev -&gt; dev</span><br><span class="line">Branch dev set up to track remote branch dev from origin</span><br></pre></td></tr></table></figure><h4 id="web界面查看"><a href="#web界面查看" class="headerlink" title="web界面查看"></a>web界面查看</h4><blockquote><p>可以看到db.conf新建的文件已经上传到dev分支下面,如果测试没问后,在merge到master主分支上.</p></blockquote><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/dev1.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//gitlab/dev2.png" alt></p><h3 id="over"><a href="#over" class="headerlink" title="over"></a>over</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@office-c6-4 ~]# cat /etc/redhat-release &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CentOS release 6.6 (Final)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://budongshu.gitee.io/categories/git/"/>
    
    
      <category term="gitlab" scheme="http://budongshu.gitee.io/tags/gitlab/"/>
    
      <category term="git" scheme="http://budongshu.gitee.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>elk-redis</title>
    <link href="http://budongshu.gitee.io/2016/09/06/elk-redis/"/>
    <id>http://budongshu.gitee.io/2016/09/06/elk-redis/</id>
    <published>2016-09-06T12:26:00.000Z</published>
    <updated>2020-03-27T06:17:16.838Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前期规划"><a href="#前期规划" class="headerlink" title="前期规划"></a>前期规划</h2><ul><li>10.128.28.196  (nginx + apahe logstash收集日志(shipper))</li><li>10.128.28.197  (redis + logstash 获取日志(indexer))</li><li>10.128.28.198  (elasticsearch + kibana )</li></ul><a id="more"></a><h2 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/redhat-release </span><br><span class="line">CentOS Linux release 7.2.1511 (Core)</span><br></pre></td></tr></table></figure><h2 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h2><h3 id="安装logstash"><a href="#安装logstash" class="headerlink" title="安装logstash"></a>安装logstash</h3><blockquote><p>采用配置yum源的方式安装logstash</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry]# cat /etc/yum.repos.d/logstash.repo </span><br><span class="line">[logstash-2.3]</span><br><span class="line">name=Logstash repository for 2.3.x packages</span><br><span class="line">baseurl=https://packages.elastic.co/logstash/2.3/centos</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://packages.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line">[root@office-docker-registry ~]# yum install -y logstash</span><br></pre></td></tr></table></figure><h3 id="配置logstash"><a href="#配置logstash" class="headerlink" title="配置logstash"></a>配置logstash</h3><blockquote><p>默认配置文件路径,默认是没有任何配置的</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registryr ~]# rpm -ql logstash | grep /etc/logstash </span><br><span class="line">/etc/logstash/conf.d</span><br><span class="line">[root@office-docker-registry ~]# cd /etc/logstash/conf.d/</span><br><span class="line">[root@office-docker-registry conf.d]# vim simple.conf </span><br><span class="line">[root@office-docker-registry conf.d]# cat simple.conf </span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">        stdin&#123;&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">        stdout &#123;</span><br><span class="line">                codec =&gt; rubydebug </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试配置文件格式是否正确"><a href="#测试配置文件格式是否正确" class="headerlink" title="测试配置文件格式是否正确"></a>测试配置文件格式是否正确</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry conf.d]# logstash -f simple.conf  --configtest</span><br><span class="line">Configuration OK</span><br></pre></td></tr></table></figure><h3 id="写个hello-world-玩玩"><a href="#写个hello-world-玩玩" class="headerlink" title="写个hello world 玩玩"></a>写个hello world 玩玩</h3><blockquote><p>依赖java 启动加载比较慢<br>可以看下输出的格式</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry conf.d]# logstash -f simple.conf </span><br><span class="line">Settings: Default pipeline workers: 1</span><br><span class="line">Pipeline main started</span><br><span class="line">hello world                            #手动输入hello world 按回车返回以下信息</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">       &quot;message&quot; =&gt; &quot;hello world&quot;,     #输入的信息</span><br><span class="line">      &quot;@version&quot; =&gt; &quot;1&quot;,               #版本</span><br><span class="line">    &quot;@timestamp&quot; =&gt; &quot;2016-09-06T14:33:18.647Z&quot;,</span><br><span class="line">          &quot;host&quot; =&gt; &quot;mesos-master&quot;     #主机名</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">安ctrl + d 退出</span><br></pre></td></tr></table></figure><h3 id="安装httpd"><a href="#安装httpd" class="headerlink" title="安装httpd"></a>安装httpd</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry ~]# yum install -y httpd</span><br><span class="line">[root@office-docker-registry ~]# systemctl start httpd</span><br></pre></td></tr></table></figure><h3 id="apache-日志格式"><a href="#apache-日志格式" class="headerlink" title="apache 日志格式"></a>apache 日志格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%&#123;Referer&#125;i\&quot; \&quot;%&#123;User-Agent&#125;i\&quot;&quot; combined</span><br></pre></td></tr></table></figure><h3 id="apache-输出日志"><a href="#apache-输出日志" class="headerlink" title="apache 输出日志"></a>apache 输出日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.128.0.12 - - [06/Sep/2016:21:17:01 +0800] &quot;GET /noindex/css/open-sans.css HTTP/1.1&quot; 304 - &quot;http://10.128.28.196/&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0&quot;</span><br></pre></td></tr></table></figure><h3 id="logstash收集apache日志"><a href="#logstash收集apache日志" class="headerlink" title="logstash收集apache日志"></a>logstash收集apache日志</h3><blockquote><p>如下可以看到grok-patterns,该文件提供了apache的grok匹配,只需要引用相关变量即可 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry conf.d]# rpm -ql logstash | grep grok-patterns</span><br><span class="line">/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-2.0.2/patterns/grok-patterns</span><br></pre></td></tr></table></figure><blockquote><p>收集apapche日志配置如下(输出到终端测试)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry conf.d]# cat apachesimple2.conf </span><br><span class="line">input &#123;</span><br><span class="line">        file &#123;</span><br><span class="line">        path =&gt; &quot;/var/log/httpd/access_log&quot; </span><br><span class="line">        start_position =&gt; &quot;beginning&quot;</span><br><span class="line">        type =&gt; &quot;apache-access&quot;</span><br><span class="line">       &#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">        if [type] == &apos;apache-access&apos; &#123;</span><br><span class="line">        grok      &#123;</span><br><span class="line">                match =&gt; &#123; &quot;message&quot; =&gt;  &quot;%&#123;COMBINEDAPACHELOG&#125;&quot; &#125;</span><br><span class="line">                overwrite =&gt;  [ &quot;message&quot; ] </span><br><span class="line">                remove_field =&gt; [&quot;message&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">        date      &#123;</span><br><span class="line">                match =&gt; [&quot;timestamp&quot; , &quot;dd/MMM/YYYY:HH:mm:ss Z&quot;]</span><br><span class="line">        &#125; </span><br><span class="line">        urldecode &#123;  </span><br><span class="line">                all_fields =&gt; true  </span><br><span class="line">        &#125;</span><br><span class="line">        mutate    &#123;</span><br><span class="line">                  convert =&gt; &#123;&quot;response&quot; =&gt; &quot;integer&quot;&#125;</span><br><span class="line">                  convert =&gt; &#123;&quot;bytes&quot; =&gt; &quot;integer&quot;&#125;</span><br><span class="line">                  gsub =&gt; [</span><br><span class="line">                      &quot;referrer&quot;,&apos;\&quot;&apos;, &quot;&quot;,</span><br><span class="line">                      &quot;agent&quot;,&apos;\&quot;&apos;,&quot;&quot;</span><br><span class="line">                  ]</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line">output &#123;</span><br><span class="line">        stdout &#123;</span><br><span class="line">                codec =&gt; rubydebug</span><br><span class="line"></span><br><span class="line">       &#125;         </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>先加上 —configtest进行测试,没问题后在执行</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry conf.d]# /opt/logstash/bin/logstash -f apachesimple2.conf </span><br><span class="line">Settings: Default pipeline workers: 1</span><br><span class="line">Logstash startup completed</span><br><span class="line">&#123;</span><br><span class="line">       &quot;@version&quot; =&gt; &quot;1&quot;,</span><br><span class="line">     &quot;@timestamp&quot; =&gt; &quot;2016-09-06T14:01:45.000Z&quot;,</span><br><span class="line">           &quot;path&quot; =&gt; &quot;/var/log/httpd/access_log&quot;,</span><br><span class="line">           &quot;host&quot; =&gt; &quot;0.0.0.0&quot;,</span><br><span class="line">           &quot;type&quot; =&gt; &quot;apache-access&quot;,</span><br><span class="line">       &quot;clientip&quot; =&gt; &quot;172.16.96.36&quot;,</span><br><span class="line">          &quot;ident&quot; =&gt; &quot;-&quot;,</span><br><span class="line">           &quot;auth&quot; =&gt; &quot;-&quot;,</span><br><span class="line">      &quot;timestamp&quot; =&gt; &quot;06/Sep/2016:22:01:45 +0800&quot;,</span><br><span class="line">           &quot;verb&quot; =&gt; &quot;GET&quot;,</span><br><span class="line">        &quot;request&quot; =&gt; &quot;/&quot;,</span><br><span class="line">    &quot;httpversion&quot; =&gt; &quot;1.1&quot;,</span><br><span class="line">       &quot;response&quot; =&gt; 403,</span><br><span class="line">          &quot;bytes&quot; =&gt; 4897,</span><br><span class="line">       &quot;referrer&quot; =&gt; &quot;-&quot;,</span><br><span class="line">          &quot;agent&quot; =&gt; &quot;curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.21 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><blockquote><p>yum安装比较方便,为了测试 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx -y</span><br><span class="line">systemctl start nginx    #启动nginx(这里要注意nginx和httpd记得修改监听端口,避免重复)</span><br></pre></td></tr></table></figure><h3 id="nginx-日志格式-这里根据需要-我修改了默认格式-自定义日志格式"><a href="#nginx-日志格式-这里根据需要-我修改了默认格式-自定义日志格式" class="headerlink" title="nginx 日志格式(这里根据需要,我修改了默认格式,自定义日志格式)"></a>nginx 日志格式(这里根据需要,我修改了默认格式,自定义日志格式)</h3><blockquote><p>nginx监听在81端口 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &quot;$http_cookie&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot; &apos;</span><br><span class="line">                      &apos;$upstream_addr $upstream_status $upstream_cache_status &apos; </span><br><span class="line">                      &apos;$request_time&apos;;</span><br></pre></td></tr></table></figure><h3 id="nginx-输出格式"><a href="#nginx-输出格式" class="headerlink" title="nginx 输出格式"></a>nginx 输出格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.128.0.12 - - [06/Sep/2016:21:49:54 +0800] &quot;GET /poweredby.png HTTP/1.1&quot; 304 0 &quot;http://10.128.28.196:81/&quot; &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0&quot; &quot;-&quot; - - - 0.000</span><br></pre></td></tr></table></figure><h3 id="logstash-收集nginx日志"><a href="#logstash-收集nginx日志" class="headerlink" title="logstash 收集nginx日志"></a>logstash 收集nginx日志</h3><blockquote><p>需要自定义模式,grok-patterns自带的正则不满足nginx日志需求<br>新建目录,存放自定义匹配nginx日志的模式文件nginxlog</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@office-docker-registry conf.d]# mkdir /opt/logstash/patterns/</span><br><span class="line">[root@office-docker-registry conf.d]# cd /opt/logstash/patterns/</span><br><span class="line">[root@office-docker-registry patterns]# cat nginxlog</span><br><span class="line">NGINXACCESS %&#123;IP:remote_ip&#125; (%&#123;USER:ident&#125;|-&#125;) (%&#123;USER:auth&#125;|-) \[%&#123;HTTPDATE:timestamp&#125;\] &quot;%&#123;WORD:method&#125; %&#123;NOTSPACE:request&#125; (?:HTTP/%&#123;NUMBER:httpversion&#125;)&quot; %&#123;NUMBER:status&#125; (?:%&#123;NUMBER:bytes&#125;|-) %&#123;QS:referer&#125; %&#123;QS:http_cookie&#125; %&#123;QS:ua&#125; %&#123;QS:xff&#125; (%&#123;URIHOST:upstream_host&#125;|-) (%&#123;NUMBER:upstream_response&#125;|-) (%&#123;WORD:upstream_cache_status&#125;|-) (%&#123;BASE16FLOAT:request_time&#125;|-)</span><br></pre></td></tr></table></figure><blockquote><p>收集nginx配置如下(输出到终端测试)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry conf.d]# cat nginx2.conf </span><br><span class="line">input &#123;</span><br><span class="line">        file &#123;</span><br><span class="line">        path =&gt; &quot;/var/log/nginx/access.log&quot; </span><br><span class="line">        start_position =&gt; &quot;beginning&quot;</span><br><span class="line">       &#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">        grok      &#123;</span><br><span class="line">                patterns_dir =&gt; &quot;/opt/logstash/patterns/nginxlog&quot;  #指定寻找nginxlog匹配模式的路径</span><br><span class="line">                match =&gt; &#123; &quot;message&quot; =&gt;  &quot;%&#123;NGINXACCESS&#125;&quot; &#125;        #引用名称(相当于这个模式匹配的名称)</span><br><span class="line">                remove_field =&gt; [&quot;message&quot; ]                       #移除message,避免重复输出俩次</span><br><span class="line">        &#125;</span><br><span class="line">        date      &#123;</span><br><span class="line">                match =&gt; [&quot;timestamp&quot; , &quot;dd/MMM/YYYY:HH:mm:ss Z&quot;]</span><br><span class="line">        &#125; </span><br><span class="line">        urldecode &#123;  </span><br><span class="line">                all_fields =&gt; true                                 </span><br><span class="line">        &#125;</span><br><span class="line">        mutate    &#123;</span><br><span class="line">                  convert =&gt; &#123;&quot;response&quot; =&gt; &quot;integer&quot;&#125;           #repsonse字段 变成整数</span><br><span class="line">                  convert =&gt; &#123;&quot;bytes&quot; =&gt; &quot;integer&quot;&#125;              #bytes字段 变成整数</span><br><span class="line">                  gsub =&gt; [</span><br><span class="line">                      &quot;referer&quot;,&apos;\&quot;&apos;, &quot;&quot;,                        #替换referer字段的\&quot; 为 空</span><br><span class="line">                      &quot;ua&quot;,&apos;\&quot;&apos;,&quot;&quot;,</span><br><span class="line">                      &quot;xff&quot;,&apos;\&quot;&apos;,&quot;&quot;</span><br><span class="line">                  ]</span><br><span class="line">         &#125;</span><br><span class="line">&#125; </span><br><span class="line">output &#123;</span><br><span class="line">        stdout &#123;</span><br><span class="line">                codec =&gt; rubydebug                              #输出到终端</span><br><span class="line"></span><br><span class="line">       &#125;         </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>加上 —configtest测试没问题后在执行 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry ~]# /opt/logstash/bin/logstash -f /etc/logstash/conf.d/nginx3.conf </span><br><span class="line">Settings: Default pipeline workers: 1</span><br><span class="line">Logstash startup completed</span><br><span class="line">&#123;</span><br><span class="line">        &quot;@version&quot; =&gt; &quot;1&quot;,</span><br><span class="line">      &quot;@timestamp&quot; =&gt; &quot;2016-09-07T00:21:46.000Z&quot;,</span><br><span class="line">            &quot;path&quot; =&gt; &quot;/var/log/nginx/access.log&quot;,</span><br><span class="line">            &quot;host&quot; =&gt; &quot;0.0.0.0&quot;,</span><br><span class="line">       &quot;remote_ip&quot; =&gt; &quot;10.128.0.12&quot;,</span><br><span class="line">           &quot;ident&quot; =&gt; &quot;-&quot;,</span><br><span class="line">            &quot;auth&quot; =&gt; &quot;-&quot;,</span><br><span class="line">       &quot;timestamp&quot; =&gt; &quot;07/Sep/2016:08:21:46 +0800&quot;,</span><br><span class="line">          &quot;method&quot; =&gt; &quot;GET&quot;,</span><br><span class="line">         &quot;request&quot; =&gt; &quot;/&quot;,</span><br><span class="line">     &quot;httpversion&quot; =&gt; &quot;1.1&quot;,</span><br><span class="line">          &quot;status&quot; =&gt; &quot;200&quot;,</span><br><span class="line">           &quot;bytes&quot; =&gt; 3700,</span><br><span class="line">         &quot;referer&quot; =&gt; &quot;-&quot;,</span><br><span class="line">     &quot;http_cookie&quot; =&gt; &quot;\&quot;-\&quot;&quot;,</span><br><span class="line">              &quot;ua&quot; =&gt; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Maxthon/4.4.6.1000 Chrome/30.0.1599.101 Safari/537.36&quot;,</span><br><span class="line">             &quot;xff&quot; =&gt; &quot;-&quot;,</span><br><span class="line">    &quot;request_time&quot; =&gt; &quot;0.000&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="额外提供nginx-原始日志匹配"><a href="#额外提供nginx-原始日志匹配" class="headerlink" title="额外提供nginx 原始日志匹配"></a>额外提供nginx 原始日志匹配</h2><blockquote><p>提供nginx原始标准日志格式匹配.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#yum装完,不做改变,原始标准日志格式</span><br><span class="line">log_format  main &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">#nginx 输出格式</span><br><span class="line">10.128.0.12 - - [07/Sep/2016:08:27:59 +0800] &quot;GET / HTTP/1.1&quot; 200 3700 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Maxthon/4.4.6.1000 Chrome/30.0.1599.101 Safari/537.36&quot; &quot;-&quot;</span><br><span class="line"></span><br><span class="line">#nginx匹配</span><br><span class="line">NGINXACCESS %&#123;IP:remote_ip&#125; (%&#123;USER:ident&#125;|-) (%&#123;USER:auth&#125;|-) \[%&#123;HTTPDATE:timestamp&#125;\] &quot;%&#123;WORD:method&#125; %&#123;NOTSPACE:request&#125; (?:HTTP/%&#123;NUMBER:httpversion&#125;)&quot; %&#123;NUMBER:status&#125; (?:%&#123;NUMBER:bytes&#125;|-) %&#123;QS:referer&#125; %&#123;QS:http_cookie&#125; %&#123;QS:ua&#125; %&#123;QS:xff</span><br></pre></td></tr></table></figure><h3 id="安装supervisord-报错有点问题-待解决"><a href="#安装supervisord-报错有点问题-待解决" class="headerlink" title="安装supervisord    (报错有点问题,待解决)"></a>安装supervisord    (报错有点问题,待解决)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[root@office-docker-registry conf.d]# yum install supervisor -y</span><br><span class="line">[root@office-docker-registry conf.d]# vim /etc/supervisord.d/logstash.ini </span><br><span class="line">[root@office-docker-registry supervisord.d]# cat logstash.ini </span><br><span class="line">[program:logstash-nginx]</span><br><span class="line">command=/opt/logstash/bin/logstash -f /etc/logstash/conf.d/nginx3-to-redis.conf</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">startsecs=20</span><br><span class="line">stdout_logfile=/opt/logstash/logs/logstash_nginx_stdout.log</span><br><span class="line">stdout_logfile_maxbytes=1MB</span><br><span class="line">stdout_logfile_backups=10</span><br><span class="line">stdout_capture_maxbytes=1MB</span><br><span class="line">stdout_events_enabled=false</span><br><span class="line">stderr_logfile=/opt/logstash/logs/logstash_nginx_stderr.log</span><br><span class="line">stderr_logfile_maxbytes=1MB</span><br><span class="line">stderr_logfile_backups=10</span><br><span class="line">stderr_capture_maxbytes=1MB</span><br><span class="line">stderr_events_enabled=false</span><br><span class="line"></span><br><span class="line">[program:logstash-apache]</span><br><span class="line">command=/opt/logstash/bin/logstash -f /etc/logstash/conf.d/apachesimple2.conf</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">startsecs=20</span><br><span class="line">stdout_logfile=/opt/logstash/logs/logstash_apache_stdout.log</span><br><span class="line">stdout_logfile_maxbytes=1MB</span><br><span class="line">stdout_logfile_backups=10</span><br><span class="line">stdout_capture_maxbytes=1MB</span><br><span class="line">stdout_events_enabled=false</span><br><span class="line">stderr_logfile=/opt/logstash/logs/logstash_apache_stderr.log</span><br><span class="line">stderr_logfile_maxbytes=1MB</span><br><span class="line">stderr_logfile_backups=10</span><br><span class="line">stderr_capture_maxbytes=1MB</span><br><span class="line">stderr_events_enabled=false</span><br><span class="line">[root@office-docker-registry conf.d]# mkdir /opt/logstash/logs -pv </span><br><span class="line">[root@office-docker-registry supervisord.d]# systemctl start  supervisord       </span><br><span class="line">[root@office-docker-registry supervisord.d]# systemctl status  supervisord  </span><br><span class="line">● supervisord.service - Process Monitoring and Control Daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/supervisord.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Tue 2016-09-06 23:46:42 CST; 6s ago</span><br><span class="line">  Process: 7108 ExecStart=/usr/bin/supervisord -c /etc/supervisord.conf (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 7111 (supervisord)</span><br><span class="line">   Memory: 202.0M</span><br><span class="line">   CGroup: /system.slice/supervisord.service</span><br><span class="line">           ├─7111 /usr/bin/python /usr/bin/supervisord -c /etc/supervisord.conf</span><br><span class="line">           ├─7112 /usr/bin/java -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -Djava.awt.headless=true -XX:CMSInitiatingOccupancyFraction=75 -X...</span><br><span class="line">           └─7113 /usr/bin/java -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -Djava.awt.headless=true -XX:CMSInitiatingOccupancyFraction=75 -X...</span><br><span class="line"></span><br><span class="line">Sep 06 23:46:42 office-docker-registry systemd[1]: Starting Process Monitoring and Control Daemon...</span><br><span class="line">Sep 06 23:46:42 office-docker-registry systemd[1]: Started Process Monitoring and Control Daemon.</span><br></pre></td></tr></table></figure><h3 id="采用开俩个终端分别启动logstash收集nginx和apache"><a href="#采用开俩个终端分别启动logstash收集nginx和apache" class="headerlink" title="采用开俩个终端分别启动logstash收集nginx和apache"></a>采用开俩个终端分别启动logstash收集nginx和apache</h3><blockquote><p>nginx</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">       file &#123;</span><br><span class="line">        path =&gt; &quot;/var/log/nginx/access.log&quot;</span><br><span class="line">        start_position =&gt; &quot;beginning&quot;</span><br><span class="line">        type =&gt; &quot;nginx-access&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">        grok      &#123;</span><br><span class="line">                patterns_dir =&gt; &quot;/opt/logstash/patterns/nginxlog3&quot;  </span><br><span class="line">                match =&gt; &#123; &quot;message&quot; =&gt;  &quot;%&#123;NGINXACCESS&#125;&quot; &#125;</span><br><span class="line">                overwrite =&gt;  [ &quot;message&quot; ] </span><br><span class="line">                remove_field =&gt; [&quot;message&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">        date      &#123;</span><br><span class="line">                match =&gt; [&quot;timestamp&quot; , &quot;dd/MMM/YYYY:HH:mm:ss Z&quot;]</span><br><span class="line">        &#125; </span><br><span class="line">        urldecode &#123;  </span><br><span class="line">                all_fields =&gt; true  </span><br><span class="line">        &#125;</span><br><span class="line">        mutate    &#123;</span><br><span class="line">                  convert =&gt; &#123;&quot;response&quot; =&gt; &quot;integer&quot;&#125;</span><br><span class="line">                  convert =&gt; &#123;&quot;bytes&quot; =&gt; &quot;integer&quot;&#125;</span><br><span class="line">                  gsub =&gt; [</span><br><span class="line">                      &quot;referer&quot;,&apos;\&quot;&apos;, &quot;&quot;,</span><br><span class="line">                      &quot;ua&quot;,&apos;\&quot;&apos;,&quot;&quot;,</span><br><span class="line">                      &quot;xff&quot;,&apos;\&quot;&apos;,&quot;&quot;</span><br><span class="line">                  ]</span><br><span class="line">         &#125;</span><br><span class="line">&#125; </span><br><span class="line">output &#123;</span><br><span class="line">         redis &#123;</span><br><span class="line">          data_type =&gt; &quot;list&quot;</span><br><span class="line">          key =&gt; &quot;nginx-access&quot;</span><br><span class="line">          host =&gt; &quot;10.128.28.197&quot;</span><br><span class="line">          port =&gt; 6379</span><br><span class="line">          workers =&gt; 5</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">#启动</span><br><span class="line">/opt/logstash/bin/logstash -f /etc/logstash/conf.d/nginx-to-redis.conf</span><br></pre></td></tr></table></figure><blockquote><p>apache</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">        file &#123;</span><br><span class="line">        path =&gt; &quot;/var/log/httpd/access_log&quot; </span><br><span class="line">        start_position =&gt; &quot;beginning&quot;</span><br><span class="line">        type =&gt; &quot;apache-access&quot;</span><br><span class="line">       &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">        if [type] == &quot;apache-access&quot; &#123;  </span><br><span class="line">        grok      &#123;</span><br><span class="line">                match =&gt; &#123; &quot;message&quot; =&gt;  &quot;%&#123;COMBINEDAPACHELOG&#125;&quot; &#125;</span><br><span class="line">                overwrite =&gt;  [ &quot;message&quot; ] </span><br><span class="line">                remove_field =&gt; [&quot;message&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">        date      &#123;</span><br><span class="line">                match =&gt; [&quot;timestamp&quot; , &quot;dd/MMM/YYYY:HH:mm:ss Z&quot;]</span><br><span class="line">        &#125; </span><br><span class="line">        urldecode &#123;  </span><br><span class="line">                all_fields =&gt; true  </span><br><span class="line">        &#125;</span><br><span class="line">        mutate    &#123;</span><br><span class="line">                  convert =&gt; &#123;&quot;response&quot; =&gt; &quot;integer&quot;&#125;</span><br><span class="line">                  convert =&gt; &#123;&quot;bytes&quot; =&gt; &quot;integer&quot;&#125;</span><br><span class="line">                  gsub =&gt; [</span><br><span class="line">                      &quot;referrer&quot;,&apos;\&quot;&apos;, &quot;&quot;,</span><br><span class="line">                      &quot;agent&quot;,&apos;\&quot;&apos;,&quot;&quot;</span><br><span class="line">                  ]</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;         </span><br><span class="line">&#125; </span><br><span class="line">output &#123;</span><br><span class="line">         redis &#123;</span><br><span class="line">          data_type =&gt; &quot;list&quot;</span><br><span class="line">          key =&gt; &quot;apache-access&quot;</span><br><span class="line">          host =&gt; &quot;10.128.28.197&quot;</span><br><span class="line">          port =&gt; 6379</span><br><span class="line">          workers =&gt; 5</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">#启动</span><br><span class="line">/opt/logstash/bin/logstash -f /etc/logstash/conf.d/apache-to-redis.conf</span><br></pre></td></tr></table></figure><h2 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">wget wget http://download.redis.io/releases/redis-3.2.1.tar.gz </span><br><span class="line">tar xf redis-3.2.1.tar.gz -C /usr/local/</span><br><span class="line">cd /usr/local/</span><br><span class="line">mv redis-3.2.1 redis</span><br><span class="line">cd redis</span><br><span class="line">make &amp;&amp; make install </span><br><span class="line">cd /usr/local/redis/src </span><br><span class="line">cp redis-cli redis-server /usr/bin/</span><br><span class="line">vim /usr/local/redis/redis.conf     #编辑配置文件</span><br><span class="line"></span><br><span class="line">  daemonize yes                          #是否以后台daemon方式运行，默认不是后台运行</span><br><span class="line">  pidfile /var/run/redis/redis.pid       #redis的PID文件路径</span><br><span class="line">  bind  10.128.28.197                    #绑定主机IP，默认值为127.0.0.1，我们是跨机器运行，所以需要</span><br><span class="line">  logfile /data/logs/redis/redis.log     #定义log文件位置，模式log信息定向到stdout，输出到/dev/null</span><br><span class="line">  save 60 1000                           #重新定义快照的频率</span><br><span class="line">  dir /data/redis/                       #定义data目录</span><br><span class="line">mkdir  /var/run/redis</span><br><span class="line">mkdir  /data/logs/redis/  -pv</span><br><span class="line">mkdir  /data/redis</span><br><span class="line">redis-server    /usr/local/redis/redis.conf</span><br></pre></td></tr></table></figure><h2 id="安装logtash-indexer同上面一样"><a href="#安装logtash-indexer同上面一样" class="headerlink" title="安装logtash-indexer同上面一样"></a>安装logtash-indexer同上面一样</h2><blockquote><p>配置logstash获取nginx+apache的日志</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/logstash/conf.d/server.conf </span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">    redis &#123;</span><br><span class="line">        data_type =&gt; &quot;list&quot;</span><br><span class="line">        key =&gt; &quot;nginx-access&quot;</span><br><span class="line">        host =&gt; &quot;10.128.28.197&quot;</span><br><span class="line">        port =&gt; 6379</span><br><span class="line">        threads =&gt; 5</span><br><span class="line">    &#125;</span><br><span class="line">    redis &#123;</span><br><span class="line">        data_type =&gt; &quot;list&quot;</span><br><span class="line">        key =&gt; &quot;apache-access&quot;</span><br><span class="line">        host =&gt; &quot;10.128.28.197&quot;</span><br><span class="line">        port =&gt; 6379</span><br><span class="line">        threads =&gt; 5</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">   elasticsearch &#123;</span><br><span class="line">        hosts =&gt; [&quot;10.128.28.198:9200&quot;]</span><br><span class="line">        index =&gt; &quot;logstash-%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">        document_type =&gt; &quot;%&#123;type&#125;&quot;</span><br><span class="line">        workers =&gt; 5</span><br><span class="line">        flush_size =&gt; 3000</span><br><span class="line">        template_overwrite =&gt; true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">#启动</span><br><span class="line">/opt/logstash/bin/logstash -f /etc/logstash/conf.d/server.conf</span><br></pre></td></tr></table></figure><h3 id="查看redis"><a href="#查看redis" class="headerlink" title="查看redis"></a>查看redis</h3><blockquote><p>开始访问nginx和apache页面</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; LLEN nginx-access</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; LLEN nginx-access</span><br><span class="line">(integer) 187</span><br><span class="line">127.0.0.1:6379&gt; LLEN apache-access</span><br><span class="line">(integer) 364</span><br><span class="line">127.0.0.1:6379&gt; LLEN nginx-access</span><br><span class="line">(integer) 279</span><br><span class="line">127.0.0.1:6379&gt; LINDEX nginx-access 0 </span><br><span class="line">&quot;&#123;\&quot;@version\&quot;:\&quot;1\&quot;,\&quot;@timestamp\&quot;:\&quot;2016-09-06T15:32:06.000Z\&quot;,\&quot;path\&quot;:\&quot;/var/log/nginx/access.log\&quot;,\&quot;host\&quot;:\&quot;0.0.0.0\&quot;,\&quot;type\&quot;:\&quot;nginx-access\&quot;,\&quot;remote_ip\&quot;:\&quot;10.128.28.196\&quot;,\&quot;ident\&quot;:\&quot;-\&quot;,\&quot;auth\&quot;:\&quot;-\&quot;,\&quot;timestamp\&quot;:\&quot;06/Sep/2016:23:32:06 +0800\&quot;,\&quot;method\&quot;:\&quot;HEAD\&quot;,\&quot;request\&quot;:\&quot;/\&quot;,\&quot;httpversion\&quot;:\&quot;1.1\&quot;,\&quot;status\&quot;:\&quot;200\&quot;,\&quot;bytes\&quot;:0,\&quot;referer\&quot;:\&quot;-\&quot;,\&quot;http_cookie\&quot;:\&quot;\\\&quot;-\\\&quot;\&quot;,\&quot;ua\&quot;:\&quot;curl/7.29.0\&quot;,\&quot;xff\&quot;:\&quot;-\&quot;,\&quot;request_time\&quot;:\&quot;0.000\&quot;&#125;&quot;</span><br><span class="line">127.0.0.1:6379&gt; LINDEX nginx-access 0 </span><br><span class="line">&quot;&#123;\&quot;@version\&quot;:\&quot;1\&quot;,\&quot;@timestamp\&quot;:\&quot;2016-09-06T15:32:06.000Z\&quot;,\&quot;path\&quot;:\&quot;/var/log/nginx/access.log\&quot;,\&quot;host\&quot;:\&quot;0.0.0.0\&quot;,\&quot;type\&quot;:\&quot;nginx-access\&quot;,\&quot;remote_ip\&quot;:\&quot;10.128.28.196\&quot;,\&quot;ident\&quot;:\&quot;-\&quot;,\&quot;auth\&quot;:\&quot;-\&quot;,\&quot;timestamp\&quot;:\&quot;06/Sep/2016:23:32:06 +0800\&quot;,\&quot;method\&quot;:\&quot;HEAD\&quot;,\&quot;request\&quot;:\&quot;/\&quot;,\&quot;httpversion\&quot;:\&quot;1.1\&quot;,\&quot;status\&quot;:\&quot;200\&quot;,\&quot;bytes\&quot;:0,\&quot;referer\&quot;:\&quot;-\&quot;,\&quot;http_cookie\&quot;:\&quot;\\\&quot;-\\\&quot;\&quot;,\&quot;ua\&quot;:\&quot;curl/7.29.0\&quot;,\&quot;xff\&quot;:\&quot;-\&quot;,\&quot;request_time\&quot;:\&quot;0.000\&quot;&#125;</span><br></pre></td></tr></table></figure><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//elk/redis.png" alt></p><h2 id="安装elasticsearch"><a href="#安装elasticsearch" class="headerlink" title="安装elasticsearch"></a>安装elasticsearch</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat /etc/yum.repos.d/elasticsearch.repo </span><br><span class="line">[elasticsearch-2.x]</span><br><span class="line">name=Elasticsearch repository for 2.x packages</span><br><span class="line">baseurl=https://packages.elastic.co/elasticsearch/2.x/centos</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://packages.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">yum install -y elasticsearch</span><br></pre></td></tr></table></figure><h3 id="elasticsearch修改配置文件"><a href="#elasticsearch修改配置文件" class="headerlink" title="elasticsearch修改配置文件"></a>elasticsearch修改配置文件</h3><blockquote><p>这里先不使用集群,单机做测试</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@office-28-198 ~]# grep -v &quot;^#&quot; /etc/elasticsearch/elasticsearch.yml  | grep -v &quot;^$&quot;</span><br><span class="line">path.data: /data/elk/data</span><br><span class="line">path.logs: /data/elk/logs</span><br><span class="line">bootstrap。mlockall: true</span><br><span class="line">http.port: 9200</span><br><span class="line">network.host: 10.128.28.198</span><br><span class="line">[root@office-28-198 ~]# mkdir -pv /data/elk/&#123;data,logs&#125; </span><br><span class="line">#安装插件</span><br><span class="line">[root@office-28-198 ~]# /usr/share/elasticsearch/bin/plugin install mobz/elasticsearc-head  </span><br><span class="line">[root@office-28-198 ~]# /usr/share/elasticsearch/bin/plugin install lmenezes/elasticsearch-kopf</span><br><span class="line">#启动</span><br><span class="line">[root@office-28-198 ~]# systemctl start elasticsearch </span><br><span class="line">[root@office-28-198 ~]# systemctl status elasticsearch </span><br><span class="line">#测试一下</span><br><span class="line">[root@office-28-198 ~]# curl http://10.128.28.198:9200</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;Black Talon&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">  &quot;version&quot; : &#123;</span><br><span class="line">    &quot;number&quot; : &quot;2.3.5&quot;,</span><br><span class="line">    &quot;build_hash&quot; : &quot;90f439ff60a3c0f497f91663701e64ccd01edbb4&quot;,</span><br><span class="line">    &quot;build_timestamp&quot; : &quot;2016-07-27T10:36:52Z&quot;,</span><br><span class="line">    &quot;build_snapshot&quot; : false,</span><br><span class="line">    &quot;lucene_version&quot; : &quot;5.5.0&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装kinana"><a href="#安装kinana" class="headerlink" title="安装kinana"></a>安装kinana</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost]# cat /etc/yum.repos.d/kibana.repo </span><br><span class="line">[kibana-4.5]</span><br><span class="line">name=Kibana repository for 4.5.x packages</span><br><span class="line">baseurl=http://packages.elastic.co/kibana/4.5/centos</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://packages.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">yum install -y kibana</span><br></pre></td></tr></table></figure><blockquote><p>修改配置,连接elasticsearch</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@office-28-198 ~]# vim /opt/kibana/config/kibana.yml </span><br><span class="line">elasticsearch.url: &quot;http://10.128.28.198:9200&quot;</span><br><span class="line">[root@office-28-198 ~]# systemctl  start kibana</span><br><span class="line">[root@office-28-198 ~]# systemctl  status kibana</span><br></pre></td></tr></table></figure><blockquote><p>访问</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.128.28.198:5601</span><br></pre></td></tr></table></figure><h2 id="如图"><a href="#如图" class="headerlink" title="如图"></a>如图</h2><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//elk/elk11.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//elk/elk12.jpg" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//elk/elk13.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//elk/elk1.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前期规划&quot;&gt;&lt;a href=&quot;#前期规划&quot; class=&quot;headerlink&quot; title=&quot;前期规划&quot;&gt;&lt;/a&gt;前期规划&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;10.128.28.196  (nginx + apahe logstash收集日志(shipper))&lt;/li&gt;
&lt;li&gt;10.128.28.197  (redis + logstash 获取日志(indexer))&lt;/li&gt;
&lt;li&gt;10.128.28.198  (elasticsearch + kibana )&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="elk" scheme="http://budongshu.gitee.io/categories/elk/"/>
    
    
      <category term="elk" scheme="http://budongshu.gitee.io/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>MySQL5.6主从复制及读写分离的实现</title>
    <link href="http://budongshu.gitee.io/2016/09/06/MySQL5.6_%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%8F%8A%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://budongshu.gitee.io/2016/09/06/MySQL5.6_主从复制及读写分离的实现/</id>
    <published>2016-09-06T12:26:00.000Z</published>
    <updated>2020-03-27T06:15:10.537Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL5-6主从复制及读写分离的实现"><a href="#MySQL5-6主从复制及读写分离的实现" class="headerlink" title="MySQL5.6主从复制及读写分离的实现"></a>MySQL5.6主从复制及读写分离的实现</h2><blockquote><p>MySQL 5.6 基于GTID的主从复制及使用amoeba配置实现读写分离**</p></blockquote><a id="more"></a><h2 id="amoeba-简介"><a href="#amoeba-简介" class="headerlink" title="amoeba 简介"></a>amoeba 简介</h2><p>Amoeba(变形虫)项目,该开源框架于2008年开始发布一款 Amoeba forMysql软件。这个软件致力于MySQL的分布式数据库前端代理层，它主要在应用层访问MySQL的时候充当SQL路由功能，专注于分布式数据库代理层（Database Proxy）开发。座落与 Client、DB Server(s)之间,对客户端透明。具有负载均衡、高可用性、SQL 过滤、读写分离、可路由相关的到目标数据库、可并发请求多台数据库合并结果。通过Amoeba你能够完成多数据源的高可用、负载均衡、数据切片的功能，目前Amoeba已在很多企业的生产线上面使用</p><blockquote><p>Amoeba优点：</p></blockquote><p>1.降低费用，简单易用<br>2.提高系统整体可用性<br>3.易于扩展处理能力和系统规模<br>4.可以直接实现读写分离及负载均衡的效果，而不用修改代码</p><blockquote><p>Amoeba 缺点：</p></blockquote><p>1.不支持事务与存储过程<br>2.暂不支持分库分表，amoeba目前只做到分数据库实例<br>3.不适合从amoeba导入数据的场景或者对大数据量查询的query并不合适（比如一次请求返回10w以上的甚至更多的数据场合）</p><h2 id="MySQL-GTID"><a href="#MySQL-GTID" class="headerlink" title="MySQL GTID"></a>MySQL GTID</h2><p>Mysql 5.6的新特性之一，加入了全局事务性ID(GTID:GlobalTransactions Identifier)来强化数据库的主备一致性，故障恢复，以及容错能力;也使得复制功能的配置、监控及管理变得更加易于实现，且更加健壮</p><h2 id="MySQL主从配置"><a href="#MySQL主从配置" class="headerlink" title="MySQL主从配置"></a>MySQL主从配置</h2><blockquote><p>环境介绍：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master~]<span class="comment"># 192.168.17.15</span></span><br><span class="line">[root@slave~]<span class="comment"># 192.168.17.32</span></span><br></pre></td></tr></table></figure><blockquote><p>安装mysql服务器在俩台主机上</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">tar xfmysql<span class="number">-5.6</span><span class="number">.13</span>-linux-glibc2<span class="number">.5</span>-x86_64.tar.gz -C /usr/local</span><br><span class="line">cd /usr/local/</span><br><span class="line">ln -sv mysql<span class="number">-5.6</span><span class="number">.13</span>-linux-glibc2<span class="number">.5</span>-x86_64/mysql</span><br><span class="line">cd mysql</span><br><span class="line">chown –R root.msyql *</span><br><span class="line">cp support-files/mysql.server/etc/init.d/mysqld</span><br><span class="line">chmod +x /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">echo<span class="string">"PATH=/usr/local/mysql/bin:$PATH"</span> &gt; /etc/profile</span><br><span class="line">. /etc/profile</span><br><span class="line">cat /etc/my.cnf | egrep -v <span class="string">"^#"</span>&gt; /root/my.cnf</span><br><span class="line">cp /root/my.cnf /etc/</span><br></pre></td></tr></table></figure><blockquote><p>主/etc/my.cnf的配置文件总汇</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">port            = <span class="number">3306</span></span><br><span class="line">socket          = /tmp/mysql.sock</span><br><span class="line">[mysqld]</span><br><span class="line">port            = <span class="number">3306</span></span><br><span class="line">socket          = /tmp/mysql.sock</span><br><span class="line">skip-external-locking</span><br><span class="line">key_buffer_size = <span class="number">256</span>M</span><br><span class="line">max_allowed_packet = <span class="number">1</span>M</span><br><span class="line">table_open_cache = <span class="number">256</span></span><br><span class="line">sort_buffer_size = <span class="number">1</span>M</span><br><span class="line">read_buffer_size = <span class="number">1</span>M</span><br><span class="line">read_rnd_buffer_size = <span class="number">4</span>M</span><br><span class="line">myisam_sort_buffer_size = <span class="number">64</span>M</span><br><span class="line">thread_cache_size = <span class="number">8</span></span><br><span class="line">query_cache_size= <span class="number">16</span>M</span><br><span class="line">thread_concurrency = <span class="number">8</span></span><br><span class="line">datadir=/mydata/data</span><br><span class="line">innodb_file_per_table = <span class="number">1</span></span><br><span class="line">log-bin=/binlog/mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line">log-slave-updates=true</span><br><span class="line">gtid-mode=on</span><br><span class="line">enforce-gtid-consistency=true</span><br><span class="line">master-info-repository=TABLE</span><br><span class="line">relay-log-info-repository=TABLE</span><br><span class="line">sync-master-info=<span class="number">1</span></span><br><span class="line">slave-parallel-workers=<span class="number">2</span></span><br><span class="line">binlog-checksum=CRC32</span><br><span class="line">master-verify-checksum=<span class="number">1</span></span><br><span class="line">slave-sql-verify-checksum=<span class="number">1</span></span><br><span class="line">binlog-rows-query-log_events=<span class="number">1</span></span><br><span class="line">report-port=<span class="number">3306</span></span><br><span class="line">report-host=<span class="number">192.168</span><span class="number">.17</span><span class="number">.32</span></span><br><span class="line">server-id       = <span class="number">20</span></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = <span class="number">16</span>M</span><br><span class="line">[mysql]</span><br><span class="line">no-auto-rehash</span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = <span class="number">128</span>M</span><br><span class="line">sort_buffer_size = <span class="number">128</span>M</span><br><span class="line">read_buffer = <span class="number">2</span>M</span><br><span class="line">write_buffer = <span class="number">2</span>M</span><br><span class="line">[mysqlhotcopy]</span><br><span class="line">interactive-timeout</span><br></pre></td></tr></table></figure><blockquote><p>初始化mysql并启动</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql.mysql  /mydata/data/</span><br><span class="line">chown -R mysql.mysql  /binlog/</span><br><span class="line">./scripts/mysql_install_db --user=mysql--datadir=/mydata/data/</span><br><span class="line">service mysqld start</span><br><span class="line">```  </span><br><span class="line">&gt;slave服务器安装mysql与master一样 ，但在slave服务器的/etc/my.cnf配置文件中有俩个参数需要更改一下与master服务器不同</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">server-id  =  <span class="number">20</span> </span><br><span class="line">report-host = <span class="number">192.168</span><span class="number">.17</span><span class="number">.32</span></span><br></pre></td></tr></table></figure><blockquote><p>在master服务器上创建slave复制用户并测试连接</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant replication client,replication slave on *.* to <span class="string">'slave'</span>@<span class="string">'192.168.%.%'</span> identified by <span class="string">'budongshu'</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">[root@slave mysql]<span class="comment"># mysql -uslave-pbudongshu -h 192.168.17.15                                  #成功连接</span></span><br></pre></td></tr></table></figure><blockquote><p>启动从节点的复制线程</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@slave mysql]<span class="comment"># mysql</span></span><br><span class="line">mysql&gt; change master tomaster_host=<span class="string">'192.168.17.15'</span>,</span><br><span class="line">   -&gt; master_user='slave',</span><br><span class="line">   -&gt; master_password='budongshu',</span><br><span class="line">   -&gt; master_auto_position=1;</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">mysql&gt; show slave status \G</span><br><span class="line">        Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running:Yes</span><br></pre></td></tr></table></figure><p><em>yes代表启动成功,必须要俩个全部都是yes</em></p><blockquote><p>在master服务器创建数据库查看slave服务器是否更新</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># mysql -e 'create databasebds1'</span></span><br><span class="line">[root@slave mysql]<span class="comment"># mysql -e 'showdatabases'</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| bds                |</span><br><span class="line">| bds1               |                                                                        <span class="comment">#slave服务器同步正常</span></span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| test               |</span><br><span class="line">+--------------------+</span><br><span class="line">mysql&gt; show processlist;                                                                       <span class="comment">#查看gtid进程</span></span><br><span class="line">+----+-------------+-----------+------+---------+---------+-----------------------------------------------------------------------------+------------------+</span><br><span class="line">| Id | User        | Host      | db  | Command | Time    | State                                                                      | Info             |</span><br><span class="line">+----+-------------+-----------+------+---------+---------+-----------------------------------------------------------------------------+------------------+</span><br><span class="line">|  <span class="number">4</span>| system user |           | NULL |Connect |     <span class="number">395</span> | Waiting <span class="keyword">for</span> master tosend event                                           | NULL             |</span><br><span class="line">|  <span class="number">5</span>| system user |           | NULL |Connect |     <span class="number">225</span> | Slave has read allrelay log; waiting <span class="keyword">for</span> the slave I/O thread to update it | NULL             |</span><br><span class="line">|  <span class="number">6</span>| system user |           | NULL |Connect | <span class="number">-252924</span> | Waiting <span class="keyword">for</span> an event <span class="keyword">from</span> Coordinator                                       | NULL             |</span><br><span class="line">|  <span class="number">7</span>| system user |           | NULL |Connect | <span class="number">-253320</span> | Waiting <span class="keyword">for</span> an event <span class="keyword">from</span> Coordinator                                       | NULL             |</span><br><span class="line">|  <span class="number">9</span>| root        | localhost | NULL |Query   |       <span class="number">0</span> | init                                                                        |show processlist |</span><br><span class="line">+----+-------------+-----------+------+---------+---------+-----------------------------------------------------------------------------+------------------+</span><br></pre></td></tr></table></figure><h2 id="读写分离配置"><a href="#读写分离配置" class="headerlink" title="读写分离配置"></a>读写分离配置</h2><p>基于前面做的mysql主从架构，然后在前端加一台服务器，用于实现mysql的读分离，</p><blockquote><p>安装jdk    (bin结尾的包，rpm包都可以,可以去oracle官网下载)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@amoeba ~]<span class="comment"># chmod +x  jdk-6u31-linux-x64-rpm.bin</span></span><br><span class="line">[root@amoeba ~]<span class="comment">#. /jdk-6u31-linux-x64-rpm.bin</span></span><br><span class="line">[root@amoeba ~]<span class="comment"># vim /etc/profile.d/java.sh</span></span><br><span class="line">export JAVA_HOME=/usr/java/latest</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">[root@amoeba ~]<span class="comment">#. /etc/profile.d/java.sh</span></span><br><span class="line">[root@amoeba ~]<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">"1.6.0_31"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build1<span class="number">.6</span><span class="number">.0</span>_31-b04)</span><br><span class="line">Java HotSpot(TM) <span class="number">64</span>-Bit Server VM (build20<span class="number">.6</span>-b01, mixed mode)</span><br></pre></td></tr></table></figure><blockquote><p>安装amoeba</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@amoeba ~]<span class="comment"># mkdir /usr/local/amoeba</span></span><br><span class="line">[root@amoeba ~]<span class="comment"># tar xf  amoeba-mysql-binary-2.2.0.tar.gz -C /usr/local/</span></span><br><span class="line">[root@amoeba ~]<span class="comment"># vi/etc/profile.d/amoeba.sh</span></span><br><span class="line">export AMOEBA_HOME=/usr/local/amoeba</span><br><span class="line">export PATH=$AMOEBA_HOME/bin:$PATH</span><br><span class="line">[root@amoeba ~]<span class="comment"># .  /etc/profile.d/amoeba.sh</span></span><br><span class="line">[root@amoeba ~]<span class="comment"># amoeba                                                                          #出现下边信息代表安装成功</span></span><br><span class="line">amoeba start|stop</span><br></pre></td></tr></table></figure><blockquote><p>授权MySQL用户，用于实现前端amoeba连接</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all on *.* to<span class="string">'amoeba'</span>@<span class="string">'192.168.%.%'</span> identified by <span class="string">'amoebapass'</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><blockquote><p>配置amoeba</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@amoeba ~]<span class="comment"># cd /usr/local/amoeba/conf/</span></span><br><span class="line">amoeba.xml                                                                                       <span class="comment">#定义管理信息与读写分离</span></span><br><span class="line">dbServers.xml                                                                                    <span class="comment">#定义后端服务器的配置</span></span><br></pre></td></tr></table></figure><blockquote><p>配置文件dbServers.xml介绍</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">[root@amoeba conf]# vi dbServers.xml</span><br><span class="line"><span class="meta">&lt;?xml version="1.0"encoding="gbk"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE amoeba:dbServers SYSTEM"dbserver.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">amoeba:dbServersxmlns:amoeba="http:</span>//<span class="attr">amoeba.meidusa.com</span>/"&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        Each dbServer needs tobe configured into a Pool,</span></span><br><span class="line"><span class="comment">                        If you need toconfigure multiple dbServer with load balancing that can be simplified by thefollowing configuration:</span></span><br><span class="line"><span class="comment">                         add attribute with name virtual ="true" in dbServer, but the configuration does not allow the elementwith name factoryConfig</span></span><br><span class="line"><span class="comment">                         such as 'multiPool'dbServer</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dbServer</span> <span class="attr">name</span>=<span class="string">"abstractServer"</span> <span class="attr">abstractive</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">factoryConfigclass="com.meidusa.amoeba.mysql.net.MysqlServerConnectionFactory"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="manager"</span>&gt;</span>$&#123;defaultManager&#125;<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="sendBufferSize"</span>&gt;</span>64<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="receiveBufferSize"</span>&gt;</span>128<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- mysql port--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="port"</span>&gt;</span>3306<span class="tag">&lt;/<span class="name">property</span>&gt;</span>                    #连接后端mysql服务器的端口</span><br><span class="line">                        <span class="comment">&lt;!-- mysql schema--&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">propertyname="schema"</span>&gt;</span>test<span class="tag">&lt;/<span class="name">property</span>&gt;</span>                   #连接后端mysql服务器的默认库</span><br><span class="line">                        <span class="comment">&lt;!-- mysql user--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="user"</span>&gt;</span>amoeba<span class="tag">&lt;/<span class="name">property</span>&gt;</span>                  #连接后端mysql服务器的用户名</span><br><span class="line">                        <span class="comment">&lt;!--  mysql password --&gt;</span>                                #把password最后的注释(--&gt;)这个符号去掉跟上边一样</span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="password"</span>&gt;</span>amoebapass<span class="tag">&lt;/<span class="name">propert</span>&gt;</span>           #连接后端mysql服务器的密码</span><br><span class="line">                <span class="tag">&lt;/<span class="name">factoryConfig</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">poolConfigclass="com.meidusa.amoeba.net.poolable.PoolableObjectPool"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="maxActive"</span>&gt;</span>500<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="maxIdle"</span>&gt;</span>500<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="minIdle"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="minEvictableIdleTimeMillis"</span>&gt;</span>600000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="timeBetweenEvictionRunsMillis"</span>&gt;</span>600000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="testOnBorrow"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="testOnReturn"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="testWhileIdle"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">poolConfig</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dbServer</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dbServer</span> <span class="attr">name</span>=<span class="string">"master"</span> <span class="attr">parent</span>=<span class="string">"abstractServer"</span>&gt;</span>                     #定义master服务器的节点 name可以自定义</span><br><span class="line">                <span class="tag">&lt;<span class="name">factoryConfig</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- mysql ip --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="ipAddress"</span>&gt;</span>192.168.17.15<span class="tag">&lt;/<span class="name">property</span>&gt;</span>  #定义master服务器的IP地址</span><br><span class="line">                <span class="tag">&lt;/<span class="name">factoryConfig</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dbServer</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dbServer</span> <span class="attr">name</span>=<span class="string">"slave"</span> <span class="attr">parent</span>=<span class="string">"abstractServer"</span>&gt;</span>                      #定义slave服务器的节点</span><br><span class="line">                <span class="tag">&lt;<span class="name">factoryConfig</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- mysql ip --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="ipAddress"</span>&gt;</span>192.168.17.32<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">factoryConfig</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dbServer</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dbServer</span> <span class="attr">name</span>=<span class="string">"multiPool"</span> <span class="attr">virtual</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">poolConfigclass="com.meidusa.amoeba.server.MultipleServerPool"</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- Load balancingstrategy: 1=ROUNDROBIN , 2=WEIGHTBASED , 3=HA--&gt;</span>    #负载均衡算法</span><br><span class="line">                        <span class="tag">&lt;<span class="name">propertyname="loadbalance"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">property</span>&gt;</span>                               #定义选择哪一种算法</span><br><span class="line">                        <span class="comment">&lt;!-- Separated bycommas,such as: server1,server2,server1 --&gt;</span>           #定义数据库池，用于实现负载均衡，“slave“为自定义的数据库节点，可以写多个用”，”隔开</span><br><span class="line">                        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolNames"</span>&gt;</span>slave<span class="tag">&lt;/<span class="name">property</span></span></span><br><span class="line">                &lt;/poolConfig&gt;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">dbServer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">amoeba:dbServers</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>配置文件amoeba.xml 介绍</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">[root@amoeba conf]<span class="comment"># vi amoeba.xml</span></span><br><span class="line">&lt;?xml version="1.0"encoding="gbk"?&gt;</span><br><span class="line">&lt;!DOCTYPE amoeba:configuration SYSTEM<span class="string">"amoeba.dtd"</span>&gt;</span><br><span class="line">&lt;amoeba:configurationxmlns:amoeba=<span class="string">"http://amoeba.meidusa.com/"</span>&gt;</span><br><span class="line">       &lt;proxy&gt;</span><br><span class="line">                &lt;!-- service <span class="class"><span class="keyword">class</span> <span class="title">mustimplements</span> <span class="title">com</span>.<span class="title">meidusa</span>.<span class="title">amoeba</span>.<span class="title">service</span>.<span class="title">Service</span> --&gt;</span></span><br><span class="line"><span class="class">               &lt;servicename="Amoeba for Mysql"class="com.meidusa.amoeba.net.ServerableConnectionManager"&gt;</span></span><br><span class="line"><span class="class">                        &lt;!-- port --&gt;</span></span><br><span class="line"><span class="class">                        &lt;propertyname="port"&gt;3306&lt;/property&gt;                        #定义amoeba代理服务器对外监听的端口</span></span><br><span class="line"><span class="class">                        &lt;!-- bind ipAddress--&gt;</span></span><br><span class="line"><span class="class">                        &lt;!--</span></span><br><span class="line"><span class="class">                        &lt;propertyname="ipAddress"&gt;192.168.17.11&lt;/property&gt;          #定义amoeba代理服务器对外连接的监听ip      </span></span><br><span class="line"><span class="class">                         --&gt;</span></span><br><span class="line"><span class="class">                        &lt;propertyname="manager"&gt;$&#123;clientConnectioneManager&#125;&lt;/property&gt;</span></span><br><span class="line"><span class="class">                        &lt;propertyname="connectionFactory"&gt;</span></span><br><span class="line"><span class="class">                                &lt;beanclass="com.meidusa.amoeba.mysql.net.MysqlClientConnectionFactory"&gt;</span></span><br><span class="line"><span class="class">                                       &lt;property name="sendBufferSize"&gt;128&lt;/property&gt;</span></span><br><span class="line"><span class="class">                                       &lt;property name="receiveBufferSize"&gt;64&lt;/property&gt;</span></span><br><span class="line"><span class="class">                                &lt;/bean&gt;</span></span><br><span class="line"><span class="class">                        &lt;/property&gt;</span></span><br><span class="line"><span class="class">                        &lt;propertyname="authenticator"&gt;</span></span><br><span class="line"><span class="class">                                &lt;beanclass="com.meidusa.amoeba.mysql.server.MysqlClientAuthenticator"&gt;   #定义客户端使用的用户名和密码</span></span><br><span class="line"><span class="class">                                       &lt;property name="user"&gt;admin&lt;/property&gt;                               </span></span><br><span class="line"><span class="class">                                       &lt;property name="password"&gt;password&lt;/property&gt;</span></span><br><span class="line"><span class="class">                                       &lt;property name="filter"&gt;</span></span><br><span class="line"><span class="class">                                               &lt;beanclass="com.meidusa.amoeba.server.IPAccessController"&gt;</span></span><br><span class="line"><span class="class">                                                       &lt;propertyname="ipFile"&gt;$&#123;amoeba.home&#125;/conf/access_list.conf&lt;/property&gt;</span></span><br><span class="line"><span class="class">                                               &lt;/bean&gt;</span></span><br><span class="line"><span class="class">                                       &lt;/property&gt;</span></span><br><span class="line"><span class="class">                                &lt;/bean&gt;</span></span><br><span class="line"><span class="class">                        &lt;/property&gt;</span></span><br><span class="line"><span class="class">                &lt;/service&gt;</span></span><br><span class="line"><span class="class">                &lt;!-- server class mustimplements com.meidusa.amoeba.service.Service --&gt;</span></span><br><span class="line"><span class="class">                &lt;service name="AmoebaMonitor Server"class="com.meidusa.amoeba.monitor.MonitorServer"&gt;</span></span><br><span class="line"><span class="class">                        &lt;!-- port --&gt;</span></span><br><span class="line"><span class="class">                        &lt;!--  default value:</span> random number</span><br><span class="line">                        &lt;propertyname="port"&gt;9066&lt;/property&gt;</span><br><span class="line">                        --&gt;</span><br><span class="line">                        &lt;!-- bind ipAddress--&gt;</span><br><span class="line">                        &lt;propertyname="ipAddress"&gt;127.0.0.1&lt;/property&gt;</span><br><span class="line">                        &lt;propertyname="daemon"&gt;true&lt;/property&gt;</span><br><span class="line">                        &lt;propertyname="manager"&gt;$&#123;clientConnectioneManager&#125;&lt;/property&gt;</span><br><span class="line">                        &lt;propertyname=<span class="string">"connectionFactory"</span>&gt;</span><br><span class="line">                                &lt;beanclass="com.meidusa.amoeba.monitor.net.MonitorClientConnectionFactory"&gt;&lt;/bean&gt;</span><br><span class="line">                        &lt;/property&gt;</span><br><span class="line">                &lt;/service&gt;</span><br><span class="line">                &lt;runtimeclass=<span class="string">"com.meidusa.amoeba.mysql.context.MysqlRuntimeContext"</span>&gt;</span><br><span class="line">                       &lt;!-- proxy servernet IO Read thread size --&gt;</span><br><span class="line">                        &lt;propertyname="readThreadPoolSize"&gt;20&lt;/property&gt;</span><br><span class="line">                        &lt;!-- proxy serverclient process thread size --&gt;</span><br><span class="line">                        &lt;propertyname="clientSideThreadPoolSize"&gt;30&lt;/property&gt;</span><br><span class="line">                        &lt;!-- mysql serverdata packet process thread size --&gt;</span><br><span class="line">                        &lt;propertyname="serverSideThreadPoolSize"&gt;30&lt;/property&gt;</span><br><span class="line">                        &lt;!-- per connectioncache prepared statement size  --&gt;</span><br><span class="line">                        &lt;propertyname="statementCacheSize"&gt;500&lt;/property&gt;</span><br><span class="line">                        &lt;!-- query timeout(default: 60 second , TimeUnit:second) --&gt;</span><br><span class="line">                        &lt;propertyname="queryTimeout"&gt;60&lt;/property&gt;</span><br><span class="line">                &lt;/runtime&gt;</span><br><span class="line">       &lt;/proxy&gt;</span><br><span class="line">       &lt;!--</span><br><span class="line">                Each ConnectionManager willstart <span class="keyword">as</span> thread</span><br><span class="line">                manager responsible <span class="keyword">for</span> theConnection IO read , Death Detection</span><br><span class="line">       --&gt;</span><br><span class="line">       &lt;connectionManagerList&gt;</span><br><span class="line">                &lt;connectionManagername="clientConnectioneManager"class="com.meidusa.amoeba.net.MultiConnectionManagerWrapper"&gt;</span><br><span class="line">                        &lt;propertyname="subManagerClassName"&gt;com.meidusa.amoeba.net.ConnectionManager&lt;/property&gt;</span><br><span class="line">                        &lt;!--</span><br><span class="line">                          default value isavaliable Processors</span><br><span class="line">                        &lt;propertyname="processors"&gt;5&lt;/property&gt;</span><br><span class="line">                         --&gt;</span><br><span class="line">                &lt;/connectionManager&gt;</span><br><span class="line">                &lt;connectionManagername="defaultManager" class="com.meidusa.amoeba.net.MultiConnectionManagerWrapper"&gt;</span><br><span class="line">                        &lt;propertyname="subManagerClassName"&gt;com.meidusa.amoeba.net.AuthingableConnectionManager&lt;/property&gt;</span><br><span class="line">                        &lt;!--</span><br><span class="line">                          default value <span class="keyword">is</span> avaliableProcessors</span><br><span class="line">                        &lt;propertyname="processors"&gt;5&lt;/property&gt;</span><br><span class="line">                         --&gt;</span><br><span class="line">                &lt;/connectionManager&gt;</span><br><span class="line">       &lt;/connectionManagerList&gt;</span><br><span class="line">                &lt;!-- default using fileloader --&gt;</span><br><span class="line">       &lt;dbServerLoader class="com.meidusa.amoeba.context.DBServerConfigFileLoader"&gt;</span><br><span class="line">                &lt;propertyname="configFile"&gt;$&#123;amoeba.home&#125;/conf/dbServers.xml&lt;/property&gt;</span><br><span class="line">       &lt;/dbServerLoader&gt;</span><br><span class="line">       &lt;queryRouterclass=<span class="string">"com.meidusa.amoeba.mysql.parser.MysqlQueryRouter"</span>&gt;</span><br><span class="line">                &lt;propertyname=<span class="string">"ruleLoader"</span>&gt;</span><br><span class="line">                        &lt;beanclass=<span class="string">"com.meidusa.amoeba.route.TableRuleFileLoader"</span>&gt;</span><br><span class="line">                                &lt;propertyname="ruleFile"&gt;$&#123;amoeba.home&#125;/conf/rule.xml&lt;/property&gt;</span><br><span class="line">                                &lt;propertyname="functionFile"&gt;$&#123;amoeba.home&#125;/conf/ruleFunctionMap.xml&lt;/property&gt;</span><br><span class="line">                        &lt;/bean&gt;</span><br><span class="line">                &lt;/property&gt;</span><br><span class="line">                &lt;propertyname="sqlFunctionFile"&gt;$&#123;amoeba.home&#125;/conf/functionMap.xml&lt;/property&gt;</span><br><span class="line">                &lt;propertyname="LRUMapSize"&gt;1500&lt;/property&gt;</span><br><span class="line">                &lt;propertyname="defaultPool"&gt;master&lt;/property&gt;      #把 &lt;!--   --&gt;注释去掉使其配置生效, 定义默认池，默认会在此服务器上执行</span><br><span class="line">                &lt;property name="writePool"&gt;master&lt;/property&gt;       #定义只写服务器    </span><br><span class="line">                &lt;propertyname="readPool"&gt;slave&lt;/property&gt;          #定义只读服务器，也可以在dbServer.xml中定义数据池的名称，实现负载均衡                                      </span><br><span class="line"></span><br><span class="line">                &lt;propertyname="needParse"&gt;true&lt;/property&gt;                            </span><br><span class="line">       &lt;/queryRouter&gt;</span><br><span class="line">&lt;/amoeba:configuration&gt;</span><br></pre></td></tr></table></figure><blockquote><p>启动amoeba服务并测试</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@amoeba conf]<span class="comment"># amoeba start &amp;                                                #后台启动amoeba</span></span><br><span class="line">[root@amoeba conf]<span class="comment"># ss -tunlp | grep 3306                                         #启动正常</span></span><br><span class="line">tcp   LISTEN     <span class="number">0</span>      <span class="number">128</span>                   :::<span class="number">3306</span>                 :::*      users:((<span class="string">"java"</span>,<span class="number">1796</span>,<span class="number">52</span>))</span><br></pre></td></tr></table></figure><blockquote><p>连接amoeba代理服务器，执行插入和查询操作，分别在后端俩台服务器进行抓包，查看是否实现读写分离</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database bds2;</span><br><span class="line">mysql&gt; use bds2</span><br><span class="line">mysql&gt; create table tb2 (id int ) ;</span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> tb2;</span><br></pre></td></tr></table></figure><h2 id="tcpdump抓包查看检测"><a href="#tcpdump抓包查看检测" class="headerlink" title="tcpdump抓包查看检测"></a>tcpdump抓包查看检测</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># tcpdump -i eth0 -s0 -nn -A tcp dst port 3306 and dst  host192.168.17.15</span></span><br><span class="line">  </span><br><span class="line"><span class="number">13</span>:<span class="number">25</span>:<span class="number">46.488469</span> IP <span class="number">192.168</span><span class="number">.17</span><span class="number">.11</span><span class="number">.39787</span> &gt;<span class="number">192.168</span><span class="number">.17</span><span class="number">.15</span><span class="number">.3306</span>: Flags [P.], seq <span class="number">171</span>:<span class="number">202</span>, ack <span class="number">444</span>, win <span class="number">490</span>, options[nop,nop,TS val <span class="number">8050703</span> ecr <span class="number">15047099</span>], length <span class="number">31</span></span><br><span class="line">E..S4  @.@.c1.........k....z..y.............</span><br><span class="line">.z...........create table tb2 (id int )                                     <span class="comment">###写请求在master服务器上执行</span></span><br><span class="line"><span class="number">13</span>:<span class="number">25</span>:<span class="number">46.523028</span> IP <span class="number">192.168</span><span class="number">.17</span><span class="number">.32</span><span class="number">.41112</span> &gt;<span class="number">192.168</span><span class="number">.17</span><span class="number">.15</span><span class="number">.3306</span>: Flags [.], ack <span class="number">1661</span>, win <span class="number">1117</span>, options [nop,nop,TS val41437531 ecr <span class="number">15058573</span>], length <span class="number">0</span></span><br><span class="line">E.<span class="number">.4</span>..@.@.y&#123;... ........M.$...<span class="number">.4</span>...].   .....</span><br><span class="line">.xI[....</span><br><span class="line"><span class="number">13</span>:<span class="number">25</span>:<span class="number">46.523050</span> IP <span class="number">192.168</span><span class="number">.17</span><span class="number">.11</span><span class="number">.39787</span> &gt;<span class="number">192.168</span><span class="number">.17</span><span class="number">.15</span><span class="number">.3306</span>: Flags [.], ack <span class="number">455</span>, win <span class="number">490</span>, options [nop,nop,TS val <span class="number">8050737</span>ecr <span class="number">15058574</span>], length <span class="number">0</span></span><br><span class="line">E.<span class="number">.44</span></span><br><span class="line"><span class="meta">@.@.cO.........k....z..y......Q......</span></span><br><span class="line">.z<span class="number">.1</span>....</span><br><span class="line"> </span><br><span class="line">[root@slave ~]<span class="comment"># tcpdump -i eth0 -s0 -nn -Atcp dst  port 3306 and dst  host 192.168.17.32</span></span><br><span class="line"> </span><br><span class="line"><span class="number">15</span>:<span class="number">01</span>:<span class="number">20.243577</span> IP <span class="number">192.168</span><span class="number">.17</span><span class="number">.11</span><span class="number">.54071</span> &gt;<span class="number">192.168</span><span class="number">.17</span><span class="number">.32</span><span class="number">.3306</span>: Flags [.], ack <span class="number">196</span>, win <span class="number">457</span>, options [nop,nop,TS val8129871 ecr <span class="number">41516665</span>], length <span class="number">0</span></span><br><span class="line">E.<span class="number">.4</span>@.@.@.V&#125;....... <span class="number">.7</span>..&#125;.      ....i...........</span><br><span class="line">O.y~y</span><br><span class="line"><span class="number">15</span>:<span class="number">01</span>:<span class="number">20.246139</span> IP <span class="number">192.168</span><span class="number">.17</span><span class="number">.11</span><span class="number">.54071</span> &gt;<span class="number">192.168</span><span class="number">.17</span><span class="number">.32</span><span class="number">.3306</span>: Flags [P.], seq <span class="number">133</span>:<span class="number">155</span>, ack <span class="number">196</span>, win <span class="number">457</span>, options[nop,nop,TS val <span class="number">8129874</span> ecr <span class="number">41516665</span>], length <span class="number">22</span></span><br><span class="line">E..J@.@.@.Vf....... <span class="number">.7</span>..&#125;.      ....i...........</span><br><span class="line">R.y~y.....select * <span class="keyword">from</span> tb2                                                 <span class="comment">###读请求在slave服务器上执行</span></span><br><span class="line"><span class="number">15</span>:<span class="number">01</span>:<span class="number">20.287625</span> IP <span class="number">192.168</span><span class="number">.17</span><span class="number">.11</span><span class="number">.54071</span> &gt;<span class="number">192.168</span><span class="number">.17</span><span class="number">.32</span><span class="number">.3306</span>: Flags [.], ack <span class="number">259</span>, win <span class="number">457</span>, options [nop,nop,TS val8129915 ecr <span class="number">41516669</span>], length <span class="number">0</span></span><br><span class="line">E.<span class="number">.4</span>@.@.@.V&#123;....... <span class="number">.7</span>..&#125;.      ..........&#125;.....</span><br><span class="line">&#123;.y~&#125;</span><br></pre></td></tr></table></figure><p><em>由上图可知抓包实现了读写分离的效果</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MySQL5-6主从复制及读写分离的实现&quot;&gt;&lt;a href=&quot;#MySQL5-6主从复制及读写分离的实现&quot; class=&quot;headerlink&quot; title=&quot;MySQL5.6主从复制及读写分离的实现&quot;&gt;&lt;/a&gt;MySQL5.6主从复制及读写分离的实现&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;MySQL 5.6 基于GTID的主从复制及使用amoeba配置实现读写分离**&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://budongshu.gitee.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://budongshu.gitee.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>centos7编译安装zabbix3.0</title>
    <link href="http://budongshu.gitee.io/2016/09/02/Centos7_install%E7%BC%96%E8%AF%91zabbix3.0/"/>
    <id>http://budongshu.gitee.io/2016/09/02/Centos7_install编译zabbix3.0/</id>
    <published>2016-09-02T12:26:20.000Z</published>
    <updated>2020-03-27T06:18:39.869Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix </p><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# uname -a </span><br><span class="line">Linux localhost.localdomain 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@localhost ~]# cat /etc/redhat-release </span><br><span class="line">CentOS Linux release 7.2.1511 (Core)</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="安装yum源"><a href="#安装yum源" class="headerlink" title="安装yum源"></a>安装yum源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# wget -P /etc/yum.repos.d http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">[root@localhost ~]# yum install -y epel*</span><br></pre></td></tr></table></figure><h2 id="lamp环境"><a href="#lamp环境" class="headerlink" title="lamp环境"></a>lamp环境</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><blockquote><p> zabbix3.0不能直接在centos6上以rpm包的形式安装,所以系统环境是centos7的,如果要在centos6上<br>安装采用编译的形式安装,这里centos7,我也使用编译安装的方式,同时zabbix3.0要求php的版本比较高<br>注意php的版本</p></blockquote><h3 id="centos7的mysql用的是mariadb"><a href="#centos7的mysql用的是mariadb" class="headerlink" title="centos7的mysql用的是mariadb"></a>centos7的mysql用的是mariadb</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum search mysql |grep mariadb</span><br><span class="line">Repository base is listed more than once in the configuration</span><br><span class="line">Repository updates is listed more than once in the configuration</span><br><span class="line">Repository extras is listed more than once in the configuration</span><br><span class="line">Repository centosplus is listed more than once in the configuration</span><br><span class="line">mariadb.x86_64 : A community developed branch of MySQL</span><br><span class="line">mariadb-devel.i686 : Files for development of MariaDB/MySQL applications</span><br><span class="line">mariadb-devel.x86_64 : Files for development of MariaDB/MySQL applications</span><br><span class="line">mariadb-libs.i686 : The shared libraries required for MariaDB/MySQL clients</span><br><span class="line">mariadb-libs.x86_64 : The shared libraries required for MariaDB/MySQL clients</span><br></pre></td></tr></table></figure><h3 id="安装lamp"><a href="#安装lamp" class="headerlink" title="安装lamp"></a>安装lamp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum -y install mariadb mariadb-server php php-mysql httpd mysql-devel libxml2-devel \</span><br><span class="line">libcurl-devel net-snmp-devel  libxml2-devel libXpm php-bcmath php-gd php-mbstring php-xml t1lib</span><br></pre></td></tr></table></figure><h3 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h3><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/1.png" alt></p><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">启动mariadb</span><br><span class="line">[root@localhost ~]# systemctl enable mariadb </span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/mariadb.service to /usr/lib/systemd/system/mariadb.service.</span><br><span class="line">[root@localhost ~]# systemctl start mariadb</span><br></pre></td></tr></table></figure><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/2.png" alt></p><h2 id="配置设置"><a href="#配置设置" class="headerlink" title="配置设置"></a>配置设置</h2><h3 id="数据库root密码和初始化安全设置"><a href="#数据库root密码和初始化安全设置" class="headerlink" title="数据库root密码和初始化安全设置"></a>数据库root密码和初始化安全设置</h3><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/3.png" alt></p><ul><li>第一个红框表示: 现在的默认的root用户的密码,直接回车就好.因为默认root用户没有密码 </li><li>第二个红框表示: 为root设置一个密码</li></ul><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/4.png" alt> </p><ul><li>第一个 是否移除匿名用户 </li><li>第二个 是否允许root远程访问</li><li>第三个 移除test测试数据库</li><li>第四个 重新加载</li></ul><h3 id="建立zabbix数据库和授权访问"><a href="#建立zabbix数据库和授权访问" class="headerlink" title="建立zabbix数据库和授权访问"></a>建立zabbix数据库和授权访问</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mysql -uroot -pmysql  -e &quot;create database zabbix default character set utf8 collate utf8_bin;&quot; </span><br><span class="line">[root@localhost ~]# mysql -uroot -pmysql  -e &quot;grant all on zabbix.* to &apos;zabbix&apos;@localhost identified by &apos;zabbix&apos;;&quot;</span><br></pre></td></tr></table></figure><h3 id="测试配置"><a href="#测试配置" class="headerlink" title="测试配置"></a>测试配置</h3><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/5.png" alt> 　</p><h3 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd</span><br></pre></td></tr></table></figure><p><strong>lamp 安装完毕</strong></p><h2 id="安装编译zabbix3-0"><a href="#安装编译zabbix3-0" class="headerlink" title="安装编译zabbix3.0"></a>安装编译zabbix3.0</h2><h3 id="下载加压"><a href="#下载加压" class="headerlink" title="下载加压"></a>下载加压</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# wget http://jaist.dl.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/3.0.4/zabbix-3.0.4.tar.gz</span><br><span class="line">[root@localhost ~]# tar xf zabbix-3.0.4.tar.gz  </span><br><span class="line">[root@localhost ~]# cd /root/zabbix-3.0.4/database/mysql</span><br></pre></td></tr></table></figure><h3 id="拷贝sql到zabbix数据库"><a href="#拷贝sql到zabbix数据库" class="headerlink" title="拷贝sql到zabbix数据库"></a>拷贝sql到zabbix数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mysql]# mysql -uzabbix  -pzabbix  zabbix &lt; schema.sql   </span><br><span class="line">[root@localhost mysql]# mysql -uzabbix  -pzabbix  zabbix &lt; images.sql </span><br><span class="line">[root@localhost mysql]# mysql -uzabbix  -pzabbix  zabbix &lt; data.sql</span><br></pre></td></tr></table></figure><h3 id="编译zabbix3-0"><a href="#编译zabbix3-0" class="headerlink" title="编译zabbix3.0"></a>编译zabbix3.0</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost zabbix-3.0.4]# ./configure  --prefix=/usr/local/zabbix --enable-server --enable-agent --with-mysql --with-net-snmp --with-libcurl --enable-proxy --with-libxml2</span><br><span class="line">[root@localhost zabbix-3.0.4]# make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="修改zabbix配置文件"><a href="#修改zabbix配置文件" class="headerlink" title="修改zabbix配置文件"></a>修改zabbix配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# grep -v &quot;^#&quot; /usr/local/zabbix/etc/zabbix_server.conf  |grep -v &quot;^$&quot;</span><br><span class="line">LogFile=/tmp/zabbix_server.log</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line">DBPort=3306</span><br><span class="line">StartPollers=5</span><br><span class="line">ListenIP=192.168.199.211</span><br><span class="line">Timeout=4</span><br><span class="line">AlertScriptsPath=/usr/local/zabbix/share/zabbix/alertscripts</span><br><span class="line">ExternalScripts=/usr/local/zabbix/share/zabbix/externalscripts</span><br><span class="line">LogSlowQueries=3000</span><br></pre></td></tr></table></figure><h3 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# sed -i &apos;$a /usr/local/zabbix/sbin/zabbix_server  -c /usr/local/zabbix/etc/zabbix_server.conf&apos; /etc/rc.local </span><br><span class="line">[root@localhost ~]# chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><h3 id="拷贝页面文件到站点目录"><a href="#拷贝页面文件到站点目录" class="headerlink" title="拷贝页面文件到站点目录"></a>拷贝页面文件到站点目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mkdir /data/webroot -pv     #把zabbix站点放到此目录</span><br><span class="line">[root@localhost ~]# cp -r /root/zabbix-3.0.4/frontends/php/ /data/webroot/zabbix</span><br><span class="line">重启httpd</span><br><span class="line">[root@localhost zabbix]# service httpd restart</span><br></pre></td></tr></table></figure><h3 id="修改httpd配置文件"><a href="#修改httpd配置文件" class="headerlink" title="修改httpd配置文件"></a>修改httpd配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cd /etc/httpd/conf.d/</span><br><span class="line">[root@localhost conf.d]# cat zabbix.conf </span><br><span class="line">&lt;VirtualHost 192.168.199.211:80&gt;</span><br><span class="line">        DocumentRoot /data/webroot/zabbix</span><br><span class="line">        ServerName bds.zabbix.com </span><br><span class="line">        DirectoryIndex index.php index.html </span><br><span class="line">        ErrorLog  logs/zabbix-error.log</span><br><span class="line">        CustomLog logs/zabbix-access.log common</span><br><span class="line">&lt;Directory &quot;/data/webroot/zabbix&quot;&gt;</span><br><span class="line">    Options None</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Require ip 192.168.0     #访问控制ip</span><br><span class="line">    Require all granted</span><br><span class="line">   </span><br><span class="line">    &lt;IfModule mod_php5.c&gt;</span><br><span class="line">        php_value max_execution_time 300</span><br><span class="line">        php_value memory_limit 128M</span><br><span class="line">        php_value post_max_size 16M</span><br><span class="line">        php_value upload_max_filesize 2M</span><br><span class="line">        php_value max_input_time 300</span><br><span class="line">        php_value always_populate_raw_post_data -1</span><br><span class="line">       php_value date.timezone Asia/Chongqing</span><br><span class="line">     &lt;/IfModule&gt;</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">再次重启httpd</span><br><span class="line">[root@localhost zabbix]# service httpd restart</span><br></pre></td></tr></table></figure><h2 id="web界面安装"><a href="#web界面安装" class="headerlink" title="web界面安装"></a>web界面安装</h2><blockquote><p>在windows主机做本地hosts解析<br>路径: C:\Windows\System32\drivers\etc 修改hosts文件<br>在最后加一条 192.168.199.211 bds.zabbix.com  ###请换成你自己的ip地址 </p></blockquote><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/11.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/1111.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/12.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/13.png" alt> 　</p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/14.png" alt>  　 　</p><p><strong>按照提示download下载配置文件,然后上传到/data/webroot/zabbix/conf/ 目录下<br>再把zabbix.conf.php 里面<br>$ZBX_SERVER      = ‘localhost’;<br>改成自己的ip地址<br>$ZBX_SERVER      = ‘192.168.199.211’;<br>注意: 需要跟你的zabbix_server.conf配置文件中,配置的主机地址一致<br>最后刷新页面</strong>   </p><p>　</p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/15.png" alt></p><p><img src="http://7xnvvj.com1.z0.glb.clouddn.com//zabbix3.0/16.png" alt> 　</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zabbix &lt;/p&gt;&lt;h2 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# uname -a &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux localhost.localdomain 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# cat /etc/redhat-release &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CentOS Linux release 7.2.1511 (Core)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="zabbix" scheme="http://budongshu.gitee.io/categories/zabbix/"/>
    
    
      <category term="zabbix" scheme="http://budongshu.gitee.io/tags/zabbix/"/>
    
  </entry>
  
</feed>
